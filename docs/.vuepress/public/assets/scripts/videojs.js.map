{"version":3,"file":"./scripts/videojs-3bdab1163ca0853dd65f.js","mappings":"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","sources":["webpack://aic/./node_modules/@videojs/xhr/lib/http-handler.js","webpack://aic/./node_modules/@videojs/xhr/lib/index.js","webpack://aic/./node_modules/@videojs/xhr/lib/interceptors.js","webpack://aic/./node_modules/@videojs/xhr/lib/retry.js","webpack://aic/./node_modules/@xmldom/xmldom/lib/conventions.js","webpack://aic/./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack://aic/./node_modules/@xmldom/xmldom/lib/dom.js","webpack://aic/./node_modules/@xmldom/xmldom/lib/entities.js","webpack://aic/./node_modules/@xmldom/xmldom/lib/index.js","webpack://aic/./node_modules/@xmldom/xmldom/lib/sax.js","webpack://aic/./node_modules/fontfaceonload/src/fontfaceonload.js","webpack://aic/./node_modules/global/document.js","webpack://aic/./node_modules/global/window.js","webpack://aic/./node_modules/is-function/index.js","webpack://aic/./node_modules/mux.js/lib/tools/parse-sidx.js","webpack://aic/./node_modules/mux.js/lib/utils/clock.js","webpack://aic/./node_modules/mux.js/lib/utils/numbers.js","webpack://aic/./node_modules/safe-json-parse/tuple.js","webpack://aic/./node_modules/url-toolkit/src/url-toolkit.js","webpack://aic/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://aic/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://aic/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://aic/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://aic/./node_modules/@babel/runtime/helpers/extends.js","webpack://aic/webpack/bootstrap","webpack://aic/webpack/runtime/compat get default export","webpack://aic/webpack/runtime/define property getters","webpack://aic/webpack/runtime/global","webpack://aic/webpack/runtime/hasOwnProperty shorthand","webpack://aic/./node_modules/@area17/a17-helpers/src/setFocusOnTarget.js","webpack://aic/./node_modules/@area17/a17-helpers/src/triggerCustomEvent.js","webpack://aic/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://aic/./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","webpack://aic/./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://aic/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/codecs.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/media-types.js","webpack://aic/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/media-groups.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack://aic/./node_modules/@videojs/vhs-utils/es/containers.js","webpack://aic/./node_modules/video.js/dist/video.es.js","webpack://aic/./node_modules/videojs-event-tracking/dist/videojs-event-tracking.es.js","webpack://aic/./frontend/js/functions/videojs/videojsActivate.js","webpack://aic/./frontend/js/videojs.js"],"sourcesContent":["\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\nvar InterceptorsStorage = require('./interceptors.js');\n\nvar RetryManager = require(\"./retry.js\");\n\ncreateXHR.httpHandler = require('./http-handler.js');\ncreateXHR.requestInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.responseInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.retryManager = new RetryManager();\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  } // call all registered request interceptors for a given request type:\n\n\n  if (options.requestType && createXHR.requestInterceptorsStorage.getIsEnabled()) {\n    var requestInterceptorPayload = {\n      uri: options.uri || options.url,\n      headers: options.headers || {},\n      body: options.body,\n      metadata: options.metadata || {},\n      retry: options.retry,\n      timeout: options.timeout\n    };\n    var updatedPayload = createXHR.requestInterceptorsStorage.execute(options.requestType, requestInterceptorPayload);\n    options.uri = updatedPayload.uri;\n    options.headers = updatedPayload.headers;\n    options.body = updatedPayload.body;\n    options.metadata = updatedPayload.metadata;\n    options.retry = updatedPayload.retry;\n    options.timeout = updatedPayload.timeout;\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    // do not call load 2 times when response interceptors are enabled\n    // why do we even need this 2nd load?\n    if (xhr.readyState === 4 && !createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0; // we would like to retry on error:\n\n    if (!aborted && createXHR.retryManager.getIsEnabled() && options.retry && options.retry.shouldRetry()) {\n      options.retryTimeout = setTimeout(function () {\n        options.retry.moveToNextAttempt(); // we want to re-use the same options and the same xhr object:\n\n        options.xhr = xhr;\n\n        _createXHR(options);\n      }, options.retry.getCurrentFuzzedDelay());\n      return;\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: failureResponse.headers || {},\n        body: failureResponse.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      failureResponse.body = _updatedPayload.body;\n      failureResponse.headers = _updatedPayload.headers;\n    }\n\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: response.headers || {},\n        body: response.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload2 = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      response.body = _updatedPayload2.body;\n      response.headers = _updatedPayload2.headers;\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n    clearTimeout(options.retryTimeout);\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar InterceptorsStorage = /*#__PURE__*/function () {\n  function InterceptorsStorage() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  }\n\n  var _proto = InterceptorsStorage.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  };\n\n  _proto.addInterceptor = function addInterceptor(type, interceptor) {\n    if (!this.typeToInterceptorsMap_.has(type)) {\n      this.typeToInterceptorsMap_.set(type, new Set());\n    }\n\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet.has(interceptor)) {\n      // already have this interceptor\n      return false;\n    }\n\n    interceptorsSet.add(interceptor);\n    return true;\n  };\n\n  _proto.removeInterceptor = function removeInterceptor(type, interceptor) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet && interceptorsSet.has(interceptor)) {\n      interceptorsSet.delete(interceptor);\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.clearInterceptorsByType = function clearInterceptorsByType(type) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (!interceptorsSet) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_.delete(type);\n    this.typeToInterceptorsMap_.set(type, new Set());\n    return true;\n  };\n\n  _proto.clear = function clear() {\n    if (!this.typeToInterceptorsMap_.size) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_ = new Map();\n    return true;\n  };\n\n  _proto.getForType = function getForType(type) {\n    return this.typeToInterceptorsMap_.get(type) || new Set();\n  };\n\n  _proto.execute = function execute(type, payload) {\n    var interceptors = this.getForType(type);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(interceptors), _step; !(_step = _iterator()).done;) {\n      var interceptor = _step.value;\n\n      try {\n        payload = interceptor(payload);\n      } catch (e) {//ignore\n      }\n    }\n\n    return payload;\n  };\n\n  return InterceptorsStorage;\n}();\n\nmodule.exports = InterceptorsStorage;","\"use strict\";\n\nvar RetryManager = /*#__PURE__*/function () {\n  function RetryManager() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  }\n\n  var _proto = RetryManager.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  };\n\n  _proto.getMaxAttempts = function getMaxAttempts() {\n    return this.maxAttempts_;\n  };\n\n  _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n    this.maxAttempts_ = maxAttempts;\n  };\n\n  _proto.getDelayFactor = function getDelayFactor() {\n    return this.delayFactor_;\n  };\n\n  _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n    this.delayFactor_ = delayFactor;\n  };\n\n  _proto.getFuzzFactor = function getFuzzFactor() {\n    return this.fuzzFactor_;\n  };\n\n  _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n    this.fuzzFactor_ = fuzzFactor;\n  };\n\n  _proto.getInitialDelay = function getInitialDelay() {\n    return this.initialDelay_;\n  };\n\n  _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n    this.initialDelay_ = initialDelay;\n  };\n\n  _proto.createRetry = function createRetry(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        maxAttempts = _ref.maxAttempts,\n        delayFactor = _ref.delayFactor,\n        fuzzFactor = _ref.fuzzFactor,\n        initialDelay = _ref.initialDelay;\n\n    return new Retry({\n      maxAttempts: maxAttempts || this.maxAttempts_,\n      delayFactor: delayFactor || this.delayFactor_,\n      fuzzFactor: fuzzFactor || this.fuzzFactor_,\n      initialDelay: initialDelay || this.initialDelay_\n    });\n  };\n\n  return RetryManager;\n}();\n\nvar Retry = /*#__PURE__*/function () {\n  function Retry(options) {\n    this.maxAttempts_ = options.maxAttempts;\n    this.delayFactor_ = options.delayFactor;\n    this.fuzzFactor_ = options.fuzzFactor;\n    this.currentDelay_ = options.initialDelay;\n    this.currentAttempt_ = 1;\n  }\n\n  var _proto2 = Retry.prototype;\n\n  _proto2.moveToNextAttempt = function moveToNextAttempt() {\n    this.currentAttempt_++;\n    var delayDelta = this.currentDelay_ * this.delayFactor_;\n    this.currentDelay_ = this.currentDelay_ + delayDelta;\n  };\n\n  _proto2.shouldRetry = function shouldRetry() {\n    return this.currentAttempt_ < this.maxAttempts_;\n  };\n\n  _proto2.getCurrentDelay = function getCurrentDelay() {\n    return this.currentDelay_;\n  };\n\n  _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n    return (1 - this.fuzzFactor_) * this.currentDelay_;\n  };\n\n  _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n    return (1 + this.fuzzFactor_) * this.currentDelay_;\n  }\n  /**\n   * For example fuzzFactor is 0.1\n   * This means ±10% deviation\n   * So if we have delay as 1000\n   * This function can generate any value from 900 to 1100\n   */\n  ;\n\n  _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n    var lowValue = this.getCurrentMinPossibleDelay();\n    var highValue = this.getCurrentMaxPossibleDelay();\n    return lowValue + Math.random() * (highValue - lowValue);\n  };\n\n  return Retry;\n}();\n\nmodule.exports = RetryManager;","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","(function (root, factory) {\n\t'use strict';\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.FontFaceOnload = factory();\n\t}\n}(this, function () {\n\t'use strict';\n\n\tvar TEST_STRING = 'AxmTYklsjo190QW',\n\t\tSANS_SERIF_FONTS = 'sans-serif',\n\t\tSERIF_FONTS = 'serif',\n\n\t\tdefaultOptions = {\n\t\t\ttolerance: 2, // px\n\t\t\tdelay: 100,\n\t\t\tglyphs: '',\n\t\t\tsuccess: function() {},\n\t\t\terror: function() {},\n\t\t\ttimeout: 5000,\n\t\t\tweight: '400', // normal\n\t\t\tstyle: 'normal',\n\t\t\twindow: window\n\t\t},\n\n\t\t// See https://github.com/typekit/webfontloader/blob/master/src/core/fontruler.js#L41\n\t\tstyle = [\n\t\t\t'display:block',\n\t\t\t'position:absolute',\n\t\t\t'top:-999px',\n\t\t\t'left:-999px',\n\t\t\t'font-size:48px',\n\t\t\t'width:auto',\n\t\t\t'height:auto',\n\t\t\t'line-height:normal',\n\t\t\t'margin:0',\n\t\t\t'padding:0',\n\t\t\t'font-variant:normal',\n\t\t\t'white-space:nowrap'\n\t\t],\n\t\thtml = '<div style=\"%s\" aria-hidden=\"true\">' + TEST_STRING + '</div>';\n\n\tvar FontFaceOnloadInstance = function() {\n\t\tthis.fontFamily = '';\n\t\tthis.appended = false;\n\t\tthis.serif = undefined;\n\t\tthis.sansSerif = undefined;\n\t\tthis.parent = undefined;\n\t\tthis.options = {};\n\t};\n\n\tFontFaceOnloadInstance.prototype.getMeasurements = function () {\n\t\treturn {\n\t\t\tsansSerif: {\n\t\t\t\twidth: this.sansSerif.offsetWidth,\n\t\t\t\theight: this.sansSerif.offsetHeight\n\t\t\t},\n\t\t\tserif: {\n\t\t\t\twidth: this.serif.offsetWidth,\n\t\t\t\theight: this.serif.offsetHeight\n\t\t\t}\n\t\t};\n\t};\n\n\tFontFaceOnloadInstance.prototype.load = function () {\n\t\tvar startTime = new Date(),\n\t\t\tthat = this,\n\t\t\tserif = that.serif,\n\t\t\tsansSerif = that.sansSerif,\n\t\t\tparent = that.parent,\n\t\t\tappended = that.appended,\n\t\t\tdimensions,\n\t\t\toptions = that.options,\n\t\t\tref = options.reference;\n\n\t\tfunction getStyle( family ) {\n\t\t\treturn style\n\t\t\t\t.concat( [ 'font-weight:' + options.weight, 'font-style:' + options.style ] )\n\t\t\t\t.concat( \"font-family:\" + family )\n\t\t\t\t.join( \";\" );\n\t\t}\n\n\t\tvar sansSerifHtml = html.replace( /\\%s/, getStyle( SANS_SERIF_FONTS ) ),\n\t\t\tserifHtml = html.replace( /\\%s/, getStyle(  SERIF_FONTS ) );\n\n\t\tif( !parent ) {\n\t\t\tparent = that.parent = options.window.document.createElement( \"div\" );\n\t\t}\n\n\t\tparent.innerHTML = sansSerifHtml + serifHtml;\n\t\tsansSerif = that.sansSerif = parent.firstChild;\n\t\tserif = that.serif = sansSerif.nextSibling;\n\n\t\tif( options.glyphs ) {\n\t\t\tsansSerif.innerHTML += options.glyphs;\n\t\t\tserif.innerHTML += options.glyphs;\n\t\t}\n\n\t\tfunction hasNewDimensions( dims, el, tolerance ) {\n\t\t\treturn Math.abs( dims.width - el.offsetWidth ) > tolerance ||\n\t\t\t\tMath.abs( dims.height - el.offsetHeight ) > tolerance;\n\t\t}\n\n\t\tfunction isTimeout() {\n\t\t\treturn ( new Date() ).getTime() - startTime.getTime() > options.timeout;\n\t\t}\n\n\t\t(function checkDimensions() {\n\t\t\tif( !ref ) {\n\t\t\t\tref = options.window.document.body;\n\t\t\t}\n\t\t\tif( !appended && ref ) {\n\t\t\t\tref.appendChild( parent );\n\t\t\t\tappended = that.appended = true;\n\n\t\t\t\tdimensions = that.getMeasurements();\n\n\t\t\t\t// Make sure we set the new font-family after we take our initial dimensions:\n\t\t\t\t// handles the case where FontFaceOnload is called after the font has already\n\t\t\t\t// loaded.\n\t\t\t\tsansSerif.style.fontFamily = that.fontFamily + ', ' + SANS_SERIF_FONTS;\n\t\t\t\tserif.style.fontFamily = that.fontFamily + ', ' + SERIF_FONTS;\n\t\t\t}\n\n\t\t\tif( appended && dimensions &&\n\t\t\t\t( hasNewDimensions( dimensions.sansSerif, sansSerif, options.tolerance ) ||\n\t\t\t\thasNewDimensions( dimensions.serif, serif, options.tolerance ) ) ) {\n\n\t\t\t\toptions.success();\n\t\t\t} else if( isTimeout() ) {\n\t\t\t\toptions.error();\n\t\t\t} else {\n\t\t\t\tif( !appended && \"requestAnimationFrame\" in options.window ) {\n\t\t\t\t\toptions.window.requestAnimationFrame( checkDimensions );\n\t\t\t\t} else {\n\t\t\t\t\toptions.window.setTimeout( checkDimensions, options.delay );\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t}; // end load()\n\n\tFontFaceOnloadInstance.prototype.cleanFamilyName = function( family ) {\n\t\treturn family.replace( /[\\'\\\"]/g, '' ).toLowerCase();\n\t};\n\n\tFontFaceOnloadInstance.prototype.cleanWeight = function( weight ) {\n\t\t// lighter and bolder not supported\n\t\tvar weightLookup = {\n\t\t\tnormal: '400',\n\t\t\tbold: '700'\n\t\t};\n\n\t\treturn '' + (weightLookup[ weight ] || weight);\n\t};\n\n\tFontFaceOnloadInstance.prototype.checkFontFaces = function( timeout ) {\n\t\tvar _t = this;\n\t\t_t.options.window.document.fonts.forEach(function( font ) {\n\t\t\tif( _t.cleanFamilyName( font.family ) === _t.cleanFamilyName( _t.fontFamily ) &&\n\t\t\t\t_t.cleanWeight( font.weight ) === _t.cleanWeight( _t.options.weight ) &&\n\t\t\t\tfont.style === _t.options.style ) {\n\t\t\t\tfont.load().then(function() {\n\t\t\t\t\t_t.options.success( font );\n\t\t\t\t\t_t.options.window.clearTimeout( timeout );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tFontFaceOnloadInstance.prototype.init = function( fontFamily, options ) {\n\t\tvar timeout;\n\n\t\tfor( var j in defaultOptions ) {\n\t\t\tif( !options.hasOwnProperty( j ) ) {\n\t\t\t\toptions[ j ] = defaultOptions[ j ];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = options;\n\t\tthis.fontFamily = fontFamily;\n\n\t\t// For some reason this was failing on afontgarde + icon fonts.\n\t\tif( !options.glyphs && \"fonts\" in options.window.document ) {\n\t\t\tif( options.timeout ) {\n\t\t\t\ttimeout = options.window.setTimeout(function() {\n\t\t\t\t\toptions.error();\n\t\t\t\t}, options.timeout );\n\t\t\t}\n\n\t\t\tthis.checkFontFaces( timeout );\n\t\t} else {\n\t\t\tthis.load();\n\t\t}\n\t};\n\n\tvar FontFaceOnload = function( fontFamily, options ) {\n\t\tvar instance = new FontFaceOnloadInstance();\n\t\tinstance.init(fontFamily, options);\n\n\t\treturn instance;\n\t};\n\n\treturn FontFaceOnload;\n}));\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","function _extends() {\n  return (module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var setFocusOnTarget = function(node) {\n  //https://code.area17.com/a17/a17-helpers/wikis/setFocusOnTarget\n  node.focus();\n  if (node!== document.activeElement) {\n    node.setAttribute('tabindex','-1');\n    node.focus();\n  }\n};\n\nexport default setFocusOnTarget;\n","var triggerCustomEvent = function(el, type, data) {\n  // Doc: https://code.area17.com/a17/a17-helpers/wikis/triggerCustomEvent\n\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent(type, true, true);\n  event.data = data || {};\n  event.eventName = type;\n  el.dispatchEvent(event);\n};\n\nexport default triggerCustomEvent;\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 7.1.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'content-steering'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    this.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const dateRangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              const {\n                lastProgramDateTime\n              } = this;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight((programDateTime, segment) => {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const dateRange = this.manifest.dateRanges[index];\n\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!dateRange.endOnNext;\n\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (dateRange.duration && dateRange.endDate) {\n                const startDate = dateRange.startDate;\n                const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (const attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n\n                const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            },\n\n            'content-steering'() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n\n    if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n      this.trigger('warn', {\n        message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n      });\n    }\n\n    this.lastProgramDateTime = null;\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","/*! @name mpd-parser @version 1.3.0 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.3.0\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n  // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n  'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.17.2 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document$1 from 'global/document';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.17.2\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document$1) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} name\n *         The name of the console method to use.\n *\n * @param  {Object} log\n *         The arguments to be passed to the matching console method.\n *\n * @param {string} [styles]\n *        styles for name\n */\nconst LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  let resultName = name;\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n  if (styles) {\n    resultName = `%c${name}`;\n    args.unshift(styles);\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(resultName + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name, delimiter = ':', styles = '') {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  function log(...args) {\n    logByType('log', level, args);\n  }\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log, styles);\n\n  /**\n   * Create a new subLogger which chains the old name to the new name.\n   *\n   * For example, doing `mylogger = videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} subName\n   *        The name to add call the new logger\n   * @param {string} [subDelimiter]\n   *        Optional delimiter\n   * @param {string} [subStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createLogger = (subName, subDelimiter, subStyles) => {\n    const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n    const resultStyles = subStyles !== undefined ? subStyles : styles;\n    const resultName = `${name} ${resultDelimiter} ${subName}`;\n    return createLogger$1(resultName, resultDelimiter, resultStyles);\n  };\n\n  /**\n   * Create a new logger.\n   *\n   * @param {string} newName\n   *        The name for the new logger\n   * @param {string} [newDelimiter]\n   *        Optional delimiter\n   * @param {string} [newStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createNewLogger = (newName, newDelimiter, newStyles) => {\n    return createLogger$1(newName, newDelimiter, newStyles);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Returns an array of values for a given object\n *\n * @param  {Object} source - target object\n * @return {Array<unknown>} - object values\n */\nfunction values(source = {}) {\n  const result = [];\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  values: values,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * Whether or not this is a Chromecast receiver application.\n *\n * @static\n * @type {Boolean}\n */\nconst IS_CHROMECAST_RECEIVER = Boolean(window$1.cast && window$1.cast.framework && window$1.cast.framework.CastReceiverContext);\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this is a Tizen device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_TIZEN = false;\n\n/**\n * Whether or not this is a WebOS device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WEBOS = false;\n\n/**\n * Whether or not this is a Smart TV (Tizen or WebOS) device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SMART_TV = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD && UAD.platform && UAD.brands) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_TIZEN = /Tizen/i.test(USER_AGENT);\n  IS_WEBOS = /Web0S/i.test(USER_AGENT);\n  IS_SMART_TV = IS_TIZEN || IS_WEBOS;\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE && !IS_SMART_TV;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  IS_CHROMECAST_RECEIVER: IS_CHROMECAST_RECEIVER,\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  get IS_TIZEN () { return IS_TIZEN; },\n  get IS_WEBOS () { return IS_WEBOS; },\n  get IS_SMART_TV () { return IS_SMART_TV; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document$1 === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document$1[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document$1.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document$1;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document$1.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {HTMLElement} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      /** @type {boolean|string} */\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (knownBooleans.includes(attrName)) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document$1.body.focus();\n  document$1.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document$1.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document$1[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      if (item.assignedSlot && item.assignedSlot.parentElement && window$1.WebKitCSSMatrix) {\n        const transformValue = window$1.getComputedStyle(item.assignedSlot.parentElement).transform;\n        const matrix = new window$1.WebKitCSSMatrix(transformValue);\n        translated.x += matrix.m41;\n        translated.y += matrix.m42;\n      }\n      item = item.parentNode || item.host;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document$1.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {MouseEvent} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  // MacOS Sonoma trackpad when \"tap to click enabled\"\n  if (event.type === 'mousedown' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\n/**\n * Copy document style sheets to another window.\n *\n * @param    {Window} win\n *           The window element you want to copy the document style sheets to.\n *\n */\nfunction copyStyleSheetsToWindow(win) {\n  [...document$1.styleSheets].forEach(styleSheet => {\n    try {\n      const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n      const style = document$1.createElement('style');\n      style.textContent = cssRules;\n      win.document.head.appendChild(style);\n    } catch (e) {\n      const link = document$1.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = styleSheet.type;\n      // For older Safari this has to be the string; on other browsers setting the MediaList works\n      link.media = styleSheet.media.mediaText;\n      link.href = styleSheet.href;\n      win.document.head.appendChild(link);\n    }\n  });\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle,\n  copyStyleSheetsToWindow: copyStyleSheetsToWindow\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document$1.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document$1.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document$1.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document$1.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document$1.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string[]} types\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n\n    // TODO: Probably best to create an allowlist of event props\n    const deprecatedProps = ['layerX', 'layerY', 'keyLocation', 'path', 'webkitMovementX', 'webkitMovementY', 'mozPressure', 'mozInputSource'];\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (!deprecatedProps.includes(key)) {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document$1;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document$1.documentElement;\n      const body = document$1.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @protected\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} target\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A callback to be called if and when the component is ready.\n * `this` will be the Component instance.\n *\n * @callback ReadyCallback\n * @returns  {void}\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} [fn]\n   *        The function to remove. If not specified, all listeners managed by Video.js will be removed.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * @param {Object} [hash]\n   *        Optionally extra argument to pass through to an event listener\n   */\n  trigger(event, hash) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Adds an SVG icon element to another element or component.\n   *\n   * @param {string} iconName\n   *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on. Defaults to the current Component's element.\n   *\n   * @return {Element}\n   *        The newly created icon element.\n   */\n  setIcon(iconName, el = this.el()) {\n    // TODO: In v9 of video.js, we will want to remove font icons entirely.\n    // This means this check, as well as the others throughout the code, and\n    // the unecessary CSS for font icons, will need to be removed.\n    // See https://github.com/videojs/video.js/pull/8260 as to which components\n    // need updating.\n    if (!this.player_.options_.experimentalSvgIcons) {\n      return;\n    }\n    const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n    // The below creates an element in the format of:\n    // <span><svg><use>....</use></svg></span>\n    const iconContainer = createEl('span', {\n      className: 'vjs-icon-placeholder vjs-svg-icon'\n    }, {\n      'aria-hidden': 'true'\n    });\n    const svgEl = document$1.createElementNS(xmlnsURL, 'svg');\n    svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n    const useEl = document$1.createElementNS(xmlnsURL, 'use');\n    svgEl.appendChild(useEl);\n    useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n    iconContainer.appendChild(svgEl);\n\n    // Replace a pre-existing icon if one exists.\n    if (this.iconIsSet_) {\n      el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n    } else {\n      el.appendChild(iconContainer);\n    }\n    this.iconIsSet_ = true;\n    return iconContainer;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The width when getting, zero if there is no width\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The height when getting, zero if there is no height\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Retrieves the position and size information of the component's element.\n   *\n   * @return {Object} An object with `boundingClientRect` and `center` properties.\n   *         - `boundingClientRect`: An object with properties `x`, `y`, `width`,\n   *           `height`, `top`, `right`, `bottom`, and `left`, representing\n   *           the bounding rectangle of the element.\n   *         - `center`: An object with properties `x` and `y`, representing\n   *           the center point of the element. `width` and `height` are set to 0.\n   */\n  getPositions() {\n    const rect = this.el_.getBoundingClientRect();\n\n    // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n    const boundingClientRect = {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left\n    };\n\n    // Calculating the center position\n    const center = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n      width: 0,\n      height: 0,\n      top: rect.top + rect.height / 2,\n      right: rect.left + rect.width / 2,\n      bottom: rect.top + rect.height / 2,\n      left: rect.left + rect.width / 2\n    };\n    return {\n      boundingClientRect,\n      center\n    };\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping, exclude also when spatialNavigation is enabled.\n      if (event.key !== 'Tab' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @protected\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n    * Decide whether an element is actually disabled or not.\n    *\n    * @function isActuallyDisabled\n    * @param element {Node}\n    * @return {boolean}\n    *\n    * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n    */\n  getIsDisabled() {\n    return Boolean(this.el_.disabled);\n  }\n\n  /**\n    * Decide whether the element is expressly inert or not.\n    *\n    * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n    * @function isExpresslyInert\n    * @param element {Node}\n    * @return {boolean}\n    */\n  getIsExpresslyInert() {\n    return this.el_.inert && !this.el_.ownerDocument.documentElement.inert;\n  }\n\n  /**\n   * Determine whether or not this component can be considered as focusable component.\n   *\n   * @param {HTMLElement} el - The HTML element representing the component.\n   * @return {boolean}\n   *         If the component can be focused, will be `true`. Otherwise, `false`.\n   */\n  getIsFocusable(el) {\n    const element = el || this.el_;\n    return element.tabIndex >= 0 && !(this.getIsDisabled() || this.getIsExpresslyInert());\n  }\n\n  /**\n   * Determine whether or not this component is currently visible/enabled/etc...\n   *\n   * @param {HTMLElement} el - The HTML element representing the component.\n   * @return {boolean}\n   *         If the component can is currently visible & enabled, will be `true`. Otherwise, `false`.\n   */\n  getIsAvailableToBeFocused(el) {\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     *\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @return {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n      const elementStyle = window$1.getComputedStyle(element, null);\n      const thisVisibility = elementStyle.getPropertyValue('visibility');\n      const thisDisplay = elementStyle.getPropertyValue('display');\n      const invisibleStyle = ['hidden', 'collapse'];\n      return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @return {boolean}\n     */\n    function isBeingRendered(element) {\n      if (!isVisibleStyleProperty(element.parentElement)) {\n        return false;\n      }\n      if (!isVisibleStyleProperty(element) || element.style.opacity === '0' || window$1.getComputedStyle(element).height === '0px' || window$1.getComputedStyle(element).width === '0px') {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Determine if the element is visible for the user or not.\n     * 1. If an element sum of its offsetWidth, offsetHeight, height and width is less than 1 is not visible.\n     * 2. If elementCenter.x is less than is not visible.\n     * 3. If elementCenter.x is more than the document's width is not visible.\n     * 4. If elementCenter.y is less than 0 is not visible.\n     * 5. If elementCenter.y is the document's height is not visible.\n     *\n     * @function isVisible\n     * @param element {Node}\n     * @return {boolean}\n     */\n    function isVisible(element) {\n      if (element.offsetWidth + element.offsetHeight + element.getBoundingClientRect().height + element.getBoundingClientRect().width === 0) {\n        return false;\n      }\n\n      // Define elementCenter object with props of x and y\n      // x: Left position relative to the viewport plus element's width (no margin) divided between 2.\n      // y: Top position relative to the viewport plus element's height (no margin) divided between 2.\n      const elementCenter = {\n        x: element.getBoundingClientRect().left + element.offsetWidth / 2,\n        y: element.getBoundingClientRect().top + element.offsetHeight / 2\n      };\n      if (elementCenter.x < 0) {\n        return false;\n      }\n      if (elementCenter.x > (document$1.documentElement.clientWidth || window$1.innerWidth)) {\n        return false;\n      }\n      if (elementCenter.y < 0) {\n        return false;\n      }\n      if (elementCenter.y > (document$1.documentElement.clientHeight || window$1.innerHeight)) {\n        return false;\n      }\n      let pointContainer = document$1.elementFromPoint(elementCenter.x, elementCenter.y);\n      while (pointContainer) {\n        if (pointContainer === element) {\n          return true;\n        }\n        if (pointContainer.parentNode) {\n          pointContainer = pointContainer.parentNode;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    // If no DOM element was passed as argument use this component's element.\n    if (!el) {\n      el = this.el();\n    }\n\n    // If element is visible, is being rendered & either does not have a parent element or its tabIndex is not negative.\n    if (isVisible(el) && isBeingRendered(el) && (!el.parentElement || el.tabIndex >= 0)) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {typeof Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/** @import { TimeRange } from './time' */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * An object containing an error type, as well as other information regarding the error.\n *\n * @typedef {{errorType: string, [key: string]: any}} ErrorMetadata\n */\n\n/**\n * An optional object to give more detail about the error. This can be used to give\n * a higher level of specificity to an error versus the more generic MediaError codes.\n * `metadata` expects an `errorType` string that should align with the values from videojs.Error.\n *\n * @type {ErrorMetadata}\n */\nMediaError.prototype.metadata = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError#MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError.MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.prototype.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError#MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError.MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.prototype.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError#MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError.MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.prototype.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError#MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError.MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.prototype.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError#MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError.MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.prototype.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from './utils/dom' */\n\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog',\n      'aria-live': 'polite'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (this.opened_) {\n      if (this.options_.fillAlways) {\n        this.fill();\n      }\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is opened.\n      *\n      * @event ModalDialog#beforemodalopen\n      * @type {Event}\n      */\n    this.trigger('beforemodalopen');\n    this.opened_ = true;\n\n    // Fill content if the modal has never opened before and\n    // never been filled.\n    if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n      this.fill();\n    }\n\n    // If the player was playing, pause it and take note of its previously\n    // playing state.\n    this.wasPlaying_ = !player.paused();\n    if (this.options_.pauseOnOpen && this.wasPlaying_) {\n      player.pause();\n    }\n    this.on('keydown', this.handleKeyDown_);\n\n    // Hide controls and note if they were enabled.\n    this.hadControls_ = player.controls();\n    player.controls(false);\n    this.show();\n    this.conditionalFocus_();\n    this.el().setAttribute('aria-hidden', 'false');\n\n    /**\n      * Fired just after a `ModalDialog` is opened.\n      *\n      * @event ModalDialog#modalopen\n      * @type {Event}\n      */\n    this.trigger('modalopen');\n    this.hasBeenOpened_ = true;\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      *\n      * @property {boolean} [bubbles=true]\n      */\n    this.trigger({\n      type: 'modalclose',\n      bubbles: true\n    });\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document$1.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    /**\n     * Fired a custom keyDown event that bubbles.\n     *\n     * @event ModalDialog#modalKeydown\n     * @type {Event}\n     */\n    this.trigger({\n      type: 'modalKeydown',\n      originalEvent: event,\n      target: this,\n      bubbles: true\n    });\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (event.key === 'Escape' && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (event.key !== 'Tab') {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document$1.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/** @import Track from './track' */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { Track[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @protected\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/** @import AudioTrack from './audio-track' */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/** @import VideoTrack from './video-track' */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/** @import TextTrack from './text-track' */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {string} url\n *           The url to parse\n *\n * @return   {URL}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  return new URL(url, document$1.baseURI);\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n */\nconst getAbsoluteURL = function (url) {\n  return new URL(url, document$1.baseURI).href;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {URL} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  return parseUrl(url).origin !== winLoc.origin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n\n    // Testing if the cue is a VTTCue in a way that survives minification\n    if (!('getCueAsHTML' in cue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n *\n * @protected\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\n\n/**\n * @protected\n */\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/** @import { TimeRange } from '../utils/time' */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document$1.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document$1.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\n\n/** @import Player from '../player' */\n/** @import Tech from '../tech/tech' */\n\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  if (middlewareInstances.hasOwnProperty(player.id())) {\n    delete middlewareInstances[player.id()];\n  }\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/** @import Player from '../player' */\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\nvar icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1200 1227\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\\\"/>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n// /**\n\n// Determine the keycode for the 'back' key based on the platform\nconst backKeyCode = IS_TIZEN ? 10009 : IS_WEBOS ? 461 : 8;\nconst SpatialNavKeyCodes = {\n  codes: {\n    play: 415,\n    pause: 19,\n    ff: 417,\n    rw: 412,\n    back: backKeyCode\n  },\n  names: {\n    415: 'play',\n    19: 'pause',\n    417: 'ff',\n    412: 'rw',\n    [backKeyCode]: 'back'\n  },\n  isEventKey(event, keyName) {\n    keyName = keyName.toLowerCase();\n    if (this.names[event.keyCode] && this.names[event.keyCode] === keyName) {\n      return true;\n    }\n    return false;\n  },\n  getEventName(event) {\n    if (this.names[event.keyCode]) {\n      return this.names[event.keyCode];\n    } else if (this.codes[event.code]) {\n      const code = this.codes[event.code];\n      return this.names[code];\n    }\n    return null;\n  }\n};\n\n/**\n * @file spatial-navigation.js\n */\n\n/** @import Component from './component' */\n/** @import Player from './player' */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS$1 = 5;\n\n/**\n * Spatial Navigation in Video.js enhances user experience and accessibility on smartTV devices,\n * enabling seamless navigation through interactive elements within the player using remote control arrow keys.\n * This functionality allows users to effortlessly navigate through focusable components.\n *\n * @extends EventTarget\n */\nclass SpatialNavigation extends EventTarget$2 {\n  /**\n   * Constructs a SpatialNavigation instance with initial settings.\n   * Sets up the player instance, and prepares the spatial navigation system.\n   *\n   * @class\n   * @param {Player} player - The Video.js player instance to which the spatial navigation is attached.\n   */\n  constructor(player) {\n    super();\n    this.player_ = player;\n    this.focusableComponents = [];\n    this.isListening_ = false;\n    this.isPaused_ = false;\n    this.onKeyDown_ = this.onKeyDown_.bind(this);\n    this.lastFocusedComponent_ = null;\n  }\n\n  /**\n   * Starts the spatial navigation by adding a keydown event listener to the video container.\n   * This method ensures that the event listener is added only once.\n   */\n  start() {\n    // If the listener is already active, exit early.\n    if (this.isListening_) {\n      return;\n    }\n\n    // Add the event listener since the listener is not yet active.\n    this.player_.on('keydown', this.onKeyDown_);\n    this.player_.on('modalKeydown', this.onKeyDown_);\n    // Listen for source change events\n    this.player_.on('loadedmetadata', () => {\n      this.focus(this.updateFocusableComponents()[0]);\n    });\n    this.player_.on('modalclose', () => {\n      this.refocusComponent();\n    });\n    this.player_.on('focusin', this.handlePlayerFocus_.bind(this));\n    this.player_.on('focusout', this.handlePlayerBlur_.bind(this));\n    this.isListening_ = true;\n  }\n\n  /**\n   * Stops the spatial navigation by removing the keydown event listener from the video container.\n   * Also sets the `isListening_` flag to false.\n   */\n  stop() {\n    this.player_.off('keydown', this.onKeyDown_);\n    this.isListening_ = false;\n  }\n\n  /**\n   * Responds to keydown events for spatial navigation and media control.\n   *\n   * Determines if spatial navigation or media control is active and handles key inputs accordingly.\n   *\n   * @param {KeyboardEvent} event - The keydown event to be handled.\n   */\n  onKeyDown_(event) {\n    // Determine if the event is a custom modalKeydown event\n    const actualEvent = event.originalEvent ? event.originalEvent : event;\n    if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(actualEvent.key)) {\n      // Handle directional navigation\n      if (this.isPaused_) {\n        return;\n      }\n      actualEvent.preventDefault();\n\n      // \"ArrowLeft\" => \"left\" etc\n      const direction = actualEvent.key.substring(5).toLowerCase();\n      this.move(direction);\n    } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'play') || SpatialNavKeyCodes.isEventKey(actualEvent, 'pause') || SpatialNavKeyCodes.isEventKey(actualEvent, 'ff') || SpatialNavKeyCodes.isEventKey(actualEvent, 'rw')) {\n      // Handle media actions\n      actualEvent.preventDefault();\n      const action = SpatialNavKeyCodes.getEventName(actualEvent);\n      this.performMediaAction_(action);\n    } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'Back') && event.target && event.target.closeable()) {\n      actualEvent.preventDefault();\n      event.target.close();\n    }\n  }\n\n  /**\n   * Performs media control actions based on the given key input.\n   *\n   * Controls the playback and seeking functionalities of the media player.\n   *\n   * @param {string} key - The key representing the media action to be performed.\n   *   Accepted keys: 'play', 'pause', 'ff' (fast-forward), 'rw' (rewind).\n   */\n  performMediaAction_(key) {\n    if (this.player_) {\n      switch (key) {\n        case 'play':\n          if (this.player_.paused()) {\n            this.player_.play();\n          }\n          break;\n        case 'pause':\n          if (!this.player_.paused()) {\n            this.player_.pause();\n          }\n          break;\n        case 'ff':\n          this.userSeek_(this.player_.currentTime() + STEP_SECONDS$1);\n          break;\n        case 'rw':\n          this.userSeek_(this.player_.currentTime() - STEP_SECONDS$1);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Pauses the spatial navigation functionality.\n   * This method sets a flag that can be used to temporarily disable the navigation logic.\n   */\n  pause() {\n    this.isPaused_ = true;\n  }\n\n  /**\n   * Resumes the spatial navigation functionality if it has been paused.\n   * This method resets the pause flag, re-enabling the navigation logic.\n   */\n  resume() {\n    this.isPaused_ = false;\n  }\n\n  /**\n   * Handles Player Blur.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * Calls for handling of the Player Blur if:\n   * *The next focused element is not a child of current focused element &\n   * The next focused element is not a child of the Player.\n   * *There is no next focused element\n   */\n  handlePlayerBlur_(event) {\n    const nextFocusedElement = event.relatedTarget;\n    let isChildrenOfPlayer = null;\n    const currentComponent = this.getCurrentComponent(event.target);\n    if (nextFocusedElement) {\n      isChildrenOfPlayer = Boolean(nextFocusedElement.closest('.video-js'));\n\n      // If nextFocusedElement is the 'TextTrackSettings' component\n      if (nextFocusedElement.classList.contains('vjs-text-track-settings') && !this.isPaused_) {\n        this.searchForTrackSelect_();\n      }\n    }\n    if (!event.currentTarget.contains(event.relatedTarget) && !isChildrenOfPlayer || !nextFocusedElement) {\n      if (currentComponent.name() === 'CloseButton') {\n        this.refocusComponent();\n      } else {\n        this.pause();\n        if (currentComponent && currentComponent.el()) {\n          // Store last focused component\n          this.lastFocusedComponent_ = currentComponent;\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles the Player focus event.\n   *\n   * Calls for handling of the Player Focus if current element is focusable.\n   */\n  handlePlayerFocus_() {\n    if (this.getCurrentComponent() && this.getCurrentComponent().getIsFocusable()) {\n      this.resume();\n    }\n  }\n\n  /**\n   * Gets a set of focusable components.\n   *\n   * @return {Array}\n   *         Returns an array of focusable components.\n   */\n  updateFocusableComponents() {\n    const player = this.player_;\n    const focusableComponents = [];\n\n    /**\n     * Searches for children candidates.\n     *\n     * Pushes Components to array of 'focusableComponents'.\n     * Calls itself if there is children elements inside iterated component.\n     *\n     * @param {Array} componentsArray - The array of components to search for focusable children.\n     */\n    function searchForChildrenCandidates(componentsArray) {\n      for (const i of componentsArray) {\n        if (i.hasOwnProperty('el_') && i.getIsFocusable() && i.getIsAvailableToBeFocused(i.el())) {\n          focusableComponents.push(i);\n        }\n        if (i.hasOwnProperty('children_') && i.children_.length > 0) {\n          searchForChildrenCandidates(i.children_);\n        }\n      }\n    }\n\n    // Iterate inside all children components of the player.\n    player.children_.forEach(value => {\n      if (value.hasOwnProperty('el_')) {\n        // If component has required functions 'getIsFocusable' & 'getIsAvailableToBeFocused', is focusable & available to be focused.\n        if (value.getIsFocusable && value.getIsAvailableToBeFocused && value.getIsFocusable() && value.getIsAvailableToBeFocused(value.el())) {\n          focusableComponents.push(value);\n          return;\n          // If component has posible children components as candidates.\n        } else if (value.hasOwnProperty('children_') && value.children_.length > 0) {\n          searchForChildrenCandidates(value.children_);\n          // If component has posible item components as candidates.\n        } else if (value.hasOwnProperty('items') && value.items.length > 0) {\n          searchForChildrenCandidates(value.items);\n          // If there is a suitable child element within the component's DOM element.\n        } else if (this.findSuitableDOMChild(value)) {\n          focusableComponents.push(value);\n        }\n      }\n    });\n    this.focusableComponents = focusableComponents;\n    return this.focusableComponents;\n  }\n\n  /**\n   * Finds a suitable child element within the provided component's DOM element.\n   *\n   * @param {Object} component - The component containing the DOM element to search within.\n   * @return {HTMLElement|null} Returns the suitable child element if found, or null if not found.\n   */\n  findSuitableDOMChild(component) {\n    /**\n     * Recursively searches for a suitable child node that can be focused within a given component.\n     * It first checks if the provided node itself can be focused according to the component's\n     * `getIsFocusable` and `getIsAvailableToBeFocused` methods. If not, it recursively searches\n     * through the node's children to find a suitable child node that meets the focusability criteria.\n     *\n     * @param {HTMLElement} node - The DOM node to start the search from.\n     * @return {HTMLElement|null} The first child node that is focusable and available to be focused,\n     * or `null` if no suitable child is found.\n     */\n    function searchForSuitableChild(node) {\n      if (component.getIsFocusable(node) && component.getIsAvailableToBeFocused(node)) {\n        return node;\n      }\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        const suitableChild = searchForSuitableChild(child);\n        if (suitableChild) {\n          return suitableChild;\n        }\n      }\n      return null;\n    }\n    return searchForSuitableChild(component.el());\n  }\n\n  /**\n   * Gets the currently focused component from the list of focusable components.\n   * If a target element is provided, it uses that element to find the corresponding\n   * component. If no target is provided, it defaults to using the document's currently\n   * active element.\n   *\n   * @param {HTMLElement} [target] - The DOM element to check against the focusable components.\n   *                                 If not provided, `document.activeElement` is used.\n   * @return {Component|null} - Returns the focused component if found among the focusable components,\n   *                            otherwise returns null if no matching component is found.\n   */\n  getCurrentComponent(target) {\n    this.updateFocusableComponents();\n    // eslint-disable-next-line\n    const curComp = target || document.activeElement;\n    if (this.focusableComponents.length) {\n      for (const i of this.focusableComponents) {\n        // If component Node is equal to the current active element.\n        if (i.el() === curComp) {\n          return i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds a component to the array of focusable components.\n   *\n   * @param {Component} component\n   *        The `Component` to be added.\n   */\n  add(component) {\n    const focusableComponents = [...this.focusableComponents];\n    if (component.hasOwnProperty('el_') && component.getIsFocusable() && component.getIsAvailableToBeFocused(component.el())) {\n      focusableComponents.push(component);\n    }\n    this.focusableComponents = focusableComponents;\n    // Trigger the notification manually\n    this.trigger({\n      type: 'focusableComponentsChanged',\n      focusableComponents: this.focusableComponents\n    });\n  }\n\n  /**\n   * Removes component from the array of focusable components.\n   *\n   * @param {Component} component - The component to be removed from the focusable components array.\n   */\n  remove(component) {\n    for (let i = 0; i < this.focusableComponents.length; i++) {\n      if (this.focusableComponents[i].name() === component.name()) {\n        this.focusableComponents.splice(i, 1);\n        // Trigger the notification manually\n        this.trigger({\n          type: 'focusableComponentsChanged',\n          focusableComponents: this.focusableComponents\n        });\n        return;\n      }\n    }\n  }\n\n  /**\n   * Clears array of focusable components.\n   */\n  clear() {\n    // Check if the array is already empty to avoid unnecessary event triggering\n    if (this.focusableComponents.length > 0) {\n      // Clear the array\n      this.focusableComponents = [];\n\n      // Trigger the notification manually\n      this.trigger({\n        type: 'focusableComponentsChanged',\n        focusableComponents: this.focusableComponents\n      });\n    }\n  }\n\n  /**\n   * Navigates to the next focusable component based on the specified direction.\n   *\n   * @param {string} direction 'up', 'down', 'left', 'right'\n   */\n  move(direction) {\n    const currentFocusedComponent = this.getCurrentComponent();\n    if (!currentFocusedComponent) {\n      return;\n    }\n    const currentPositions = currentFocusedComponent.getPositions();\n    const candidates = this.focusableComponents.filter(component => component !== currentFocusedComponent && this.isInDirection_(currentPositions.boundingClientRect, component.getPositions().boundingClientRect, direction));\n    const bestCandidate = this.findBestCandidate_(currentPositions.center, candidates, direction);\n    if (bestCandidate) {\n      this.focus(bestCandidate);\n    } else {\n      this.trigger({\n        type: 'endOfFocusableComponents',\n        direction,\n        focusedComponent: currentFocusedComponent\n      });\n    }\n  }\n\n  /**\n   * Finds the best candidate on the current center position,\n   * the list of candidates, and the specified navigation direction.\n   *\n   * @param {Object} currentCenter The center position of the current focused component element.\n   * @param {Array} candidates An array of candidate components to receive focus.\n   * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n   * @return {Object|null} The component that is the best candidate for receiving focus.\n   */\n  findBestCandidate_(currentCenter, candidates, direction) {\n    let minDistance = Infinity;\n    let bestCandidate = null;\n    for (const candidate of candidates) {\n      const candidateCenter = candidate.getPositions().center;\n      const distance = this.calculateDistance_(currentCenter, candidateCenter, direction);\n      if (distance < minDistance) {\n        minDistance = distance;\n        bestCandidate = candidate;\n      }\n    }\n    return bestCandidate;\n  }\n\n  /**\n   * Determines if a target rectangle is in the specified navigation direction\n   * relative to a source rectangle.\n   *\n   * @param {Object} srcRect The bounding rectangle of the source element.\n   * @param {Object} targetRect The bounding rectangle of the target element.\n   * @param {string} direction The navigation direction ('up', 'down', 'left', 'right').\n   * @return {boolean} True if the target is in the specified direction relative to the source.\n   */\n  isInDirection_(srcRect, targetRect, direction) {\n    switch (direction) {\n      case 'right':\n        return targetRect.left >= srcRect.right;\n      case 'left':\n        return targetRect.right <= srcRect.left;\n      case 'down':\n        return targetRect.top >= srcRect.bottom;\n      case 'up':\n        return targetRect.bottom <= srcRect.top;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Focus the last focused component saved before blur on player.\n   */\n  refocusComponent() {\n    if (this.lastFocusedComponent_) {\n      // If use is not active, set it to active.\n      if (!this.player_.userActive()) {\n        this.player_.userActive(true);\n      }\n      this.updateFocusableComponents();\n\n      // Search inside array of 'focusableComponents' for a match of name of\n      // the last focused component.\n      for (let i = 0; i < this.focusableComponents.length; i++) {\n        if (this.focusableComponents[i].name() === this.lastFocusedComponent_.name()) {\n          this.focus(this.focusableComponents[i]);\n          return;\n        }\n      }\n    } else {\n      this.focus(this.updateFocusableComponents()[0]);\n    }\n  }\n\n  /**\n   * Focuses on a given component.\n   * If the component is available to be focused, it focuses on the component.\n   * If not, it attempts to find a suitable DOM child within the component and focuses on it.\n   *\n   * @param {Component} component - The component to be focused.\n   */\n  focus(component) {\n    if (component.getIsAvailableToBeFocused(component.el())) {\n      component.focus();\n    } else if (this.findSuitableDOMChild(component)) {\n      this.findSuitableDOMChild(component).focus();\n    }\n  }\n\n  /**\n   * Calculates the distance between two points, adjusting the calculation based on\n   * the specified navigation direction.\n   *\n   * @param {Object} center1 The center point of the first element.\n   * @param {Object} center2 The center point of the second element.\n   * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n   * @return {number} The calculated distance between the two centers.\n   */\n  calculateDistance_(center1, center2, direction) {\n    const dx = Math.abs(center1.x - center2.x);\n    const dy = Math.abs(center1.y - center2.y);\n    let distance;\n    switch (direction) {\n      case 'right':\n      case 'left':\n        // Higher weight for vertical distance in horizontal navigation.\n        distance = dx + dy * 100;\n        break;\n      case 'up':\n        // Strongly prioritize vertical proximity for UP navigation.\n        // Adjust the weight to ensure that elements directly above are favored.\n        distance = dy * 2 + dx * 0.5;\n        break;\n      case 'down':\n        // More balanced weight for vertical and horizontal distances.\n        // Adjust the weights here to find the best balance.\n        distance = dy * 5 + dx;\n        break;\n      default:\n        distance = dx + dy;\n    }\n    return distance;\n  }\n\n  /**\n   * This gets called by 'handlePlayerBlur_' if 'spatialNavigation' is enabled.\n   * Searches for the first 'TextTrackSelect' inside of modal to focus.\n   *\n   * @private\n   */\n  searchForTrackSelect_() {\n    const spatialNavigation = this;\n    for (const component of spatialNavigation.updateFocusableComponents()) {\n      if (component.constructor.name === 'TextTrackSelect') {\n        spatialNavigation.focus(component);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file loader.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\n/** @import Player from '../player' */\n\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n *\n * @param {number} position\n *        The CSS top/right/bottom/left property value.\n *\n * @return {string}\n *          The CSS property value that was created, like '10px'.\n *\n * @private\n */\nfunction getCSSPositionValue(position) {\n  return position ? `${position}px` : '';\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayTextHandler = e => this.updateDisplay(e);\n    const updateDisplayHandler = e => {\n      this.updateDisplayOverlay();\n      this.updateDisplay(e);\n    };\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayTextHandler);\n    player.on('loadedmetadata', e => {\n      this.updateDisplayOverlay();\n      this.preselectTrack(e);\n    });\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Updates the displayed TextTrack to be sure it overlays the video when a either\n   * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n   */\n  updateDisplayOverlay() {\n    // inset-inline and inset-block are not supprted on old chrome, but these are\n    // only likely to be used on TV devices\n    if (!this.player_.videoHeight() || !window$1.CSS.supports('inset-inline: 10px')) {\n      return;\n    }\n    const playerWidth = this.player_.currentWidth();\n    const playerHeight = this.player_.currentHeight();\n    const playerAspectRatio = playerWidth / playerHeight;\n    const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n    let insetInlineMatch = 0;\n    let insetBlockMatch = 0;\n    if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n      if (playerAspectRatio > videoAspectRatio) {\n        insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n      } else {\n        insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n      }\n    }\n    tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n    tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.setIcon('play');\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `BigPlayButton` receives a\n   * `keydown` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n\n  /**\n   * Handle `mousedown` events on the `BigPlayButton`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/** @import Player from './player' */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('cancel');\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.setIcon('play');\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.setIcon('pause');\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.setIcon('play');\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.setIcon('replay');\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended', 'seeking'], e => this.update(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the displayed time according to the `updateContent` function which is defined in the child class.\n   *\n   * @param {Event} [event]\n   *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.\n   */\n  update(event) {\n    if (!this.player_.options_.enableSmoothSeeking && event.type === 'seeking') {\n      return;\n    }\n    this.updateContent(event);\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document$1.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n/** @import Player from './player' */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document$1.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.setIcon('circle', el);\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const spatialNavOptions = this.options_.playerOptions.spatialNavigation;\n    const spatialNavEnabled = spatialNavOptions && spatialNavOptions.enabled;\n    const horizontalSeek = spatialNavOptions && spatialNavOptions.horizontalSeek;\n    if (spatialNavEnabled) {\n      if (horizontalSeek && event.key === 'ArrowLeft' || !horizontalSeek && event.key === 'ArrowDown') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      } else if (horizontalSeek && event.key === 'ArrowRight' || !horizontalSeek && event.key === 'ArrowUp') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        super.handleKeyDown(event);\n      }\n\n      // Left and Down Arrows\n    } else if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowRight') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/** @import Player from '../../player' */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document$1.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    let spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    let spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // spaceRightOfPoint is always NaN for mouse time display\n    // because the seekbarRect does not have a right property. This causes\n    // the mouse tool tip to be truncated when it's close to the right edge of the player.\n    // In such cases, we ignore the `playerRect.right - seekBarRect.right` value when calculating.\n    // For the sake of consistency, we ignore seekBarRect.left - playerRect.left for the left edge.\n    if (!spaceRightOfPoint) {\n      spaceRightOfPoint = seekBarRect.width - seekBarPointPx;\n      spaceLeftOfPoint = seekBarPointPx;\n    }\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('circle');\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['durationchange', 'timeupdate'], this.update);\n    this.on(this.player_, ['ended'], this.update_);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document$1 && 'visibilityState' in document$1) {\n      this.on(document$1, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document$1.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document$1.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n    if (this.player_.options_.enableSmoothSeeking) {\n      this.update();\n    }\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (event.key === 'Home') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (event.key === 'End') {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(event.key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = parseInt(event.key, 10) * 0.1;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (event.key === 'PageDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (event.key === 'PageUp') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['durationchange', 'timeupdate'], this.update);\n    this.off(this.player_, ['ended'], this.update_);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document$1 && 'visibilityState' in document$1) {\n      this.off(document$1, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('picture-in-picture-enter');\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Displays or hides the button depending on the audio mode detection.\n   * Exits picture-in-picture if it is enabled when switching to audio mode.\n   */\n  handlePictureInPictureAudioModeChange() {\n    // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n    const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n    const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n    if (!isAudioMode) {\n      this.show();\n      return;\n    }\n    if (this.player_.isInPictureInPicture()) {\n      this.player_.exitPictureInPicture();\n    }\n    this.hide();\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document$1.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.setIcon('picture-in-picture-exit');\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.setIcon('picture-in-picture-enter');\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n   */\n  show() {\n    // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n    if (typeof document$1.exitPictureInPicture !== 'function') {\n      return;\n    }\n    super.show();\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('fullscreen-enter');\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document$1[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n      this.setIcon('fullscreen-exit');\n    } else {\n      this.controlText('Fullscreen');\n      this.setIcon('fullscreen-enter');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/** @import Component from '../../component' */\n/** @import Player from '../../player' */\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    this.setIcon('circle', el);\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/** @import Component from '../../component' */\n/** @import Player from '../../player' */\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n    this.setIcon('volume-high');\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      this.setIcon('volume-mute');\n      level = 0;\n    } else if (vol < 0.33) {\n      this.setIcon('volume-low');\n      level = 1;\n    } else if (vol < 0.67) {\n      this.setIcon('volume-medium');\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (event.key === 'Escape') {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document$1, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document$1, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`forward-${this.skipTime}`);\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    if (isNaN(this.player_.duration())) {\n      return;\n    }\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nSkipForward.prototype.controlText_ = 'Skip Forward';\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`replay-${this.skipTime}`);\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document$1.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {KeyboardEvent} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.key === 'ArrowRight' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document$1, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Overwrites the `setIcon` method from `Component`.\n   * In this case, we want the icon to be appended to the menuButton.\n   *\n   * @param {string} name\n   *         The icon name to be added.\n   */\n  setIcon(name) {\n    super.setIcon(name, this.menuButton_.el_);\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document$1, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (event.key === 'Esc' || event.key === 'Tab') {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!event.key === 'Tab') {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (event.key === 'Up' || event.key === 'Down' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (event.key === 'Esc' || event.key === 'Tab') {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (event.key === 'Esc' || event.key === 'Tab') {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!event.key === 'Tab') {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/** @import Player from './player' */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    const menuItemEl = createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    });\n\n    // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n    if (this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(menuItemEl);\n    } else {\n      el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n    }\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!['Tab', 'Escape', 'ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document$1.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * A special menu item for turning off a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/** @import Player from '../../player' */\n/** @import Menu from '../../menu/menu' */\n/** @import TextTrack from '../../tracks/text-track' */\n/** @import TextTrackMenuItem from '../text-track-controls/text-track-menu-item' */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('chapters');\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('audio-description');\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('subtitles');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('captions');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      if (this.player_.options_.experimentalSvgIcons) {\n        this.setIcon('captions', el);\n      } else {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    this.setIcon('subtitles');\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n      this.setIcon('captions');\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (['main-desc', 'descriptions'].indexOf(this.options_.track.kind) >= 0) {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n    this.setIcon('audio');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => {\n      this.open(e);\n    });\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * Creates DOM element of 'select' & its options.\n *\n * @extends Component\n */\nclass TextTrackSelect extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.legendId]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *\n   * @param {string} [options.id]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *\n   * @param {Array} [options.SelectOptions]\n   *        Array that contains the value & textContent of for each of the\n   *        options elements.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.el_.setAttribute('aria-labelledby', this.selectLabelledbyIds);\n  }\n\n  /**\n   * Create the `TextTrackSelect`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    this.selectLabelledbyIds = [this.options_.legendId, this.options_.labelId].join(' ').trim();\n\n    // Create select & inner options\n    const selectoptions = createEl('select', {\n      id: this.options_.id\n    }, {}, this.options_.SelectOptions.map(optionText => {\n      // Constructs an id for the <option>.\n      // For the colour settings that have two <selects> with a <label> each, generates an id based off the label value\n      // For font size/family and edge style with one <select> and no <label>, generates an id with a guid\n      const optionId = (this.options_.labelId ? this.options_.labelId : `vjs-track-option-${newGUID()}`) + '-' + optionText[1].replace(/\\W+/g, '');\n      const option = createEl('option', {\n        id: optionId,\n        value: this.localize(optionText[0]),\n        textContent: optionText[1]\n      });\n      option.setAttribute('aria-labelledby', `${this.selectLabelledbyIds} ${optionId}`);\n      return option;\n    }));\n    return selectoptions;\n  }\n}\nComponent$1.registerComponent('TextTrackSelect', TextTrackSelect);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from '../utils/dom' */\n\n/**\n * Creates fieldset section of 'TextTrackSettings'.\n * Manganes two versions of fieldsets, one for type of 'colors'\n * & the other for 'font', Component adds diferent DOM elements\n * to that fieldset  depending on the type.\n *\n * @extends Component\n */\nclass TextTrackFieldset extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.legendId]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *        It passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.id]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *        It passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.legendText]\n   *        A text to use as the text content of the legend element.\n   *\n   * @param {Array} [options.selects]\n   *        Array that contains the selects that are use to create 'selects'\n   *        components.\n   *\n   * @param {Array} [options.SelectOptions]\n   *        Array that contains the value & textContent of for each of the\n   *        options elements, it passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.type]\n   *        Conditions if some DOM elements will be added to the fieldset\n   *        component.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the selects configurations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        These properties are use to configure the 'TextTrackSelect' Component.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Add Components & DOM Elements\n    const legendElement = createEl('legend', {\n      textContent: this.localize(this.options_.legendText),\n      id: this.options_.legendId\n    });\n    this.el().appendChild(legendElement);\n    const selects = this.options_.selects;\n\n    // Iterate array of selects to create 'selects' components\n    for (const i of selects) {\n      const selectConfig = this.options_.selectConfigs[i];\n      const selectClassName = selectConfig.className;\n      const id = selectConfig.id.replace('%s', this.options_.id_);\n      let span = null;\n      const guid = `vjs_select_${newGUID()}`;\n\n      // Conditionally create span to add on the component\n      if (this.options_.type === 'colors') {\n        span = createEl('span', {\n          className: selectClassName\n        });\n        const label = createEl('label', {\n          id,\n          className: 'vjs-label',\n          textContent: selectConfig.label\n        });\n        label.setAttribute('for', guid);\n        span.appendChild(label);\n      }\n      const textTrackSelect = new TextTrackSelect(player, {\n        SelectOptions: selectConfig.options,\n        legendId: this.options_.legendId,\n        id: guid,\n        labelId: id\n      });\n      this.addChild(textTrackSelect);\n\n      // Conditionally append to 'select' component to conditionally created span\n      if (this.options_.type === 'colors') {\n        span.appendChild(textTrackSelect.el());\n        this.el().appendChild(span);\n      }\n    }\n  }\n\n  /**\n   * Create the `TextTrackFieldset`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('fieldset', {\n      // Prefixing classes of elements within a player with \"vjs-\"\n      // is a convention used in Video.js.\n      className: this.options_.className\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackFieldset', TextTrackFieldset);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * The component 'TextTrackSettingsColors' displays a set of 'fieldsets'\n * using the component 'TextTrackFieldset'.\n *\n * @extends Component\n */\nclass TextTrackSettingsColors extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {Array} [options.fieldSets]\n   *        Array that contains the configurations for the selects.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the select confugations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        it passes to 'TextTrackFieldset'.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    const id_ = this.options_.textTrackComponentid;\n\n    // createElFgColor_\n    const ElFgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-text-legend-${id_}`,\n      legendText: this.localize('Text'),\n      className: 'vjs-fg vjs-track-setting',\n      selects: this.options_.fieldSets[0],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElFgColorFieldset);\n\n    // createElBgColor_\n    const ElBgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-background-${id_}`,\n      legendText: this.localize('Text Background'),\n      className: 'vjs-bg vjs-track-setting',\n      selects: this.options_.fieldSets[1],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElBgColorFieldset);\n\n    // createElWinColor_\n    const ElWinColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-window-${id_}`,\n      legendText: this.localize('Caption Area Background'),\n      className: 'vjs-window vjs-track-setting',\n      selects: this.options_.fieldSets[2],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElWinColorFieldset);\n  }\n\n  /**\n   * Create the `TextTrackSettingsColors`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-colors'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackSettingsColors', TextTrackSettingsColors);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * The component 'TextTrackSettingsFont' displays a set of 'fieldsets'\n * using the component 'TextTrackFieldset'.\n *\n * @extends Component\n */\nclass TextTrackSettingsFont extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {Array} [options.fieldSets]\n   *        Array that contains the configurations for the selects.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the select confugations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        it passes to 'TextTrackFieldset'.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    const id_ = this.options_.textTrackComponentid;\n    const ElFgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-font-size-${id_}`,\n      legendText: 'Font Size',\n      className: 'vjs-font-percent vjs-track-setting',\n      selects: this.options_.fieldSets[0],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElFgColorFieldset);\n    const ElBgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-edge-style-${id_}`,\n      legendText: this.localize('Text Edge Style'),\n      className: 'vjs-edge-style vjs-track-setting',\n      selects: this.options_.fieldSets[1],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElBgColorFieldset);\n    const ElWinColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-font-family-${id_}`,\n      legendText: this.localize('Font Family'),\n      className: 'vjs-font-family vjs-track-setting',\n      selects: this.options_.fieldSets[2],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElWinColorFieldset);\n  }\n\n  /**\n   * Create the `TextTrackSettingsFont`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-font'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackSettingsFont', TextTrackSettingsFont);\n\n/**\n * Buttons of reset & done that modal 'TextTrackSettings'\n * uses as part of its content.\n *\n * 'Reset': Resets all settings on 'TextTrackSettings'.\n * 'Done': Closes 'TextTrackSettings' modal.\n *\n * @extends Component\n */\nclass TrackSettingsControls extends Component$1 {\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Create DOM elements\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    const resetButton = new Button(player, {\n      controlText: defaultsDescription,\n      className: 'vjs-default-button'\n    });\n    resetButton.el().classList.remove('vjs-control', 'vjs-button');\n    resetButton.el().textContent = this.localize('Reset');\n    this.addChild(resetButton);\n    const doneButton = new Button(player, {\n      controlText: defaultsDescription,\n      className: 'vjs-done-button'\n    });\n\n    // Remove unrequired style classes\n    doneButton.el().classList.remove('vjs-control', 'vjs-button');\n    doneButton.el().textContent = this.localize('Done');\n    this.addChild(doneButton);\n  }\n\n  /**\n   * Create the `TrackSettingsControls`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-controls'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TrackSettingsControls', TrackSettingsControls);\n\n/**\n * @file text-track-settings.js\n */\n\n/** @import Player from '../player' */\n\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n    className: 'vjs-bg-color'\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS],\n    className: 'vjs-bg-opacity vjs-opacity'\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n    className: 'vjs-text-color'\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: '',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: '',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI],\n    className: 'vjs-text-opacity vjs-opacity'\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color',\n    className: 'vjs-window-color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE],\n    className: 'vjs-window-opacity vjs-opacity'\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.renderModalComponents(player);\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.bindFunctionsToSelectsAndButtons();\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  renderModalComponents(player) {\n    const textTrackSettingsColors = new TextTrackSettingsColors(player, {\n      textTrackComponentid: this.id_,\n      selectConfigs,\n      fieldSets: [['color', 'textOpacity'], ['backgroundColor', 'backgroundOpacity'], ['windowColor', 'windowOpacity']]\n    });\n    this.addChild(textTrackSettingsColors);\n    const textTrackSettingsFont = new TextTrackSettingsFont(player, {\n      textTrackComponentid: this.id_,\n      selectConfigs,\n      fieldSets: [['fontPercent'], ['edgeStyle'], ['fontFamily']]\n    });\n    this.addChild(textTrackSettingsFont);\n    const trackSettingsControls = new TrackSettingsControls(player);\n    this.addChild(trackSettingsControls);\n  }\n  bindFunctionsToSelectsAndButtons() {\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n    this.renderModalComponents(this.player_);\n    this.bindFunctionsToSelectsAndButtons();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\n/** @import Player from './player' */\n\nconst defaults$1 = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults$1, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/** @import Player from './player' */\n\n/**\n * @typedef {object} TransientButtonOptions\n * @property {string} [controlText] Control text, usually visible for these buttons\n * @property {number} [initialDisplay=4000] Time in ms that button should initially remain visible\n * @property {Array<'top'|'neartop'|'bottom'|'left'|'right'>} [position] Array of position strings to add basic styles for positioning\n * @property {string} [className] Class(es) to add\n * @property {boolean} [takeFocus=false] Whether element sohuld take focus when shown\n * @property {Function} [clickHandler] Function called on button activation\n */\n\n/** @type {TransientButtonOptions} */\nconst defaults = {\n  initialDisplay: 4000,\n  position: [],\n  takeFocus: false\n};\n\n/**\n * A floating transient button.\n * It's recommended to insert these buttons _before_ the control bar with the this argument to `addChild`\n * for a logical tab order.\n *\n * @example\n * ```\n * player.addChild(\n *   'TransientButton',\n *   options,\n *   player.children().indexOf(player.getChild(\"ControlBar\"))\n * )\n * ```\n *\n * @extends Button\n */\nclass TransientButton extends Button {\n  /**\n   * TransientButton constructor\n   *\n   * @param {Player} player The button's player\n   * @param {TransientButtonOptions} options Options for the transient button\n   */\n  constructor(player, options) {\n    options = merge$1(defaults, options);\n    super(player, options);\n    this.controlText(options.controlText);\n    this.hide();\n\n    // When shown, the float button will be visible even if the user is inactive.\n    // Clear this if there is any interaction.\n    this.on(this.player_, ['useractive', 'userinactive'], e => {\n      this.removeClass('force-display');\n    });\n  }\n\n  /**\n   * Return CSS class including position classes\n   *\n   * @return {string} CSS class list\n   */\n  buildCSSClass() {\n    return `vjs-transient-button focus-visible ${this.options_.position.map(c => `vjs-${c}`).join(' ')}`;\n  }\n\n  /**\n   * Create the button element\n   *\n   * @return {HTMLButtonElement} The button element\n   */\n  createEl() {\n    /** @type HTMLButtonElement */\n    const el = createEl('button', {}, {\n      type: 'button',\n      class: this.buildCSSClass()\n    }, createEl('span'));\n    this.controlTextEl_ = el.querySelector('span');\n    return el;\n  }\n\n  /**\n   * Show the button. The button will remain visible for the `initialDisplay` time, default 4s,\n   * and when there is user activity.\n   */\n  show() {\n    super.show();\n    this.addClass('force-display');\n    if (this.options_.takeFocus) {\n      this.el().focus({\n        preventScroll: true\n      });\n    }\n    this.forceDisplayTimeout = this.player_.setTimeout(() => {\n      this.removeClass('force-display');\n    }, this.options_.initialDisplay);\n  }\n\n  /**\n   * Hide the display, even if during the `initialDisplay` time.\n   */\n  hide() {\n    this.removeClass('force-display');\n    super.hide();\n  }\n\n  /**\n   * Dispose the component\n   */\n  dispose() {\n    this.player_.clearTimeout(this.forceDisplayTimeout);\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TransientButton', TransientButton);\n\n/** @import Html5 from './html5' */\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document$1.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document$1.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document$1.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document$1.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document$1.createElement('video');\n  const track = document$1.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document$1.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n/** @import { TimeRange } from './utils/time' */\n/** @import HtmlTrackElement from './tracks/html-track-element' */\n\n/**\n * @callback PlayerReadyCallback\n * @this     {Player}\n * @returns  {void}\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recommended)\n * 2. By using it directly via `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {PlayerReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    // also here.. probably better\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n    this.boundUpdatePlayerHeightOnAudioOnlyMode_ = e => this.updatePlayerHeightOnAudioOnlyMode_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      controlBarHeight: null,\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    /** @type string */\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    /** @type {boolean} */\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document$1, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    if (options.experimentalSvgIcons) {\n      // Add SVG Sprite to the DOM\n      const parser = new window$1.DOMParser();\n      const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n      const errorNode = parsedSVG.querySelector('parsererror');\n      if (errorNode) {\n        log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n        this.options_.experimentalSvgIcons = null;\n      } else {\n        const sprite = parsedSVG.documentElement;\n        sprite.style.display = 'none';\n        this.el_.appendChild(sprite);\n        this.addClass('vjs-svg-icons-enabled');\n      }\n    }\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // Check if spatial navigation is enabled in the options.\n    // If enabled, instantiate the SpatialNavigation class.\n    if (options.spatialNavigation && options.spatialNavigation.enabled) {\n      this.spatialNavigation = new SpatialNavigation(this);\n      this.addClass('vjs-spatial-navigation-enabled');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document$1, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document$1.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n    const deviceClassNames = ['IS_SMART_TV', 'IS_TIZEN', 'IS_WEBOS', 'IS_ANDROID', 'IS_IPAD', 'IS_IPHONE', 'IS_CHROMECAST_RECEIVER'].filter(key => browser[key]).map(key => {\n      return 'vjs-device-' + key.substring(3).toLowerCase().replace(/\\_/g, '-');\n    });\n    this.addClass(...deviceClassNames);\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s width to.\n   *\n   * @return {number|undefined}\n   *         - The current width of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s height to.\n   *\n   * @return {number|undefined}\n   *         - The current height of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number|string} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * An object that contains Video.js version.\n   *\n   * @typedef {Object} PlayerVersion\n   *\n   * @property {string} 'video.js' - Video.js version\n   */\n\n  /**\n   * Returns an object with Video.js version.\n   *\n   * @return {PlayerVersion}\n   *          An object with Video.js version.\n   */\n  version() {\n    return {\n      'video.js': version$6\n    };\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet_('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document$1[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    if (error) {\n      this.error(error);\n    }\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} [arg]\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean|undefined}\n   *         - The value of scrubbing when getting\n   *         - Nothing when setting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number|undefined}\n   *         - the current time in seconds when getting\n   *         - Nothing when setting\n   */\n  currentTime(seconds) {\n    if (seconds === undefined) {\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit after all.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    if (seconds < 0) {\n      seconds = 0;\n    }\n    if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n      this.cache_.initTime = seconds;\n      this.off('canplay', this.boundApplyInitTime_);\n      this.one('canplay', this.boundApplyInitTime_);\n      return;\n    }\n    this.techCall_('setCurrentTime', seconds);\n    this.cache_.initTime = 0;\n    if (isFinite(seconds)) {\n      this.cache_.currentTime = Number(seconds);\n    }\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|undefined}\n   *         - The duration of the video in seconds when getting\n   *         - Nothing when setting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}\n   *\n   * @return {TimeRange}\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  seekable() {\n    let seekable = this.techGet_('seekable');\n    if (!seekable || !seekable.length) {\n      seekable = createTimeRanges$1(0, 0);\n    }\n    return seekable;\n  }\n\n  /**\n   * Returns whether the player is in the \"seeking\" state.\n   *\n   * @return {boolean} True if the player is in the seeking state, false if not.\n   */\n  seeking() {\n    return this.techGet_('seeking');\n  }\n\n  /**\n   * Returns whether the player is in the \"ended\" state.\n   *\n   * @return {boolean} True if the player is in the ended state, false if not.\n   */\n  ended() {\n    return this.techGet_('ended');\n  }\n\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   */\n  networkState() {\n    return this.techGet_('networkState');\n  }\n\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   */\n  readyState() {\n    return this.techGet_('readyState');\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, percentAsDecimal));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - nothing if setting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - Nothing when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         - The current value of lastVolume as a percent when getting\n   *         - Nothing when setting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|undefined}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - Nothing when setting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document$1[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document$1.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document$1.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document$1.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (event.key === 'Escape') {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document$1.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document$1.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Get or set disable Picture-in-Picture mode.\n   *\n   * @param {boolean} [value]\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean|undefined}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   *         - nothing if setting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document$1.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        width: this.videoWidth(),\n        height: this.videoHeight()\n      }).then(pipWindow => {\n        copyStyleSheetsToWindow(pipWindow);\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.appendChild(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger({\n          type: 'enterpictureinpicture',\n          pipWindow\n        });\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('pagehide', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document$1 && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document$1) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document$1.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => event.key.toLowerCase() === 'f',\n      muteKey = keydownEvent => event.key.toLowerCase() === 'm',\n      playPauseKey = keydownEvent => event.key.toLowerCase() === 'k' || event.key.toLowerCase() === ' '\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document$1[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} [isRetry]\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    // Workaround to use the load method with the VHS.\n    // Does not cover the case when the load method is called directly from the mediaElement.\n    if (this.tech_ && this.tech_.vhs) {\n      this.src(this.currentSource());\n      return;\n    }\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    this.error(null);\n    if (this.titleBar) {\n      this.titleBar.update({\n        title: undefined,\n        description: undefined\n      });\n    }\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {'none'|'auto'|'metadata'} [value]\n   *        Preload mode to pass to tech\n   *\n   * @return {string|undefined}\n   *         - The preload attribute value when getting\n   *         - Nothing when setting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|'play'|'muted'|'any'} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string|undefined}\n   *         - The current value of autoplay when getting\n   *         - Nothing when setting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|undefined}\n   *         - the current value of playsinline\n   *         - Nothing when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean|undefined}\n   *         - The current value of loop when getting\n   *         - Nothing when setting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|undefined}\n   *         - The current value of poster when getting\n   *         - Nothing when setting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of controls when getting\n   *         - Nothing when setting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of native controls when getting\n   *         - Nothing when setting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|undefined}\n   *         - The current MediaError when getting (or null)\n   *         - Nothing when setting\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = null;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean|undefined}\n   *         - The current value of userActive when getting\n   *         - Nothing when setting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n\n    /** @this Player */\n    const activityCheck = function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    };\n    this.setInterval(activityCheck, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The current playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The default playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} [bool]\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean|undefined}\n   *         - The current value of isAudio when getting\n   *         - Nothing when setting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  updatePlayerHeightOnAudioOnlyMode_() {\n    const controlBar = this.getChild('ControlBar');\n    if (!controlBar || this.audioOnlyCache_.controlBarHeight === controlBar.currentHeight()) {\n      return;\n    }\n    this.audioOnlyCache_.controlBarHeight = controlBar.currentHeight();\n    this.height(this.audioOnlyCache_.controlBarHeight);\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n    this.audioOnlyCache_.controlBarHeight = controlBarHeight;\n    this.on('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n    this.off('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * Set or get the player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|undefined}\n   *         - The current language code when getting\n   *         - Nothing when setting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} [value]\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean|undefined}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   *         Nothing if setting\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    const crossOrigin = this.crossOrigin();\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (crossOrigin) {\n      this.crossOrigin(crossOrigin);\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   * @return {boolean|undefined}\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} [newRates]\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false,\n  spatialNavigation: {\n    enabled: false,\n    horizontalSeek: false\n  },\n  // Default smooth seeking to false\n  enableSmoothSeeking: false\n};\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * @typedef  {Object} PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\nvar VjsErrors = {\n  NetworkBadStatus: 'networkbadstatus',\n  NetworkRequestFailed: 'networkrequestfailed',\n  NetworkRequestAborted: 'networkrequestaborted',\n  NetworkRequestTimeout: 'networkrequesttimeout',\n  NetworkBodyParserFailed: 'networkbodyparserfailed',\n  StreamingHlsPlaylistParserError: 'streaminghlsplaylistparsererror',\n  StreamingDashManifestParserError: 'streamingdashmanifestparsererror',\n  StreamingContentSteeringParserError: 'streamingcontentsteeringparsererror',\n  StreamingVttParserError: 'streamingvttparsererror',\n  StreamingFailedToSelectNextSegment: 'streamingfailedtoselectnextsegment',\n  StreamingFailedToDecryptSegment: 'streamingfailedtodecryptsegment',\n  StreamingFailedToTransmuxSegment: 'streamingfailedtotransmuxsegment',\n  StreamingFailedToAppendSegment: 'streamingfailedtoappendsegment',\n  StreamingCodecsChangeError: 'streamingcodecschangeerror'\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/** @import { PlayerReadyCallback } from './player' */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {PlayerReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n  // always returns false. Instead, use the Shadow DOM root.\n  const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window$1.ShadowRoot : false;\n  const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n  if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {typeof Component} comp\n *        The component class\n *\n * @return {typeof Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  return Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n*\n * @param {typeof Plugin|Function} plugin\n *         The plugin sub-class or function\n *\n * @return {typeof Plugin|Function}\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n// The list of possible error types to occur in video.js\nvideojs.Error = VjsErrors;\n\n/*! @name videojs-contrib-quality-levels @version 4.1.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\nclass QualityLevelList extends videojs.EventTarget {\n  /**\n   * Creates a QualityLevelList.\n   */\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    list[Symbol.iterator] = () => list.levels_.values();\n    return list;\n  }\n\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id);\n\n    // Do not add duplicate quality levels\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"4.1.0\";\n\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @return {QualityLevelList} a list of QualityLevels\n */\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @return {QualityLevelList} a list of QualityLevels\n */\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.obj.merge({}, options));\n};\n\n// Register the plugin with video.js.\nvideojs.registerPlugin('qualityLevels', qualityLevels);\n\n// Include the version number.\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.13.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n/**\n * Converts provided buffered ranges to a descriptive string\n *\n * @param {TimeRanges} buffered - received buffered time ranges\n *\n * @return {string} - descriptive string\n */\n\nfunction bufferedRangesToString(buffered) {\n  if (buffered.length === 0) {\n    return 'Buffered Ranges are empty';\n  }\n  let bufferedRangesStr = 'Buffered Ranges: \\n';\n  for (let i = 0; i < buffered.length; i++) {\n    const start = buffered.start(i);\n    const end = buffered.end(i);\n    bufferedRangesStr += `${start} --> ${end}. Duration (${end - start})\\n`;\n  }\n  return bufferedRangesStr;\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  } // Clamp seekable end since it can not be less than the seekable start\n\n  if (seekableEnd < seekableStart) {\n    seekableEnd = seekableStart;\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    const canUseFudgeFactor = partAndSegment.duration > TIME_FUDGE_FACTOR;\n    const isExactlyAtTheEnd = time === 0;\n    const isExtremelyCloseToTheEnd = canUseFudgeFactor && time + TIME_FUDGE_FACTOR >= 0;\n    if (isExactlyAtTheEnd || isExtremelyCloseToTheEnd) {\n      // 1) We are exactly at the end of the current segment.\n      // 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).\n      //    We may encounter this situation when\n      //    we don't have exact match between segment duration info in the manifest and the actual duration of the segment\n      //    For example:\n      //    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,\n      //    but we the actual buffered is 29.99999\n      //\n      // In both cases:\n      // if we passed current time -> it means that we already played current segment\n      // if we passed buffered.end -> it means that this segment is already loaded and buffered\n      // we should select the next segment if we have one:\n      if (i !== partsAndSegments.length - 1) {\n        continue;\n      }\n    }\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no targetDuration defaulting to ${targetDuration}`\n      });\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no partTargetDuration defaulting to ${partTargetDuration}`\n      });\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\nclass DateRangesStorage {\n  constructor() {\n    this.offset_ = null;\n    this.pendingDateRanges_ = new Map();\n    this.processedDateRanges_ = new Map();\n  }\n  setOffset(segments = []) {\n    // already set\n    if (this.offset_ !== null) {\n      return;\n    } // no segment to process\n\n    if (!segments.length) {\n      return;\n    }\n    const [firstSegment] = segments; // no program date time\n\n    if (firstSegment.programDateTime === undefined) {\n      return;\n    } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n    this.offset_ = firstSegment.programDateTime / 1000;\n  }\n  setPendingDateRanges(dateRanges = []) {\n    if (!dateRanges.length) {\n      return;\n    }\n    const [dateRange] = dateRanges;\n    const startTime = dateRange.startDate.getTime();\n    this.trimProcessedDateRanges_(startTime);\n    this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n      map.set(pendingDateRange.id, pendingDateRange);\n      return map;\n    }, new Map());\n  }\n  processDateRange(dateRange) {\n    this.pendingDateRanges_.delete(dateRange.id);\n    this.processedDateRanges_.set(dateRange.id, dateRange);\n  }\n  getDateRangesToProcess() {\n    if (this.offset_ === null) {\n      return [];\n    }\n    const dateRangeClasses = {};\n    const dateRangesToProcess = [];\n    this.pendingDateRanges_.forEach((dateRange, id) => {\n      if (this.processedDateRanges_.has(id)) {\n        return;\n      }\n      dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n      dateRange.processDateRange = () => this.processDateRange(dateRange);\n      dateRangesToProcess.push(dateRange);\n      if (!dateRange.class) {\n        return;\n      }\n      if (dateRangeClasses[dateRange.class]) {\n        const length = dateRangeClasses[dateRange.class].push(dateRange);\n        dateRange.classListIndex = length - 1;\n      } else {\n        dateRangeClasses[dateRange.class] = [dateRange];\n        dateRange.classListIndex = 0;\n      }\n    });\n    for (const dateRange of dateRangesToProcess) {\n      const classList = dateRangeClasses[dateRange.class] || [];\n      if (dateRange.endDate) {\n        dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n      } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n        dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n      } else if (dateRange.duration) {\n        dateRange.endTime = dateRange.startTime + dateRange.duration;\n      } else if (dateRange.plannedDuration) {\n        dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n      } else {\n        dateRange.endTime = dateRange.startTime;\n      }\n    }\n    return dateRangesToProcess;\n  }\n  trimProcessedDateRanges_(startTime) {\n    const copy = new Map(this.processedDateRanges_);\n    copy.forEach((dateRange, id) => {\n      if (dateRange.startDate.getTime() < startTime) {\n        this.processedDateRanges_.delete(id);\n      }\n    });\n  }\n}\nconst QUOTA_EXCEEDED_ERR = 22;\nconst getStreamingNetworkErrorMetadata = ({\n  requestType,\n  request,\n  error,\n  parseFailure\n}) => {\n  const isBadStatus = request.status < 200 || request.status > 299;\n  const isFailure = request.status >= 400 && request.status <= 499;\n  const errorMetadata = {\n    uri: request.uri,\n    requestType\n  };\n  const isBadStatusOrParseFailure = isBadStatus && !isFailure || parseFailure;\n  if (error && isFailure) {\n    // copy original error and add to the metadata.\n    errorMetadata.error = _extends({}, error);\n    errorMetadata.errorType = videojs.Error.NetworkRequestFailed;\n  } else if (request.aborted) {\n    errorMetadata.errorType = videojs.Error.NetworkRequestAborted;\n  } else if (request.timedout) {\n    errorMetadata.erroType = videojs.Error.NetworkRequestTimeout;\n  } else if (isBadStatusOrParseFailure) {\n    const errorType = parseFailure ? videojs.Error.NetworkBodyParserFailed : videojs.Error.NetworkBadStatus;\n    errorMetadata.errorType = errorType;\n    errorMetadata.status = request.status;\n    errorMetadata.headers = request.headers;\n  }\n  return errorMetadata;\n};\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\nconst playlistMetadataPayload = (playlists, type, isLive) => {\n  if (!playlists) {\n    return;\n  }\n  const renditions = [];\n  playlists.forEach(playlist => {\n    // we need attributes to populate rendition data.\n    if (!playlist.attributes) {\n      return;\n    }\n    const {\n      BANDWIDTH,\n      RESOLUTION,\n      CODECS\n    } = playlist.attributes;\n    renditions.push({\n      id: playlist.id,\n      bandwidth: BANDWIDTH,\n      resolution: RESOLUTION,\n      codecs: CODECS\n    });\n  });\n  return {\n    type,\n    isLive,\n    renditions\n  };\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls;\n    this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n  }\n  handleLoadedPlaylist_() {\n    const mediaPlaylist = this.media();\n    if (!mediaPlaylist) {\n      return;\n    }\n    this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n    this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n    const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n    if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n      return;\n    }\n    this.addDateRangesToTextTrack_(availableDateRanges);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2,\n      metadata: getStreamingNetworkErrorMetadata({\n        requestType: xhr.requestType,\n        request: xhr,\n        error: xhr.error\n      })\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    try {\n      return parseManifest({\n        onwarn: ({\n          message\n        }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n        oninfo: ({\n          message\n        }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n        manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        llhls: this.llhls\n      });\n    } catch (error) {\n      this.error = error;\n      this.error.metadata = {\n        errorType: videojs.Error.StreamingHlsPlaylistParserError,\n        error\n      };\n    }\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const metadata = {\n      playlistInfo: {\n        type: 'media',\n        uri: url\n      }\n    };\n    this.trigger({\n      type: 'playlistparsestart',\n      metadata\n    });\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    metadata.parsedPlaylist = playlistMetadataPayload(this.main.playlists, metadata.playlistInfo.type, !this.media_.endList);\n    this.trigger({\n      type: 'playlistparsecomplete',\n      metadata\n    });\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.dateRangesStorage_ = new DateRangesStorage();\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    const metadata = {\n      playlistInfo: {\n        type: 'media',\n        uri: playlist.uri\n      }\n    };\n    this.trigger({\n      type: 'playlistrequeststart',\n      metadata\n    });\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.trigger({\n        type: 'playlistrequestcomplete',\n        metadata\n      });\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    }\n    const metadata = {\n      playlistInfo: {\n        type: 'multivariant',\n        uri: this.src\n      }\n    };\n    this.trigger({\n      type: 'playlistrequeststart',\n      metadata\n    }); // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2,\n          metadata: getStreamingNetworkErrorMetadata({\n            requestType: req.requestType,\n            request: req,\n            error\n          })\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.trigger({\n        type: 'playlistrequestcomplete',\n        metadata\n      });\n      this.src = resolveManifestRedirect(this.src, req);\n      this.trigger({\n        type: 'playlistparsestart',\n        metadata\n      });\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      }); // we haven't loaded any variant playlists here so we default to false for isLive.\n\n      metadata.parsedPlaylist = playlistMetadataPayload(manifest.playlists, metadata.playlistInfo.type, false);\n      this.trigger({\n        type: 'playlistparsecomplete',\n        metadata\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n  /**\n   * Updates or deletes a preexisting pathway clone.\n   * Ensures that all playlists related to the old pathway clone are\n   * either updated or deleted.\n   *\n   * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.\n   *        On delete, the old pathway clone object to be deleted.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteClone(clone, isUpdate) {\n    const main = this.main;\n    const pathway = clone.ID;\n    let i = main.playlists.length; // Iterate backwards through the playlist so we can remove playlists if necessary.\n\n    while (i--) {\n      const p = main.playlists[i];\n      if (p.attributes['PATHWAY-ID'] === pathway) {\n        const oldPlaylistUri = p.resolvedUri;\n        const oldPlaylistId = p.id; // update the indexed playlist and add new playlists by ID and URI\n\n        if (isUpdate) {\n          const newPlaylistUri = this.createCloneURI_(p.resolvedUri, clone);\n          const newPlaylistId = createPlaylistID(pathway, newPlaylistUri);\n          const attributes = this.createCloneAttributes_(pathway, p.attributes);\n          const updatedPlaylist = this.createClonePlaylist_(p, newPlaylistId, clone, attributes);\n          main.playlists[i] = updatedPlaylist;\n          main.playlists[newPlaylistId] = updatedPlaylist;\n          main.playlists[newPlaylistUri] = updatedPlaylist;\n        } else {\n          // Remove the indexed playlist.\n          main.playlists.splice(i, 1);\n        } // Remove playlists by the old ID and URI.\n\n        delete main.playlists[oldPlaylistId];\n        delete main.playlists[oldPlaylistUri];\n      }\n    }\n    this.updateOrDeleteCloneMedia(clone, isUpdate);\n  }\n  /**\n   * Updates or deletes media data based on the pathway clone object.\n   * Due to the complexity of the media groups and playlists, in all cases\n   * we remove all of the old media groups and playlists.\n   * On updates, we then create new media groups and playlists based on the\n   * new pathway clone object.\n   *\n   * @param {Object} clone The pathway clone object for the newly updated pathway clone.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteCloneMedia(clone, isUpdate) {\n    const main = this.main;\n    const id = clone.ID;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType] || !main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        // Remove all media playlists for the media group for this pathway clone.\n        if (groupKey === id) {\n          for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n            const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n            oldMedia.playlists.forEach((p, i) => {\n              const oldMediaPlaylist = main.playlists[p.id];\n              const oldPlaylistId = oldMediaPlaylist.id;\n              const oldPlaylistUri = oldMediaPlaylist.resolvedUri;\n              delete main.playlists[oldPlaylistId];\n              delete main.playlists[oldPlaylistUri];\n            });\n          } // Delete the old media group.\n\n          delete main.mediaGroups[mediaType][groupKey];\n        }\n      }\n    }); // Create the new media groups and playlists if there is an update.\n\n    if (isUpdate) {\n      this.createClonedMediaGroups_(clone);\n    }\n  }\n  /**\n   * Given a pathway clone object, clones all necessary playlists.\n   *\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} basePlaylist The original playlist to clone from.\n   */\n\n  addClonePathway(clone, basePlaylist = {}) {\n    const main = this.main;\n    const index = main.playlists.length;\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const playlistId = createPlaylistID(clone.ID, uri);\n    const attributes = this.createCloneAttributes_(clone.ID, basePlaylist.attributes);\n    const playlist = this.createClonePlaylist_(basePlaylist, playlistId, clone, attributes);\n    main.playlists[index] = playlist; // add playlist by ID and URI\n\n    main.playlists[playlistId] = playlist;\n    main.playlists[uri] = playlist;\n    this.createClonedMediaGroups_(clone);\n  }\n  /**\n   * Given a pathway clone object we create clones of all media.\n   * In this function, all necessary information and updated playlists\n   * are added to the `mediaGroup` object.\n   * Playlists are also added to the `playlists` array so the media groups\n   * will be properly linked.\n   *\n   * @param {Object} clone The pathway clone object.\n   */\n\n  createClonedMediaGroups_(clone) {\n    const id = clone.ID;\n    const baseID = clone['BASE-ID'];\n    const main = this.main;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      // If the media type doesn't exist, or there is already a clone, skip\n      // to the next media type.\n      if (!main.mediaGroups[mediaType] || main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        if (groupKey === baseID) {\n          // Create the group.\n          main.mediaGroups[mediaType][id] = {};\n        } else {\n          // There is no need to iterate over label keys in this case.\n          continue;\n        }\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n          main.mediaGroups[mediaType][id][labelKey] = _extends({}, oldMedia);\n          const newMedia = main.mediaGroups[mediaType][id][labelKey]; // update URIs on the media\n\n          const newUri = this.createCloneURI_(oldMedia.resolvedUri, clone);\n          newMedia.resolvedUri = newUri;\n          newMedia.uri = newUri; // Reset playlists in the new media group.\n\n          newMedia.playlists = []; // Create new playlists in the newly cloned media group.\n\n          oldMedia.playlists.forEach((p, i) => {\n            const oldMediaPlaylist = main.playlists[p.id];\n            const group = groupID(mediaType, id, labelKey);\n            const newPlaylistID = createPlaylistID(id, group); // Check to see if it already exists\n\n            if (oldMediaPlaylist && !main.playlists[newPlaylistID]) {\n              const newMediaPlaylist = this.createClonePlaylist_(oldMediaPlaylist, newPlaylistID, clone);\n              const newPlaylistUri = newMediaPlaylist.resolvedUri;\n              main.playlists[newPlaylistID] = newMediaPlaylist;\n              main.playlists[newPlaylistUri] = newMediaPlaylist;\n            }\n            newMedia.playlists[i] = this.createClonePlaylist_(p, newPlaylistID, clone);\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Using the original playlist to be cloned, and the pathway clone object\n   * information, we create a new playlist.\n   *\n   * @param {Object} basePlaylist  The original playlist to be cloned from.\n   * @param {string} id The desired id of the newly cloned playlist.\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.\n   *\n   * @return {Object} The combined cloned playlist.\n   */\n\n  createClonePlaylist_(basePlaylist, id, clone, attributes) {\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const newProps = {\n      resolvedUri: uri,\n      uri,\n      id\n    }; // Remove all segments from previous playlist in the clone.\n\n    if (basePlaylist.segments) {\n      newProps.segments = [];\n    }\n    if (attributes) {\n      newProps.attributes = attributes;\n    }\n    return merge(basePlaylist, newProps);\n  }\n  /**\n   * Generates an updated URI for a cloned pathway based on the original\n   * pathway's URI and the paramaters from the pathway clone object in the\n   * content steering server response.\n   *\n   * @param {string} baseUri URI to be updated in the cloned pathway.\n   * @param {Object} clone The pathway clone object.\n   *\n   * @return {string} The updated URI for the cloned pathway.\n   */\n\n  createCloneURI_(baseURI, clone) {\n    const uri = new URL(baseURI);\n    uri.hostname = clone['URI-REPLACEMENT'].HOST;\n    const params = clone['URI-REPLACEMENT'].PARAMS; // Add params to the cloned URL.\n\n    for (const key of Object.keys(params)) {\n      uri.searchParams.set(key, params[key]);\n    }\n    return uri.href;\n  }\n  /**\n   * Helper function to create the attributes needed for the new clone.\n   * This mainly adds the necessary media attributes.\n   *\n   * @param {string} id The pathway clone object ID.\n   * @param {Object} oldAttributes The old attributes to compare to.\n   * @return {Object} The new attributes to add to the playlist.\n   */\n\n  createCloneAttributes_(id, oldAttributes) {\n    const attributes = {\n      ['PATHWAY-ID']: id\n    };\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (oldAttributes[mediaType]) {\n        attributes[mediaType] = id;\n      }\n    });\n    return attributes;\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const keyId = playlist.contentProtection[keysystem].attributes.keyId;\n        if (keyId) {\n          keyIds.add(keyId.toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\n\n/**\n * @file xhr.js\n */\n\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\n/**\n * Iterates over the request hooks Set and calls them in order\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} options the request options to pass to the xhr wrapper\n * @return the callback hook function return value, the modified or new options Object.\n */\n\nconst callAllRequestHooks = (requestSet, options) => {\n  if (!requestSet || !requestSet.size) {\n    return;\n  }\n  let newOptions = options;\n  requestSet.forEach(requestCallback => {\n    newOptions = requestCallback(newOptions);\n  });\n  return newOptions;\n};\n/**\n * Iterates over the response hooks Set and calls them in order.\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} request the xhr request object\n * @param {Object} error the xhr error object\n * @param {Object} response the xhr response object\n */\n\nconst callAllResponseHooks = (responseSet, request, error, response) => {\n  if (!responseSet || !responseSet.size) {\n    return;\n  }\n  responseSet.forEach(responseCallback => {\n    responseCallback(request, error, response);\n  });\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    // TODO: Remove beforeRequest in the next major release.\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n    // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n    const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n    const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n      _requestCallbackSet.add(beforeRequest);\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojs.xhr : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n    const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n    _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n    const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n      // call all registered onResponse hooks\n      callAllResponseHooks(_responseCallbackSet, request, error, response);\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestType = options.requestType;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < new Date(segment.dateTimeObject)) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > new Date(lastSegmentStart)) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb, requestType) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      error.metadata = getStreamingNetworkErrorMetadata({\n        requestType,\n        request,\n        error\n      });\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2,\n        metadata: err.metadata\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      const {\n        requestType\n      } = request;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        e.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request,\n          parseFailure: true\n        }); // sidx parsing failed.\n\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    const REQUEST_TYPE = 'dash-sidx';\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        const sidxContainer = container || 'unknown';\n        return fin({\n          status: request.status,\n          message: `Unsupported ${sidxContainer} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        requestType: 'dash-sidx',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    }, REQUEST_TYPE);\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    const metadata = {\n      manifestInfo: {\n        uri: this.mainPlaylistLoader_.srcUrl\n      }\n    };\n    this.trigger({\n      type: 'manifestrequeststart',\n      metadata\n    });\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials,\n      requestType: 'dash-manifest'\n    }, (error, req) => {\n      if (error) {\n        const {\n          requestType\n        } = req;\n        error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request: req,\n          error\n        });\n      }\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      this.trigger({\n        type: 'manifestrequestcomplete',\n        metadata\n      });\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials,\n      requestType: 'dash-clock-sync'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        const {\n          requestType\n        } = req;\n        this.error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request: req,\n          error\n        }); // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    const metadata = {\n      manifestInfo: {\n        uri: this.mainPlaylistLoader_.srcUrl\n      }\n    };\n    this.trigger({\n      type: 'manifestparsestart',\n      metadata\n    });\n    let newMain;\n    try {\n      newMain = parseMainXml({\n        mainXml: this.mainPlaylistLoader_.mainXml_,\n        srcUrl: this.mainPlaylistLoader_.srcUrl,\n        clientOffset: this.mainPlaylistLoader_.clientOffset_,\n        sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n        previousManifest: oldMain\n      });\n    } catch (error) {\n      this.error = error;\n      this.error.metadata = {\n        errorType: videojs.Error.StreamingDashManifestParserError,\n        error\n      };\n      this.trigger('error');\n    } // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    this.addEventStreamToMetadataTrack_(newMain);\n    if (newMain) {\n      const {\n        duration,\n        endList\n      } = newMain;\n      const renditions = [];\n      newMain.playlists.forEach(playlist => {\n        renditions.push({\n          id: playlist.id,\n          bandwidth: playlist.attributes.BANDWIDTH,\n          resolution: playlist.attributes.RESOLUTION,\n          codecs: playlist.attributes.CODECS\n        });\n      });\n      const parsedManifest = {\n        duration,\n        isLive: !endList,\n        renditions\n      };\n      metadata.parsedManifest = parsedManifest;\n      this.trigger({\n        type: 'manifestparsecomplete',\n        metadata\n      });\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n  /**\n   * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n   *\n   * @param {manifest} newMain the newly parsed manifest\n   */\n\n  addEventStreamToMetadataTrack_(newMain) {\n    // Only add new event stream metadata if we have a new manifest.\n    if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n      // convert EventStream to ID3-like data.\n      const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n        return {\n          cueTime: eventStreamNode.start,\n          frames: [{\n            data: eventStreamNode.messageData\n          }]\n        };\n      });\n      this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n    }\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const defaultKID = playlist.contentProtection[keysystem].attributes['cenc:default_KID'];\n        if (defaultKID) {\n          // DASH keyIds are separated by dashes.\n          keyIds.add(defaultKID.replace(/-/g, '').toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n    function toHexString(byteArray) {\n      return byteArray.map(byte => {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n      }).join('');\n    }\n    if (isMultiByte) {\n      charCodeArray = [currentByte, nextByte];\n      i++;\n    } else {\n      charCodeArray = [currentByte];\n    } // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      // We assume any multi-byte char without a decoder is unicode.\n      if (isMultiByte) {\n        const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n        char = String.fromCharCode(parseInt(unicode, 16));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n  // We keep track of positioning information as we go by storing the\n  // number of indentations and the tab offset in this buffer.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push({\n        text: '',\n        indent: 0,\n        offset: 0\n      });\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n        // in the non-displayed array.\n\n        this.nonDisplayed_[this.row_].offset = offset;\n        this.column_ += offset; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        } // Ensure the row is between 0 and 14, otherwise use the most\n        // recent or default row.\n\n        if (row !== this.row_ && row >= 0 && row <= 14) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          const indentations = (data & 0xe) >> 1;\n          this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n          this.nonDisplayed_[this.row_].indent += indentations;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    const logWarning = index => {\n      this.trigger('log', {\n        level: 'warn',\n        message: 'Skipping a malformed 608 caption at index ' + index + '.'\n      });\n    };\n    const content = [];\n    this.displayed_.forEach((row, i) => {\n      if (row && row.text && row.text.length) {\n        try {\n          // remove spaces from the start and end of the string\n          row.text = row.text.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          logWarning(i);\n        } // See the below link for more details on the following fields:\n        // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n        if (row.text.length) {\n          content.push({\n            // The text to be displayed in the caption from this specific row, with whitespace removed.\n            text: row.text,\n            // Value between 1 and 15 representing the PAC row used to calculate line height.\n            line: i + 1,\n            // A number representing the indent position by percentage (CEA-608 PAC indent code).\n            // The value will be a number between 10 and 80. Offset is used to add an aditional\n            // value to the position if necessary.\n            position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n          });\n        }\n      } else if (row === undefined || row === null) {\n        logWarning(i);\n      }\n    });\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = {\n      text: '',\n      indent: 0,\n      offset: 0\n    };\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      /**\n       * Rollover stream expects data from elementary stream.\n       * Elementary stream can push forward 2 types of data\n       * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets\n       * - Tracks metadata from PMT (Program Map Table)\n       * Rollover stream expects pts/dts info to be available, since it stores lastDTS\n       * We should ignore non-PES packets since they may override lastDTS to undefined.\n       * lastDTS is important to signal the next segments\n       * about rollover from the previous segments.\n       */\n      if (data.type === 'metadata') {\n        this.trigger('data', data);\n        return;\n      } // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.content || output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n    * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n    * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n    * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probes an mp4 segment for EMSG boxes containing ID3 data.\n     * https://aomediacodec.github.io/id3-emsg/\n     *\n     * @param {Uint8Array} data segment data\n     * @param {number} offset segment start time\n     * @return {Object[]} an array of ID3 frames\n     */\n\n    probeEmsgID3({\n      data,\n      offset\n    }) {\n      const id3Frames = probe$2.getEmsgID3(data, offset);\n      this.self.postMessage({\n        action: 'probeEmsgID3',\n        id3Frames,\n        emsgData: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline,\n    segment,\n    triggerSegmentEventFn\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n  const handleError = () => {\n    const error = {\n      message: 'Received an error message from the transmuxer worker',\n      metadata: {\n        errorType: videojs.Error.StreamingFailedToTransmuxSegment,\n        segmentInfo: segmentInfoPayload({\n          segment\n        })\n      }\n    };\n    onDone(null, error);\n  };\n  transmuxer.onmessage = handleMessage;\n  transmuxer.onerror = handleError;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    triggerSegmentEventFn({\n      type: 'segmenttransmuxingstart',\n      segment\n    });\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  const {\n    requestType\n  } = request;\n  const metadata = getStreamingNetworkErrorMetadata({\n    requestType,\n    request,\n    error\n  });\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request,\n      metadata\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request,\n      metadata\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request,\n      metadata\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request,\n      metadata\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn, triggerSegmentEventFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  const keyInfo = {\n    uri: request.uri\n  };\n  triggerSegmentEventFn({\n    type: 'segmentkeyloadcomplete',\n    segment,\n    keyInfo\n  });\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    const mediaType = type || 'unknown';\n    return callback({\n      internal: true,\n      message: `Found unsupported ${mediaType} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE,\n      metadata: {\n        mediaType\n      }\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  triggerSegmentEventFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response);\n  triggerSegmentEventFn({\n    type: 'segmentloaded',\n    segment\n  }); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType,\n  triggerSegmentEventFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  triggerSegmentEventFn({\n    type: 'segmentloaded',\n    segment\n  });\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      const timingInfo = {\n        pts: {\n          start: videoSegmentTimingInfo.start.presentation,\n          end: videoSegmentTimingInfo.end.presentation\n        },\n        dts: {\n          start: videoSegmentTimingInfo.start.decode,\n          end: videoSegmentTimingInfo.end.decode\n        }\n      };\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingtiminginfoavailable',\n        segment,\n        timingInfo\n      });\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      const timingInfo = {\n        pts: {\n          start: audioSegmentTimingInfo.start.pts,\n          end: audioSegmentTimingInfo.end.pts\n        },\n        dts: {\n          start: audioSegmentTimingInfo.start.dts,\n          end: audioSegmentTimingInfo.end.dts\n        }\n      };\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingtiminginfoavailable',\n        segment,\n        timingInfo\n      });\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: (result, error) => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingcomplete',\n        segment\n      });\n      doneFn(error, segment, result);\n    },\n    segment,\n    triggerSegmentEventFn\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = (captions, id3Frames) => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (id3Frames && id3Frames.length) {\n        id3Fn(segment, id3Frames);\n      }\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        }\n        workerCallback({\n          action: 'probeEmsgID3',\n          data: bytesAsUint8Array,\n          transmuxer: segment.transmuxer,\n          offset: startTime,\n          callback: ({\n            emsgData,\n            id3Frames\n          }) => {\n            // transfer bytes back to us\n            bytes = emsgData.buffer;\n            segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n            // Initialize CaptionParser if it hasn't been yet\n\n            if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n              finishLoading(undefined, id3Frames);\n              return;\n            }\n            workerCallback({\n              action: 'pushMp4Captions',\n              endAction: 'mp4Captions',\n              transmuxer: segment.transmuxer,\n              data: bytesAsUint8Array,\n              timescales: segment.map.timescales,\n              trackIds: [tracks.video.id],\n              callback: message => {\n                // transfer bytes back to us\n                bytes = message.data.buffer;\n                segment.bytes = bytesAsUint8Array = message.data;\n                message.logs.forEach(function (log) {\n                  onTransmuxerLog(merge(log, {\n                    stream: 'mp4CaptionParser'\n                  }));\n                });\n                finishLoading(message.captions, id3Frames);\n              }\n            });\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker,\n  segment,\n  doneFn\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.onerror = () => {\n    const message = 'An error occurred in the decryption worker';\n    const segmentInfo = segmentInfoPayload({\n      segment\n    });\n    const decryptError = {\n      message,\n      metadata: {\n        error: new Error(message),\n        errorType: videojs.Error.StreamingFailedToDecryptSegment,\n        segmentInfo,\n        keyInfo: {\n          uri: segment.key.resolvedUri || segment.map.key.resolvedUri\n        }\n      }\n    };\n    doneFn(decryptError, segment);\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  triggerSegmentEventFn({\n    type: 'segmentdecryptionstart'\n  });\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker,\n    segment,\n    doneFn\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    triggerSegmentEventFn({\n      type: 'segmentdecryptioncomplete',\n      segment\n    });\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog,\n      triggerSegmentEventFn\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog,\n            triggerSegmentEventFn\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog,\n          triggerSegmentEventFn\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        triggerSegmentEventFn({\n          type: 'segmentdecryptionstart',\n          segment\n        });\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key,\n          segment,\n          doneFn\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          triggerSegmentEventFn({\n            type: 'segmentdecryptioncomplete',\n            segment\n          });\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer',\n      requestType: 'segment-key'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn, triggerSegmentEventFn);\n    const keyInfo = {\n      uri: segment.key.resolvedUri\n    };\n    triggerSegmentEventFn({\n      type: 'segmentkeyloadstart',\n      segment,\n      keyInfo\n    });\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer',\n        requestType: 'segment-key'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn, triggerSegmentEventFn);\n      const keyInfo = {\n        uri: segment.map.key.resolvedUri\n      };\n      triggerSegmentEventFn({\n        type: 'segmentkeyloadstart',\n        segment,\n        keyInfo\n      });\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map),\n      requestType: 'segment-media-initialization'\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn,\n      triggerSegmentEventFn\n    });\n    triggerSegmentEventFn({\n      type: 'segmentloadstart',\n      segment\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment),\n    requestType: 'segment'\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType,\n    triggerSegmentEventFn\n  });\n  triggerSegmentEventFn({\n    type: 'segmentloadstart',\n    segment\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  let pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  if (!isNaN(this.customPixelRatio)) {\n    pixelRatio = this.customPixelRatio;\n  }\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    let pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (!isNaN(this.customPixelRatio)) {\n      pixelRatio = this.customPixelRatio;\n    }\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n/**\n * Example:\n * https://host.com/path1/path2/path3/segment.ts?arg1=val1\n * -->\n * path3/segment.ts\n *\n * @param resolvedUri\n * @return {string}\n */\n\nfunction compactSegmentUrlDescription(resolvedUri) {\n  try {\n    return new URL(resolvedUri).pathname.split('/').slice(-2).join('/');\n  } catch (e) {\n    return '';\n  }\n}\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n    // with positioning data\n\n    if (caption.content) {\n      caption.content.forEach(value => {\n        const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n        cue.line = value.line;\n        cue.align = 'left';\n        cue.position = value.position;\n        cue.positionAlign = 'line-left';\n        inbandTextTracks[track].addCue(cue);\n      });\n    } else {\n      // otherwise, a text value with combined captions is sent\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    }\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    } // If we have no frames, we can't create a cue.\n\n    if (!metadata.frames || !metadata.frames.length) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const finiteDuration = isFinite(videoDuration) ? videoDuration : startTime;\n    const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n}; // object for mapping daterange attributes\n\nconst dateRangeAttr = {\n  id: 'ID',\n  class: 'CLASS',\n  startDate: 'START-DATE',\n  duration: 'DURATION',\n  endDate: 'END-DATE',\n  endOnNext: 'END-ON-NEXT',\n  plannedDuration: 'PLANNED-DURATION',\n  scte35Out: 'SCTE35-OUT',\n  scte35In: 'SCTE35-IN'\n};\nconst dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n/**\n * Add DateRange metadata text track to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} dateRanges parsed media playlist\n * @private\n */\n\nconst addDateRangeMetadata = ({\n  inbandTextTracks,\n  dateRanges\n}) => {\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  dateRanges.forEach(dateRange => {\n    // we generate multiple cues for each date range with different attributes\n    for (const key of Object.keys(dateRange)) {\n      if (dateRangeKeysToOmit.has(key)) {\n        continue;\n      }\n      const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n      cue.id = dateRange.id;\n      cue.type = 'com.apple.quicktime.HLS';\n      cue.value = {\n        key: dateRangeAttr[key],\n        data: dateRange[key]\n      };\n      if (key === 'scte35Out' || key === 'scte35In') {\n        cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n      }\n      metadataTrack.addCue(cue);\n    }\n    dateRange.processDateRange();\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  if (!videojs.browser.IS_ANY_SAFARI) {\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  }\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  const uniqueCues = {};\n  for (let i = cues.length - 1; i >= 0; i--) {\n    const cue = cues[i];\n    const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n    if (uniqueCues[cueKey]) {\n      track.removeCue(cue);\n    } else {\n      uniqueCues[cueKey] = cue;\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst shouldFixBadTimelineChanges = timelineChangeController => {\n  if (!timelineChangeController) {\n    return false;\n  }\n  const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n    type: 'audio'\n  });\n  const pendingMainTimelineChange = timelineChangeController.pendingTimelineChange({\n    type: 'main'\n  });\n  const hasPendingTimelineChanges = pendingAudioTimelineChange && pendingMainTimelineChange;\n  const differentPendingChanges = hasPendingTimelineChanges && pendingAudioTimelineChange.to !== pendingMainTimelineChange.to;\n  const isNotInitialPendingTimelineChange = hasPendingTimelineChanges && pendingAudioTimelineChange.from !== -1 && pendingMainTimelineChange.from !== -1;\n  if (isNotInitialPendingTimelineChange && differentPendingChanges) {\n    return true;\n  }\n  return false;\n};\nconst fixBadTimelineChange = segmentLoader => {\n  if (!segmentLoader) {\n    return;\n  }\n  segmentLoader.pause();\n  segmentLoader.resetEverything();\n  segmentLoader.load();\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n *\n * @param {Object} options type of segment loader and segment either segmentInfo or simple segment\n * @return a segmentInfo payload for events or errors.\n */\n\nconst segmentInfoPayload = ({\n  type,\n  segment\n}) => {\n  if (!segment) {\n    return;\n  }\n  const isEncrypted = Boolean(segment.key || segment.map && segment.map.ke);\n  const isMediaInitialization = Boolean(segment.map && !segment.map.bytes);\n  const start = segment.startOfSegment === undefined ? segment.start : segment.startOfSegment;\n  return {\n    type: type || segment.type,\n    uri: segment.resolvedUri || segment.uri,\n    start,\n    duration: segment.duration,\n    isEncrypted,\n    isMediaInitialization\n  };\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings;\n    this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.shouldForceTimestampOffsetAfterResync_ = false;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    });\n    this.sourceUpdater_.on('codecschange', metadata => {\n      this.trigger(_extends({\n        type: 'codecschange'\n      }, metadata));\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', metadata => {\n        this.trigger(_extends({\n          type: 'timelinechange'\n        }, metadata));\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  /**\n   * TODO: Current sync controller consists of many hls-specific strategies\n   * media sequence sync is also hls-specific, and we would like to be protocol-agnostic on this level\n   * this should be a part of the sync-controller and sync controller should expect different strategy list based on the protocol.\n   *\n   * @return {MediaSequenceSync|null}\n   * @private\n   */\n\n  get mediaSequenceSync_() {\n    return this.syncController_.getMediaSequenceSync(this.loaderType_);\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`);\n    if (this.mediaSequenceSync_) {\n      this.mediaSequenceSync_.update(newPlaylist, this.currentTime_());\n      this.logger_(`Playlist update:\ncurrentTime: ${this.currentTime_()}\nbufferedEnd: ${lastBufferedEnd(this.buffered_())}\n`, this.mediaSequenceSync_.diagnostics);\n    } // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n        // to false, resulting in fetching segments at currentTime and causing repeated\n        // same-segment requests on playlist change. This erroneously drives up the playback watcher\n        // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n        // will not change the buffer.\n        // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n        const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n        if (isLLHLS) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    if (this.mediaSequenceSync_) {\n      this.mediaSequenceSync_.resetAppendedStatus();\n    }\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false; // this is mainly to sync timing-info when switching between renditions with and without timestamp-rollover,\n    // so we don't want it for DASH or fragmented mp4 segments.\n\n    const isFmp4 = this.currentMediaInfo_ && this.currentMediaInfo_.isFmp4;\n    const isHlsTs = this.sourceType_ === 'hls' && !isFmp4;\n    if (isHlsTs) {\n      this.shouldForceTimestampOffsetAfterResync_ = true;\n    }\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: segmentInfo\n      })\n    };\n    this.trigger({\n      type: 'segmentselected',\n      metadata\n    });\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${next.mediaIndex}`);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      let segmentIndex;\n      let partIndex;\n      let startTime;\n      const targetTime = this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_();\n      if (this.mediaSequenceSync_) {\n        this.logger_(`chooseNextRequest_ request after Quality Switch:\nFor TargetTime: ${targetTime}.\nCurrentTime: ${this.currentTime_()}\nBufferedEnd: ${bufferedEnd}\nFetch At Buffer: ${this.fetchAtBuffer_}\n`, this.mediaSequenceSync_.diagnostics);\n      }\n      if (this.mediaSequenceSync_ && this.mediaSequenceSync_.isReliable) {\n        const syncInfo = this.getSyncInfoFromMediaSequenceSync_(targetTime);\n        if (!syncInfo) {\n          const message = 'No sync info found while using media sequence sync';\n          this.error({\n            message,\n            metadata: {\n              errorType: videojs.Error.StreamingFailedToSelectNextSegment,\n              error: new Error(message)\n            }\n          });\n          this.logger_('chooseNextRequest_ - no sync info found using media sequence sync'); // no match\n\n          return null;\n        }\n        this.logger_(`chooseNextRequest_ mediaSequence syncInfo (${syncInfo.start} --> ${syncInfo.end})`);\n        segmentIndex = syncInfo.segmentIndex;\n        partIndex = syncInfo.partIndex;\n        startTime = syncInfo.start;\n      } else {\n        this.logger_('chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.'); // fallback\n\n        const mediaInfoForTime = Playlist.getMediaInfoForTime({\n          exactManifestTimings: this.exactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: targetTime,\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        });\n        segmentIndex = mediaInfoForTime.segmentIndex;\n        partIndex = mediaInfoForTime.partIndex;\n        startTime = mediaInfoForTime.startTime;\n      }\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${targetTime}` : `currentTime ${targetTime}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n      this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${next.mediaIndex} `);\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n    // it applies to each segment in each media playlist.\n    // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n    const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    if (this.shouldForceTimestampOffsetAfterResync_) {\n      this.shouldForceTimestampOffsetAfterResync_ = false;\n      next.forceTimestampOffset = true;\n      this.logger_('choose next request. Force timestamp offset after loader resync');\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  getSyncInfoFromMediaSequenceSync_(targetTime) {\n    if (!this.mediaSequenceSync_) {\n      return null;\n    } // we should pull the target time to the least available time if we drop out of sync for any reason\n\n    const finalTargetTime = Math.max(targetTime, this.mediaSequenceSync_.start);\n    if (targetTime !== finalTargetTime) {\n      this.logger_(`getSyncInfoFromMediaSequenceSync_. Pulled target time from ${targetTime} to ${finalTargetTime}`);\n    }\n    const mediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(finalTargetTime);\n    if (!mediaSequenceSyncInfo) {\n      // no match at all\n      return null;\n    }\n    if (!mediaSequenceSyncInfo.isAppended) {\n      // has a perfect match\n      return mediaSequenceSyncInfo;\n    } // has match, but segment was already appended.\n    // attempt to auto-advance to the nearest next segment:\n\n    const nextMediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(mediaSequenceSyncInfo.end);\n    if (!nextMediaSequenceSyncInfo) {\n      // no match at all\n      return null;\n    }\n    if (nextMediaSequenceSyncInfo.isAppended) {\n      this.logger_('getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!');\n    } // got match with the nearest next segment\n\n    return nextMediaSequenceSyncInfo;\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    const {\n      hasAudio,\n      hasVideo\n    } = trackInfo;\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: simpleSegment\n      }),\n      trackInfo: {\n        hasAudio,\n        hasVideo\n      }\n    };\n    this.trigger({\n      type: 'segmenttransmuxingtrackinfoavailable',\n      metadata\n    });\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      if (shouldFixBadTimelineChanges(this.timelineChangeController_)) {\n        fixBadTimelineChange(this);\n      }\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    } // we need to allow an append here even if we're moving to different timelines.\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      if (shouldFixBadTimelineChanges(this.timelineChangeController_)) {\n        fixBadTimelineChange(this);\n      }\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.error({\n      message: `${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`,\n      metadata: {\n        errorType: videojs.Error.StreamingFailedToAppendSegment\n      }\n    });\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: segmentInfo\n      })\n    };\n    this.trigger({\n      type: 'segmentappendstart',\n      metadata\n    });\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting\n${compactSegmentUrlDescription(segmentInfo.uri)}\n${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      },\n      triggerSegmentEventFn: ({\n        type,\n        segment,\n        keyInfo,\n        trackInfo,\n        timingInfo\n      }) => {\n        const segInfo = segmentInfoPayload({\n          segment\n        });\n        const metadata = {\n          segmentInfo: segInfo\n        }; // add other properties if necessary.\n\n        if (keyInfo) {\n          metadata.keyInfo = keyInfo;\n        }\n        if (trackInfo) {\n          metadata.trackInfo = trackInfo;\n        }\n        if (timingInfo) {\n          metadata.timingInfo = timingInfo;\n        }\n        this.trigger({\n          type,\n          metadata\n        });\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const isEncrypted = segmentInfo.segment.key || segmentInfo.segment.map && segmentInfo.segment.map.key;\n    const isMediaInitialization = segmentInfo.segment.map && !segmentInfo.segment.map.bytes;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part,\n      type: this.loaderType_,\n      start: segmentInfo.startOfSegment,\n      duration: segmentInfo.duration,\n      isEncrypted,\n      isMediaInitialization\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const metadata = {\n      bandwidthInfo: {\n        from: this.bandwidth,\n        to: stats.bandwidth\n      }\n    }; // player event with payload\n\n    this.trigger({\n      type: 'bandwidthupdated',\n      metadata\n    });\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      const metadata = {\n        segmentInfo: segmentInfoPayload({\n          type: this.loaderType_,\n          segment: this.pendingSegment_\n        })\n      };\n      this.trigger({\n        type: 'appendsdone',\n        metadata\n      });\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    if (segmentInfo.part && segmentInfo.part.syncInfo) {\n      // low-latency flow\n      segmentInfo.part.syncInfo.markAppended();\n    } else if (segmentInfo.segment.syncInfo) {\n      // normal flow\n      segmentInfo.segment.syncInfo.markAppended();\n    } // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      programDateTime: segment.programDateTime,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n    // Only update if we change the codec base.\n    // For example, going from avc1.640028 to avc1.64001f does not require a changeType call.\n\n    const newCodecBase = codec.substring(0, codec.indexOf('.'));\n    const oldCodec = sourceUpdater.codecs[type];\n    const oldCodecBase = oldCodec.substring(0, oldCodec.indexOf('.'));\n    if (oldCodecBase === newCodecBase) {\n      return;\n    }\n    const metadata = {\n      codecsChangeInfo: {\n        from: oldCodec,\n        to: codec\n      }\n    };\n    sourceUpdater.trigger({\n      type: 'codecschange',\n      metadata\n    });\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${oldCodec} to ${codec}`); // check if change to the provided type is supported\n\n    try {\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    } catch (e) {\n      metadata.errorType = videojs.Error.StreamingCodecsChangeError;\n      metadata.error = e;\n      e.metadata = metadata;\n      sourceUpdater.error_ = e;\n      sourceUpdater.trigger('error');\n      videojs.log.warn(`Failed to changeType on ${type}Buffer`, e);\n    }\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  const bufferedRangesForType = sourceUpdater[`${type}Buffered`]();\n  const descriptiveString = bufferedRangesToString(bufferedRangesForType);\n  sourceUpdater.logger_(`received \"updateend\" event for ${type} Source Buffer: `, descriptiveString);\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this.\n    return !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\nconst bufferToHexString = buffer => {\n  const uInt8Buffer = new Uint8Array(buffer);\n  return Array.from(uInt8Buffer).map(byte => byte.toString(16).padStart(2, '0')).join('');\n};\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message,\n        metadata: {\n          errorType: videojs.Error.StreamingVttParserError,\n          error: e\n        }\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const {\n      MPEGTS,\n      LOCAL\n    } = segmentInfo.timestampmap;\n    /**\n     * From the spec:\n     * The MPEGTS media timestamp MUST use a 90KHz timescale,\n     * even when non-WebVTT Media Segments use a different timescale.\n     */\n\n    const mpegTsInSeconds = MPEGTS / ONE_SECOND_IN_TS;\n    const diff = mpegTsInSeconds - LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      const duration = cue.endTime - cue.startTime;\n      const startTime = MPEGTS === 0 ? cue.startTime + diff : this.handleRollover_(cue.startTime + diff, mappingObj.time);\n      cue.startTime = Math.max(startTime, 0);\n      cue.endTime = Math.max(startTime + duration, 0);\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n  /**\n   * MPEG-TS PES timestamps are limited to 2^33.\n   * Once they reach 2^33, they roll over to 0.\n   * mux.js handles PES timestamp rollover for the following scenarios:\n   * [forward rollover(right)] ->\n   *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0\n   * [backward rollover(left)] -->\n   *    we seek back to position before rollover.\n   *\n   * According to the HLS SPEC:\n   * When synchronizing WebVTT with PES timestamps, clients SHOULD account\n   * for cases where the 33-bit PES timestamps have wrapped and the WebVTT\n   * cue times have not.  When the PES timestamp wraps, the WebVTT Segment\n   * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT\n   * time to the new (low valued) PES timestamp.\n   *\n   * So we want to handle rollover here and align VTT Cue start/end time to the player's time.\n   */\n\n  handleRollover_(value, reference) {\n    if (reference === null) {\n      return value;\n    }\n    let valueIn90khz = value * ONE_SECOND_IN_TS;\n    const referenceIn90khz = reference * ONE_SECOND_IN_TS;\n    let offset;\n    if (referenceIn90khz < valueIn90khz) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    } // distance(value - reference) > 2^32\n\n    while (Math.abs(valueIn90khz - referenceIn90khz) > 4294967296) {\n      valueIn90khz += offset;\n    }\n    return valueIn90khz / ONE_SECOND_IN_TS;\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\nclass SyncInfo {\n  /**\n   * @param {number} start - media sequence start\n   * @param {number} end - media sequence end\n   * @param {number} segmentIndex - index for associated segment\n   * @param {number|null} [partIndex] - index for associated part\n   * @param {boolean} [appended] - appended indicator\n   *\n   */\n  constructor({\n    start,\n    end,\n    segmentIndex,\n    partIndex = null,\n    appended = false\n  }) {\n    this.start_ = start;\n    this.end_ = end;\n    this.segmentIndex_ = segmentIndex;\n    this.partIndex_ = partIndex;\n    this.appended_ = appended;\n  }\n  isInRange(targetTime) {\n    return targetTime >= this.start && targetTime < this.end;\n  }\n  markAppended() {\n    this.appended_ = true;\n  }\n  resetAppendedStatus() {\n    this.appended_ = false;\n  }\n  get isAppended() {\n    return this.appended_;\n  }\n  get start() {\n    return this.start_;\n  }\n  get end() {\n    return this.end_;\n  }\n  get segmentIndex() {\n    return this.segmentIndex_;\n  }\n  get partIndex() {\n    return this.partIndex_;\n  }\n}\nclass SyncInfoData {\n  /**\n   *\n   * @param {SyncInfo} segmentSyncInfo - sync info for a given segment\n   * @param {Array<SyncInfo>} [partsSyncInfo] - sync infos for a list of parts for a given segment\n   */\n  constructor(segmentSyncInfo, partsSyncInfo = []) {\n    this.segmentSyncInfo_ = segmentSyncInfo;\n    this.partsSyncInfo_ = partsSyncInfo;\n  }\n  get segmentSyncInfo() {\n    return this.segmentSyncInfo_;\n  }\n  get partsSyncInfo() {\n    return this.partsSyncInfo_;\n  }\n  get hasPartsSyncInfo() {\n    return this.partsSyncInfo_.length > 0;\n  }\n  resetAppendStatus() {\n    this.segmentSyncInfo_.resetAppendedStatus();\n    this.partsSyncInfo_.forEach(partSyncInfo => partSyncInfo.resetAppendedStatus());\n  }\n}\nclass MediaSequenceSync {\n  constructor() {\n    /**\n     * @type {Map<number, SyncInfoData>}\n     * @protected\n     */\n    this.storage_ = new Map();\n    this.diagnostics_ = '';\n    this.isReliable_ = false;\n    this.start_ = -Infinity;\n    this.end_ = Infinity;\n  }\n  get start() {\n    return this.start_;\n  }\n  get end() {\n    return this.end_;\n  }\n  get diagnostics() {\n    return this.diagnostics_;\n  }\n  get isReliable() {\n    return this.isReliable_;\n  }\n  resetAppendedStatus() {\n    this.storage_.forEach(syncInfoData => syncInfoData.resetAppendStatus());\n  }\n  /**\n   * update sync storage\n   *\n   * @param {Object} playlist\n   * @param {number} currentTime\n   *\n   * @return {void}\n   */\n\n  update(playlist, currentTime) {\n    const {\n      mediaSequence,\n      segments\n    } = playlist;\n    this.isReliable_ = this.isReliablePlaylist_(mediaSequence, segments);\n    if (!this.isReliable_) {\n      return;\n    }\n    return this.updateStorage_(segments, mediaSequence, this.calculateBaseTime_(mediaSequence, currentTime));\n  }\n  /**\n   * @param {number} targetTime\n   * @return {SyncInfo|null}\n   */\n\n  getSyncInfoForTime(targetTime) {\n    for (const {\n      segmentSyncInfo,\n      partsSyncInfo\n    } of this.storage_.values()) {\n      // Normal segment flow:\n      if (!partsSyncInfo.length) {\n        if (segmentSyncInfo.isInRange(targetTime)) {\n          return segmentSyncInfo;\n        }\n      } else {\n        // Low latency flow:\n        for (const partSyncInfo of partsSyncInfo) {\n          if (partSyncInfo.isInRange(targetTime)) {\n            return partSyncInfo;\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getSyncInfoForMediaSequence(mediaSequence) {\n    return this.storage_.get(mediaSequence);\n  }\n  updateStorage_(segments, startingMediaSequence, startingTime) {\n    const newStorage = new Map();\n    let newDiagnostics = '\\n';\n    let currentStart = startingTime;\n    let currentMediaSequence = startingMediaSequence;\n    this.start_ = currentStart;\n    segments.forEach((segment, segmentIndex) => {\n      const prevSyncInfoData = this.storage_.get(currentMediaSequence);\n      const segmentStart = currentStart;\n      const segmentEnd = segmentStart + segment.duration;\n      const segmentIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.segmentSyncInfo && prevSyncInfoData.segmentSyncInfo.isAppended);\n      const segmentSyncInfo = new SyncInfo({\n        start: segmentStart,\n        end: segmentEnd,\n        appended: segmentIsAppended,\n        segmentIndex\n      });\n      segment.syncInfo = segmentSyncInfo;\n      let currentPartStart = currentStart;\n      const partsSyncInfo = (segment.parts || []).map((part, partIndex) => {\n        const partStart = currentPartStart;\n        const partEnd = currentPartStart + part.duration;\n        const partIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.partsSyncInfo && prevSyncInfoData.partsSyncInfo[partIndex] && prevSyncInfoData.partsSyncInfo[partIndex].isAppended);\n        const partSyncInfo = new SyncInfo({\n          start: partStart,\n          end: partEnd,\n          appended: partIsAppended,\n          segmentIndex,\n          partIndex\n        });\n        currentPartStart = partEnd;\n        newDiagnostics += `Media Sequence: ${currentMediaSequence}.${partIndex} | Range: ${partStart} --> ${partEnd} | Appended: ${partIsAppended}\\n`;\n        part.syncInfo = partSyncInfo;\n        return partSyncInfo;\n      });\n      newStorage.set(currentMediaSequence, new SyncInfoData(segmentSyncInfo, partsSyncInfo));\n      newDiagnostics += `${compactSegmentUrlDescription(segment.resolvedUri)} | Media Sequence: ${currentMediaSequence} | Range: ${segmentStart} --> ${segmentEnd} | Appended: ${segmentIsAppended}\\n`;\n      currentMediaSequence++;\n      currentStart = segmentEnd;\n    });\n    this.end_ = currentStart;\n    this.storage_ = newStorage;\n    this.diagnostics_ = newDiagnostics;\n  }\n  calculateBaseTime_(mediaSequence, fallback) {\n    if (!this.storage_.size) {\n      // Initial setup flow.\n      return 0;\n    }\n    if (this.storage_.has(mediaSequence)) {\n      // Normal flow.\n      return this.storage_.get(mediaSequence).segmentSyncInfo.start;\n    } // Fallback flow.\n    // There is a gap between last recorded playlist and a new one received.\n\n    return fallback;\n  }\n  isReliablePlaylist_(mediaSequence, segments) {\n    return mediaSequence !== undefined && mediaSequence !== null && Array.isArray(segments) && segments.length;\n  }\n}\nclass DependantMediaSequenceSync extends MediaSequenceSync {\n  constructor(parent) {\n    super();\n    this.parent_ = parent;\n  }\n  calculateBaseTime_(mediaSequence, fallback) {\n    if (!this.storage_.size) {\n      const info = this.parent_.getSyncInfoForMediaSequence(mediaSequence);\n      if (info) {\n        return info.segmentSyncInfo.start;\n      }\n      return 0;\n    }\n    return super.calculateBaseTime_(mediaSequence, fallback);\n  }\n}\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}, {\n  name: 'MediaSequence',\n  /**\n   * run media sequence strategy\n   *\n   * @param {SyncController} syncController\n   * @param {Object} playlist\n   * @param {number} duration\n   * @param {number} currentTimeline\n   * @param {number} currentTime\n   * @param {string} type\n   */\n  run: (syncController, playlist, duration, currentTimeline, currentTime, type) => {\n    const mediaSequenceSync = syncController.getMediaSequenceSync(type);\n    if (!mediaSequenceSync) {\n      return null;\n    }\n    if (!mediaSequenceSync.isReliable) {\n      return null;\n    }\n    const syncInfo = mediaSequenceSync.getSyncInfoForTime(currentTime);\n    if (!syncInfo) {\n      return null;\n    }\n    return {\n      time: syncInfo.start,\n      partIndex: syncInfo.partIndex,\n      segmentIndex: syncInfo.segmentIndex\n    };\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {}; // TODO: this map should be only available for HLS. Since only HLS has MediaSequence.\n    //  For some reason this map helps with syncing between quality switch for MPEG-DASH as well.\n    //  Moreover if we disable this map for MPEG-DASH - quality switch will be broken.\n    //  MPEG-DASH should have its own separate sync strategy\n\n    const main = new MediaSequenceSync();\n    const audio = new DependantMediaSequenceSync(main);\n    const vtt = new DependantMediaSequenceSync(main);\n    this.mediaSequenceStorage_ = {\n      main,\n      audio,\n      vtt\n    };\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   *\n   * @param {string} loaderType\n   * @return {MediaSequenceSync|null}\n   */\n\n  getMediaSequenceSync(loaderType) {\n    return this.mediaSequenceStorage_[loaderType] || null;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime, type) {\n    // Always use VOD sync point for VOD\n    if (duration !== Infinity) {\n      const vodSyncPointStrategy = syncPointStrategies.find(({\n        name\n      }) => name === 'VOD');\n      return vodSyncPointStrategy.run(this, playlist, duration);\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime, type);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // If we have exact match just return it instead of finding the nearest distance\n\n    for (const syncPointInfo of syncPoints) {\n      const {\n        syncPoint,\n        strategy\n      } = syncPointInfo;\n      const {\n        segmentIndex,\n        time\n      } = syncPoint;\n      if (segmentIndex < 0) {\n        continue;\n      }\n      const selectedSegment = playlist.segments[segmentIndex];\n      const start = time;\n      const end = start + selectedSegment.duration;\n      this.logger_(`Strategy: ${strategy}. Current time: ${currentTime}. selected segment: ${segmentIndex}. Time: [${start} -> ${end}]}`);\n      if (currentTime >= start && currentTime < end) {\n        this.logger_('Found sync point with exact match: ', syncPoint);\n        return syncPoint;\n      }\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime, type) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime, type);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      const metadata = {\n        timelineChangeInfo: {\n          from,\n          to\n        }\n      };\n      this.trigger({\n        type: 'timelinechange',\n        metadata\n      });\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings; // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * A utility class for setting properties and maintaining the state of the content steering manifest.\n *\n * Content Steering manifest format:\n * VERSION: number (required) currently only version 1 is supported.\n * TTL: number in seconds (optional) until the next content steering manifest reload.\n * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.\n */\n\nclass SteeringManifest {\n  constructor() {\n    this.priority_ = [];\n    this.pathwayClones_ = new Map();\n  }\n  set version(number) {\n    // Only version 1 is currently supported for both DASH and HLS.\n    if (number === 1) {\n      this.version_ = number;\n    }\n  }\n  set ttl(seconds) {\n    // TTL = time-to-live, default = 300 seconds.\n    this.ttl_ = seconds || 300;\n  }\n  set reloadUri(uri) {\n    if (uri) {\n      // reload URI can be relative to the previous reloadUri.\n      this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n    }\n  }\n  set priority(array) {\n    // priority must be non-empty and unique values.\n    if (array && array.length) {\n      this.priority_ = array;\n    }\n  }\n  set pathwayClones(array) {\n    // pathwayClones must be non-empty.\n    if (array && array.length) {\n      this.pathwayClones_ = new Map(array.map(clone => [clone.ID, clone]));\n    }\n  }\n  get version() {\n    return this.version_;\n  }\n  get ttl() {\n    return this.ttl_;\n  }\n  get reloadUri() {\n    return this.reloadUri_;\n  }\n  get priority() {\n    return this.priority_;\n  }\n  get pathwayClones() {\n    return this.pathwayClones_;\n  }\n}\n/**\n * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {function} xhr for making a network request from the browser.\n * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n */\n\nclass ContentSteeringController extends videojs.EventTarget {\n  constructor(xhr, bandwidth) {\n    super();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = false;\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.currentPathwayClones = new Map();\n    this.nextPathwayClones = new Map();\n    this.excludedSteeringManifestURLs = new Set();\n    this.logger_ = logger('Content Steering');\n    this.xhr_ = xhr;\n    this.getBandwidth_ = bandwidth;\n  }\n  /**\n   * Assigns the content steering tag properties to the steering controller\n   *\n   * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url\n   * @param {Object} steeringTag the content steering tag from the main manifest\n   */\n\n  assignTagProperties(baseUrl, steeringTag) {\n    this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n    const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n    if (!steeringUri) {\n      this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n      this.trigger('error');\n      return;\n    } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n    if (steeringUri.startsWith('data:')) {\n      this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n      return;\n    } // reloadUri is the resolution of the main manifest URL and steering URL.\n\n    this.steeringManifest.reloadUri = resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n    this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n    this.queryBeforeStart = steeringTag.queryBeforeStart;\n    this.proxyServerUrl_ = steeringTag.proxyServerURL; // trigger a steering event if we have a pathway from the content steering tag.\n    // this tells VHS which segment pathway to start with.\n    // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n    if (this.defaultPathway && !this.queryBeforeStart) {\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Requests the content steering manifest and parse the response. This should only be called after\n   * assignTagProperties was called with a content steering tag.\n   *\n   * @param {string} initialUri The optional uri to make the request with.\n   *    If set, the request should be made with exactly what is passed in this variable.\n   *    This scenario should only happen once on initalization.\n   */\n\n  requestSteeringManifest(initial) {\n    const reloadUri = this.steeringManifest.reloadUri;\n    if (!reloadUri) {\n      return;\n    } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n    // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n    // This request URI accounts for manifest URIs that have been excluded.\n\n    const uri = initial ? reloadUri : this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n    if (!uri) {\n      this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n      this.trigger('error');\n      this.dispose();\n      return;\n    }\n    const metadata = {\n      contentSteeringInfo: {\n        uri\n      }\n    };\n    this.trigger({\n      type: 'contentsteeringloadstart',\n      metadata\n    });\n    this.request_ = this.xhr_({\n      uri,\n      requestType: 'content-steering-manifest'\n    }, (error, errorInfo) => {\n      if (error) {\n        // If the client receives HTTP 410 Gone in response to a manifest request,\n        // it MUST NOT issue another request for that URI for the remainder of the\n        // playback session. It MAY continue to use the most-recently obtained set\n        // of Pathways.\n        if (errorInfo.status === 410) {\n          this.logger_(`manifest request 410 ${error}.`);\n          this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n          this.excludedSteeringManifestURLs.add(uri);\n          return;\n        } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n        // header in response to a manifest request, it SHOULD wait until the time\n        // specified by the Retry-After header to reissue the request.\n\n        if (errorInfo.status === 429) {\n          const retrySeconds = errorInfo.responseHeaders['retry-after'];\n          this.logger_(`manifest request 429 ${error}.`);\n          this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n          this.startTTLTimeout_(parseInt(retrySeconds, 10));\n          return;\n        } // If the Steering Manifest cannot be loaded and parsed correctly, the\n        // client SHOULD continue to use the previous values and attempt to reload\n        // it after waiting for the previously-specified TTL (or 5 minutes if\n        // none).\n\n        this.logger_(`manifest failed to load ${error}.`);\n        this.startTTLTimeout_();\n        return;\n      }\n      this.trigger({\n        type: 'contentsteeringloadcomplete',\n        metadata\n      });\n      let steeringManifestJson;\n      try {\n        steeringManifestJson = JSON.parse(this.request_.responseText);\n      } catch (parseError) {\n        const errorMetadata = {\n          errorType: videojs.Error.StreamingContentSteeringParserError,\n          error: parseError\n        };\n        this.trigger({\n          type: 'error',\n          metadata: errorMetadata\n        });\n      }\n      this.assignSteeringProperties_(steeringManifestJson);\n      const parsedMetadata = {\n        contentSteeringInfo: metadata.contentSteeringInfo,\n        contentSteeringManifest: {\n          version: this.steeringManifest.version,\n          reloadUri: this.steeringManifest.reloadUri,\n          priority: this.steeringManifest.priority\n        }\n      };\n      this.trigger({\n        type: 'contentsteeringparsed',\n        metadata: parsedMetadata\n      });\n      this.startTTLTimeout_();\n    });\n  }\n  /**\n   * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n   *\n   * @param {string} steeringUrl the steering manifest url\n   * @return the steering manifest url to a proxy server with all parameters set\n   */\n\n  setProxyServerUrl_(steeringUrl) {\n    const steeringUrlObject = new window$1.URL(steeringUrl);\n    const proxyServerUrlObject = new window$1.URL(this.proxyServerUrl_);\n    proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n    return this.setSteeringParams_(proxyServerUrlObject.toString());\n  }\n  /**\n   * Decodes and parses the data uri encoded steering manifest\n   *\n   * @param {string} dataUri the data uri to be decoded and parsed.\n   */\n\n  decodeDataUriManifest_(dataUri) {\n    const steeringManifestJson = JSON.parse(window$1.atob(dataUri));\n    this.assignSteeringProperties_(steeringManifestJson);\n  }\n  /**\n   * Set the HLS or DASH content steering manifest request query parameters. For example:\n   * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n   * _DASH_pathway and _DASH_throughput\n   *\n   * @param {string} uri to add content steering server parameters to.\n   * @return a new uri as a string with the added steering query parameters.\n   */\n\n  setSteeringParams_(url) {\n    const urlObject = new window$1.URL(url);\n    const path = this.getPathway();\n    const networkThroughput = this.getBandwidth_();\n    if (path) {\n      const pathwayKey = `_${this.manifestType_}_pathway`;\n      urlObject.searchParams.set(pathwayKey, path);\n    }\n    if (networkThroughput) {\n      const throughputKey = `_${this.manifestType_}_throughput`;\n      urlObject.searchParams.set(throughputKey, networkThroughput);\n    }\n    return urlObject.toString();\n  }\n  /**\n   * Assigns the current steering manifest properties and to the SteeringManifest object\n   *\n   * @param {Object} steeringJson the raw JSON steering manifest\n   */\n\n  assignSteeringProperties_(steeringJson) {\n    this.steeringManifest.version = steeringJson.VERSION;\n    if (!this.steeringManifest.version) {\n      this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n      this.trigger('error');\n      return;\n    }\n    this.steeringManifest.ttl = steeringJson.TTL;\n    this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n    this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // Pathway clones to be created/updated in HLS.\n    // See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n\n    this.steeringManifest.pathwayClones = steeringJson['PATHWAY-CLONES'];\n    this.nextPathwayClones = this.steeringManifest.pathwayClones; // 1. apply first pathway from the array.\n    // 2. if first pathway doesn't exist in manifest, try next pathway.\n    //    a. if all pathways are exhausted, ignore the steering manifest priority.\n    // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n    //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n    //       the excluded pathway will be ignored.\n    //       See excludePathway usage in excludePlaylist().\n    // If there are no available pathways, we need to stop content steering.\n\n    if (!this.availablePathways_.size) {\n      this.logger_('There are no available pathways for content steering. Ending content steering.');\n      this.trigger('error');\n      this.dispose();\n    }\n    const chooseNextPathway = pathwaysByPriority => {\n      for (const path of pathwaysByPriority) {\n        if (this.availablePathways_.has(path)) {\n          return path;\n        }\n      } // If no pathway matches, ignore the manifest and choose the first available.\n\n      return [...this.availablePathways_][0];\n    };\n    const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n    if (this.currentPathway !== nextPathway) {\n      this.currentPathway = nextPathway;\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Returns the pathway to use for steering decisions\n   *\n   * @return {string} returns the current pathway or the default\n   */\n\n  getPathway() {\n    return this.currentPathway || this.defaultPathway;\n  }\n  /**\n   * Chooses the manifest request URI based on proxy URIs and server URLs.\n   * Also accounts for exclusion on certain manifest URIs.\n   *\n   * @param {string} reloadUri the base uri before parameters\n   *\n   * @return {string} the final URI for the request to the manifest server.\n   */\n\n  getRequestURI(reloadUri) {\n    if (!reloadUri) {\n      return null;\n    }\n    const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n    if (this.proxyServerUrl_) {\n      const proxyURI = this.setProxyServerUrl_(reloadUri);\n      if (!isExcluded(proxyURI)) {\n        return proxyURI;\n      }\n    }\n    const steeringURI = this.setSteeringParams_(reloadUri);\n    if (!isExcluded(steeringURI)) {\n      return steeringURI;\n    } // Return nothing if all valid manifest URIs are excluded.\n\n    return null;\n  }\n  /**\n   * Start the timeout for re-requesting the steering manifest at the TTL interval.\n   *\n   * @param {number} ttl time in seconds of the timeout. Defaults to the\n   *        ttl interval in the steering manifest\n   */\n\n  startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n    // 300 (5 minutes) is the default value.\n    const ttlMS = ttl * 1000;\n    this.ttlTimeout_ = window$1.setTimeout(() => {\n      this.requestSteeringManifest();\n    }, ttlMS);\n  }\n  /**\n   * Clear the TTL timeout if necessary.\n   */\n\n  clearTTLTimeout_() {\n    window$1.clearTimeout(this.ttlTimeout_);\n    this.ttlTimeout_ = null;\n  }\n  /**\n   * aborts any current steering xhr and sets the current request object to null\n   */\n\n  abort() {\n    if (this.request_) {\n      this.request_.abort();\n    }\n    this.request_ = null;\n  }\n  /**\n   * aborts steering requests clears the ttl timeout and resets all properties.\n   */\n\n  dispose() {\n    this.off('content-steering');\n    this.off('error');\n    this.abort();\n    this.clearTTLTimeout_();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n  }\n  /**\n   * adds a pathway to the available pathways set\n   *\n   * @param {string} pathway the pathway string to add\n   */\n\n  addAvailablePathway(pathway) {\n    if (pathway) {\n      this.availablePathways_.add(pathway);\n    }\n  }\n  /**\n   * Clears all pathways from the available pathways set\n   */\n\n  clearAvailablePathways() {\n    this.availablePathways_.clear();\n  }\n  /**\n   * Removes a pathway from the available pathways set.\n   */\n\n  excludePathway(pathway) {\n    return this.availablePathways_.delete(pathway);\n  }\n  /**\n   * Checks the refreshed DASH manifest content steering tag for changes.\n   *\n   * @param {string} baseURL new steering tag on DASH manifest refresh\n   * @param {Object} newTag the new tag to check for changes\n   * @return a true or false whether the new tag has different values\n   */\n\n  didDASHTagChange(baseURL, newTag) {\n    return !newTag && this.steeringManifest.reloadUri || newTag && (resolveUrl(baseURL, newTag.serverURL) !== this.steeringManifest.reloadUri || newTag.defaultServiceLocation !== this.defaultPathway || newTag.queryBeforeStart !== this.queryBeforeStart || newTag.proxyServerURL !== this.proxyServerUrl_);\n  }\n  getAvailablePathways() {\n    return this.availablePathways_;\n  }\n}\nconst ABORT_EARLY_EXCLUSION_SECONDS = 10;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.player_ = options.player_;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    this.keyStatusMap_ = new Map();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings,\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n    }));\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    const getBandwidth = () => {\n      return this.mainSegmentLoader_.bandwidth;\n    };\n    this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist && (playlist.id || playlist.uri);\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      const metadata = {\n        renditionInfo: {\n          id: newId,\n          bandwidth: playlist.attributes.BANDWIDTH,\n          resolution: playlist.attributes.RESOLUTION,\n          codecs: playlist.attributes.CODECS\n        },\n        cause\n      };\n      this.trigger({\n        type: 'renditionselected',\n        metadata\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * A function that ensures we switch our playlists inside of `mediaTypes`\n   * to match the current `serviceLocation` provided by the contentSteering controller.\n   * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n   *\n   * This should only be called on a DASH playback scenario while using content steering.\n   * This is necessary due to differences in how media in HLS manifests are generally tied to\n   * a video playlist, where in DASH that is not always the case.\n   */\n\n  switchMediaForDASHContentSteering_() {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      const mediaType = this.mediaTypes_[type];\n      const activeGroup = mediaType ? mediaType.activeGroup() : null;\n      const pathway = this.contentSteeringController_.getPathway();\n      if (activeGroup && pathway) {\n        // activeGroup can be an array or a single group\n        const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n        const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n        if (dashMediaPlaylists.length) {\n          this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n        }\n      }\n    });\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // Add content steering listeners on first load and init.\n        this.attachContentSteeringListeners_();\n        this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      if (this.sourceType_ === 'dash') {\n        // we don't want to re-request the same hls playlist right after it was changed\n        this.mainPlaylistLoader_.load();\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      if (this.waitingForFastQualityPlaylistReceived_) {\n        this.runFastQualitySwitch_();\n      } else {\n        this.mainSegmentLoader_.load();\n      }\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n    const playlistLoaderEvents = ['manifestrequeststart', 'manifestrequestcomplete', 'manifestparsestart', 'manifestparsecomplete', 'playlistrequeststart', 'playlistrequestcomplete', 'playlistparsestart', 'playlistparsecomplete', 'renditiondisabled', 'renditionenabled'];\n    playlistLoaderEvents.forEach(eventName => {\n      this.mainPlaylistLoader_.on(eventName, metadata => {\n        // trigger directly on the player to ensure early events are fired.\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    if (this.waitingForFastQualityPlaylistReceived_) {\n      this.runFastQualitySwitch_();\n    }\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n    const segmentLoaderEvents = ['segmentselected', 'segmentloadstart', 'segmentloaded', 'segmentkeyloadstart', 'segmentkeyloadcomplete', 'segmentdecryptionstart', 'segmentdecryptioncomplete', 'segmenttransmuxingstart', 'segmenttransmuxingcomplete', 'segmenttransmuxingtrackinfoavailable', 'segmenttransmuxingtiminginfoavailable', 'segmentappendstart', 'appendsdone', 'bandwidthupdated', 'timelinechange', 'codecschange'];\n    segmentLoaderEvents.forEach(eventName => {\n      this.mainSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n      this.audioSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n      this.subtitleSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media && media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // we would like to avoid race condition when we call fastQuality,\n    // reset everything and start loading segments from prev segments instead of new because new playlist is not received yet\n\n    this.waitingForFastQualityPlaylistReceived_ = true;\n  }\n  runFastQualitySwitch_() {\n    this.waitingForFastQualityPlaylistReceived_ = false; // Delete all buffered data to allow an immediate quality switch.\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything(() => {\n      this.mainSegmentLoader_.load();\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream and/or has a start time\n\n    if (!media.endList || media.start) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the\n        // live or start point\n        return false;\n      }\n      const seekableEnd = seekable.end(0);\n      let startPoint = seekableEnd;\n      if (media.start) {\n        const offset = media.start.timeOffset;\n        if (offset < 0) {\n          startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n        } else {\n          startPoint = Math.min(seekableEnd, offset);\n        }\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(startPoint);\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // If we're content steering, try other pathways.\n      if (this.main().contentSteering) {\n        const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n        const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n        this.contentSteeringController_.excludePathway(pathway);\n        this.excludeThenChangePathway_();\n        setTimeout(() => {\n          this.contentSteeringController_.addAvailablePathway(pathway);\n        }, reIncludeDelay);\n        return;\n      } // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    const metadata = {\n      seekableRanges: this.seekable_\n    };\n    this.trigger({\n      type: 'seekablerangeschanged',\n      metadata\n    });\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    this.contentSteeringController_.dispose();\n    this.keyStatusMap_.clear();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  } // find from and to for codec switch event\n\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n  addDateRangesToTextTrack_(dateRanges) {\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n    addDateRangeMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      dateRanges\n    });\n  }\n  addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n    const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray,\n      timestampOffset,\n      videoDuration\n    });\n  }\n  /**\n   * Utility for getting the pathway or service location from an HLS or DASH playlist.\n   *\n   * @param {Object} playlist for getting pathway from.\n   * @return the pathway attribute of a playlist\n   */\n\n  pathwayAttribute_(playlist) {\n    return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n  }\n  /**\n   * Initialize available pathways and apply the tag properties.\n   */\n\n  initContentSteeringController_() {\n    const main = this.main();\n    if (!main.contentSteering) {\n      return;\n    }\n    for (const playlist of main.playlists) {\n      this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n    }\n    this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering); // request the steering manifest immediately if queryBeforeStart is set.\n\n    if (this.contentSteeringController_.queryBeforeStart) {\n      // When queryBeforeStart is true, initial request should omit steering parameters.\n      this.contentSteeringController_.requestSteeringManifest(true);\n      return;\n    } // otherwise start content steering after playback starts\n\n    this.tech_.one('canplay', () => {\n      this.contentSteeringController_.requestSteeringManifest();\n    });\n  }\n  /**\n   * Reset the content steering controller and re-init.\n   */\n\n  resetContentSteeringController_() {\n    this.contentSteeringController_.clearAvailablePathways();\n    this.contentSteeringController_.dispose();\n    this.initContentSteeringController_();\n  }\n  /**\n   * Attaches the listeners for content steering.\n   */\n\n  attachContentSteeringListeners_() {\n    this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this));\n    const contentSteeringEvents = ['contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n    contentSteeringEvents.forEach(eventName => {\n      this.contentSteeringController_.on(eventName, metadata => {\n        this.trigger(_extends({}, metadata));\n      });\n    });\n    if (this.sourceType_ === 'dash') {\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        const main = this.main(); // check if steering tag or pathways changed.\n\n        const didDashTagChange = this.contentSteeringController_.didDASHTagChange(main.uri, main.contentSteering);\n        const didPathwaysChange = () => {\n          const availablePathways = this.contentSteeringController_.getAvailablePathways();\n          const newPathways = [];\n          for (const playlist of main.playlists) {\n            const serviceLocation = playlist.attributes.serviceLocation;\n            if (serviceLocation) {\n              newPathways.push(serviceLocation);\n              if (!availablePathways.has(serviceLocation)) {\n                return true;\n              }\n            }\n          } // If we have no new serviceLocations and previously had availablePathways\n\n          if (!newPathways.length && availablePathways.size) {\n            return true;\n          }\n          return false;\n        };\n        if (didDashTagChange || didPathwaysChange()) {\n          this.resetContentSteeringController_();\n        }\n      });\n    }\n  }\n  /**\n   * Simple exclude and change playlist logic for content steering.\n   */\n\n  excludeThenChangePathway_() {\n    const currentPathway = this.contentSteeringController_.getPathway();\n    if (!currentPathway) {\n      return;\n    }\n    this.handlePathwayClones_();\n    const main = this.main();\n    const playlists = main.playlists;\n    const ids = new Set();\n    let didEnablePlaylists = false;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key];\n      const pathwayId = this.pathwayAttribute_(variant);\n      const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n      const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n      if (steeringExclusion && !differentPathwayId) {\n        delete variant.excludeUntil;\n        delete variant.lastExcludeReason_;\n        didEnablePlaylists = true;\n      }\n      const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n      const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n      if (!shouldExclude) {\n        return;\n      }\n      ids.add(variant.id);\n      variant.excludeUntil = Infinity;\n      variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n      this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n    });\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      Object.keys(this.mediaTypes_).forEach(key => {\n        const type = this.mediaTypes_[key];\n        if (type.activePlaylistLoader) {\n          const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n          if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n            didEnablePlaylists = true;\n          }\n        }\n      });\n    }\n    if (didEnablePlaylists) {\n      this.changeSegmentPathway_();\n    }\n  }\n  /**\n   * Add, update, or delete playlists and media groups for\n   * the pathway clones for HLS Content Steering.\n   *\n   * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n   *\n   * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and\n   * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or\n   * `STABLE-RENDITION-ID` values.\n   */\n\n  handlePathwayClones_() {\n    const main = this.main();\n    const playlists = main.playlists;\n    const currentPathwayClones = this.contentSteeringController_.currentPathwayClones;\n    const nextPathwayClones = this.contentSteeringController_.nextPathwayClones;\n    const hasClones = currentPathwayClones && currentPathwayClones.size || nextPathwayClones && nextPathwayClones.size;\n    if (!hasClones) {\n      return;\n    }\n    for (const [id, clone] of currentPathwayClones.entries()) {\n      const newClone = nextPathwayClones.get(id); // Delete the old pathway clone.\n\n      if (!newClone) {\n        this.mainPlaylistLoader_.updateOrDeleteClone(clone);\n        this.contentSteeringController_.excludePathway(id);\n      }\n    }\n    for (const [id, clone] of nextPathwayClones.entries()) {\n      const oldClone = currentPathwayClones.get(id); // Create a new pathway if it is a new pathway clone object.\n\n      if (!oldClone) {\n        const playlistsToClone = playlists.filter(p => {\n          return p.attributes['PATHWAY-ID'] === clone['BASE-ID'];\n        });\n        playlistsToClone.forEach(p => {\n          this.mainPlaylistLoader_.addClonePathway(clone, p);\n        });\n        this.contentSteeringController_.addAvailablePathway(id);\n        continue;\n      } // There have not been changes to the pathway clone object, so skip.\n\n      if (this.equalPathwayClones_(oldClone, clone)) {\n        continue;\n      } // Update a preexisting cloned pathway.\n      // True is set for the update flag.\n\n      this.mainPlaylistLoader_.updateOrDeleteClone(clone, true);\n      this.contentSteeringController_.addAvailablePathway(id);\n    } // Deep copy contents of next to current pathways.\n\n    this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...nextPathwayClones])));\n  }\n  /**\n   * Determines whether two pathway clone objects are equivalent.\n   *\n   * @param {Object} a The first pathway clone object.\n   * @param {Object} b The second pathway clone object.\n   * @return {boolean} True if the pathway clone objects are equal, false otherwise.\n   */\n\n  equalPathwayClones_(a, b) {\n    if (a['BASE-ID'] !== b['BASE-ID'] || a.ID !== b.ID || a['URI-REPLACEMENT'].HOST !== b['URI-REPLACEMENT'].HOST) {\n      return false;\n    }\n    const aParams = a['URI-REPLACEMENT'].PARAMS;\n    const bParams = b['URI-REPLACEMENT'].PARAMS; // We need to iterate through both lists of params because one could be\n    // missing a parameter that the other has.\n\n    for (const p in aParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    for (const p in bParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Changes the current playlists for audio, video and subtitles after a new pathway\n   * is chosen from content steering.\n   */\n\n  changeSegmentPathway_() {\n    const nextPlaylist = this.selectPlaylist();\n    this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      this.switchMediaForDASHContentSteering_();\n    }\n    this.switchMedia_(nextPlaylist, 'content-steering');\n  }\n  /**\n   * Iterates through playlists and check their keyId set and compare with the\n   * keyStatusMap, only enable playlists that have a usable key. If the playlist\n   * has no keyId leave it enabled by default.\n   */\n\n  excludeNonUsablePlaylistsByKeyId_() {\n    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) {\n      return;\n    }\n    let nonUsableKeyStatusCount = 0;\n    const NON_USABLE = 'non-usable';\n    this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n      const keyIdSet = this.mainPlaylistLoader_.getKeyIdSet(playlist); // If the playlist doesn't have keyIDs lets not exclude it.\n\n      if (!keyIdSet || !keyIdSet.size) {\n        return;\n      }\n      keyIdSet.forEach(key => {\n        const USABLE = 'usable';\n        const hasUsableKeyStatus = this.keyStatusMap_.has(key) && this.keyStatusMap_.get(key) === USABLE;\n        const nonUsableExclusion = playlist.lastExcludeReason_ === NON_USABLE && playlist.excludeUntil === Infinity;\n        if (!hasUsableKeyStatus) {\n          // Only exclude playlists that haven't already been excluded as non-usable.\n          if (playlist.excludeUntil !== Infinity && playlist.lastExcludeReason_ !== NON_USABLE) {\n            playlist.excludeUntil = Infinity;\n            playlist.lastExcludeReason_ = NON_USABLE;\n            this.logger_(`excluding playlist ${playlist.id} because the key ID ${key} doesn't exist in the keyStatusMap or is not ${USABLE}`);\n          } // count all nonUsableKeyStatus\n\n          nonUsableKeyStatusCount++;\n        } else if (hasUsableKeyStatus && nonUsableExclusion) {\n          delete playlist.excludeUntil;\n          delete playlist.lastExcludeReason_;\n          this.logger_(`enabling playlist ${playlist.id} because key ID ${key} is ${USABLE}`);\n        }\n      });\n    }); // If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.\n\n    if (nonUsableKeyStatusCount >= this.mainPlaylistLoader_.main.playlists.length) {\n      this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n        const isNonHD = playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height < 720;\n        const excludedForNonUsableKey = playlist.excludeUntil === Infinity && playlist.lastExcludeReason_ === NON_USABLE;\n        if (isNonHD && excludedForNonUsableKey) {\n          // Only delete the excludeUntil so we don't try and re-exclude these playlists.\n          delete playlist.excludeUntil;\n          videojs.log.warn(`enabling non-HD playlist ${playlist.id} because all playlists were excluded due to ${NON_USABLE} key IDs`);\n        }\n      });\n    }\n  }\n  /**\n   * Adds a keystatus to the keystatus map, tries to convert to string if necessary.\n   *\n   * @param {any} keyId the keyId to add a status for\n   * @param {string} status the status of the keyId\n   */\n\n  addKeyStatus_(keyId, status) {\n    const isString = typeof keyId === 'string';\n    const keyIdHexString = isString ? keyId : bufferToHexString(keyId);\n    const formattedKeyIdString = keyIdHexString.slice(0, 32).toLowerCase();\n    this.logger_(`KeyStatus '${status}' with key ID ${formattedKeyIdString} added to the keyStatusMap`);\n    this.keyStatusMap_.set(formattedKeyIdString, status);\n  }\n  /**\n   * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.\n   *\n   * @param {any} keyId the keyId from the keystatuschange event\n   * @param {string} status the key status string\n   */\n\n  updatePlaylistByKeyStatus(keyId, status) {\n    this.addKeyStatus_(keyId, status);\n    if (!this.waitingForFastQualityPlaylistReceived_) {\n      this.excludeNonUsableThenChangePlaylist_();\n    } // Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.\n\n    this.mainPlaylistLoader_.off('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n    this.mainPlaylistLoader_.on('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n  }\n  excludeNonUsableThenChangePlaylist_() {\n    this.excludeNonUsablePlaylistsByKeyId_();\n    this.fastQualityChange_();\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  const metadata = {\n    renditionInfo: {\n      id: playlistID,\n      bandwidth: playlist.attributes.BANDWIDTH,\n      resolution: playlist.attributes.RESOLUTION,\n      codecs: playlist.attributes.CODECS\n    },\n    cause: 'fast-quality'\n  };\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn(playlist);\n    if (enable) {\n      loader.trigger({\n        type: 'renditionenabled',\n        metadata\n      });\n    } else {\n      loader.trigger({\n        type: 'renditiondisabled',\n        metadata\n      });\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher extends videojs.EventTarget {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    super();\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.playedRanges_ = [];\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      const metadata = {\n        bufferedRanges: buffered\n      };\n      pc.trigger({\n        type: 'bufferedrangeschanged',\n        metadata\n      });\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.playedRanges_.push(createTimeRanges([this.lastRecordedTime, currentTime]));\n      const metadata = {\n        playedRanges: this.playedRanges_\n      };\n      this.playlistController_.trigger({\n        type: 'playedrangeschanged',\n        metadata\n      });\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    const isLLHLS = typeof playlist.partTargetDuration === 'number';\n    if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    const metadata = {\n      gapInfo: {\n        from: currentTime,\n        to: nextRange.start(0)\n      }\n    };\n    this.playlistController_.trigger({\n      type: 'gapjumped',\n      metadata\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.13.2\";\nvar version$3 = \"7.0.3\";\nvar version$2 = \"1.3.0\";\nvar version$1 = \"7.1.0\";\nvar version = \"4.0.1\";\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but\n  // the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Adds a request hook to an xhr object\n *\n * @param {Object} xhr object to add the onRequest hook to\n * @param {function} callback hook function for an xhr request\n */\n\nconst addOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    xhr._requestCallbackSet = new Set();\n  }\n  xhr._requestCallbackSet.add(callback);\n};\n/**\n * Adds a response hook to an xhr object\n *\n * @param {Object} xhr object to add the onResponse hook to\n * @param {function} callback hook function for an xhr response\n */\n\nconst addOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    xhr._responseCallbackSet = new Set();\n  }\n  xhr._responseCallbackSet.add(callback);\n};\n/**\n * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n *\n * @param {Object} xhr object to remove the onRequest hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    return;\n  }\n  xhr._requestCallbackSet.delete(callback);\n  if (!xhr._requestCallbackSet.size) {\n    delete xhr._requestCallbackSet;\n  }\n};\n/**\n * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n *\n * @param {Object} xhr object to remove the onResponse hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    return;\n  }\n  xhr._responseCallbackSet.delete(callback);\n  if (!xhr._responseCallbackSet.size) {\n    delete xhr._responseCallbackSet;\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document$1 || !document$1.createElement) {\n    return false;\n  }\n  const video = document$1.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document$1 || !document$1.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document$1.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n/**\n * A global function for setting an onRequest hook\n *\n * @param {function} callback for request modifiction\n */\n\nVhs.xhr.onRequest = function (callback) {\n  addOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * A global function for setting an onResponse hook\n *\n * @param {callback} callback for response data retrieval\n */\n\nVhs.xhr.onResponse = function (callback) {\n  addOnResponseHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onRequest callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offRequest = function (callback) {\n  removeOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onResponse callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offResponse = function (callback) {\n  removeOnResponseHook(Vhs.xhr, callback);\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document$1, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document$1.fullscreenElement || document$1.webkitFullscreenElement || document$1.mozFullScreenElement || document$1.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  /**\n   * Set VHS options based on options from configuration, as well as partial\n   * options to be passed at a later time.\n   *\n   * @param {Object} options A partial chunk of config options\n   */\n\n  setOptions_(options = {}) {\n    this.options_ = merge(this.options_, options); // defaults\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'customPixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    const customPixelRatio = this.options_.customPixelRatio; // Ensure the custom pixel ratio is a number greater than or equal to 0\n\n    if (typeof customPixelRatio === 'number' && customPixelRatio >= 0) {\n      this.customPixelRatio = customPixelRatio;\n    }\n  } // alias for public method to set options\n\n  setOptions(options = {}) {\n    this.setOptions_(options);\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    }; // pass player to allow for player level eventing on construction.\n\n    this.options_.player_ = this.player_;\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.attachStreamingEventListeners_();\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      this.playlistController_.updatePlaylistByKeyStatus(e.keyId, e.status);\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n    if (!didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n  /**\n   * Adds the onRequest, onResponse, offRequest and offResponse functions\n   * to the VhsHandler xhr Object.\n   */\n\n  setupXhrHooks_() {\n    /**\n     * A player function for setting an onRequest hook\n     *\n     * @param {function} callback for request modifiction\n     */\n    this.xhr.onRequest = callback => {\n      addOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * A player function for setting an onResponse hook\n     *\n     * @param {callback} callback for response data retrieval\n     */\n\n    this.xhr.onResponse = callback => {\n      addOnResponseHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onRequest callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offRequest = callback => {\n      removeOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onResponse callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offResponse = callback => {\n      removeOnResponseHook(this.xhr, callback);\n    }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n    // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n    this.player_.trigger('xhr-hooks-ready');\n  }\n  attachStreamingEventListeners_() {\n    const playlistControllerEvents = ['seekablerangeschanged', 'bufferedrangeschanged', 'contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n    const playbackWatcher = ['gapjumped', 'playedrangeschanged']; // re-emit streaming events and payloads on the player.\n\n    playlistControllerEvents.forEach(eventName => {\n      this.playlistController_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n    playbackWatcher.forEach(eventName => {\n      this.playbackWatcher_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.setupXhrHooks_();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","import videojs from 'video.js';\n\nvar version = \"1.0.3\";\n\n/**\n * @function BufferTracking\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n *\n *           Can contain the following optional configuration, passed during plugin initialization:\n *           bufferingConfig.includeScrub => Boolean indicating whether buffering metrics\n *           should be considered for computation while user is scrubbing on the video player.\n *\n *\n * Tracks when the video player is marked as buffering and waits until the player\n * has made some progress.\n *\n * Example Usage:\n * player.on('tracking:buffered', (e, data) => console.log(data))\n *\n * Data Attributes:\n * => currentTime:    current second of video playback\n * => readyState:     video#readyState value\n * => secondsToLoad:  Total amount of time in seconds buffering took\n * => bufferCount:    Total buffer events for this source\n */\n\nvar BufferTracking = function BufferTracking(config) {\n  var _this = this;\n\n  var timer = null;\n  var scrubbing = false;\n  var bufferPosition = false;\n  var bufferStart = false;\n  var bufferEnd = false;\n  var bufferCount = 0;\n  var readyState = false;\n\n  var reset = function reset() {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    scrubbing = false;\n    bufferPosition = false;\n    bufferStart = false;\n    bufferEnd = false;\n    bufferCount = 0;\n    readyState = false;\n  };\n\n  var onPause = function onPause() {\n    bufferStart = false;\n\n    if (_this.scrubbing() && !(config.bufferingConfig && config.bufferingConfig.includeScrub)) {\n      scrubbing = true;\n      timer = setTimeout(function () {\n        scrubbing = false;\n      }, 200);\n    }\n  };\n\n  var onPlayerWaiting = function onPlayerWaiting() {\n    if (bufferStart === false && scrubbing === false && _this.currentTime() > 0) {\n      bufferStart = new Date();\n      bufferPosition = +_this.currentTime().toFixed(0);\n      readyState = +_this.readyState();\n    }\n  };\n\n  var onTimeupdate = function onTimeupdate() {\n    var curTime = +_this.currentTime().toFixed(0);\n\n    if (bufferStart && curTime !== bufferPosition) {\n      bufferEnd = new Date();\n\n      var secondsToLoad = (bufferEnd - bufferStart) / 1000;\n\n      bufferStart = false;\n      bufferPosition = false;\n      bufferCount++;\n\n      _this.trigger('tracking:buffered', {\n        currentTime: +curTime,\n        readyState: +readyState,\n        secondsToLoad: +secondsToLoad.toFixed(3),\n        bufferCount: +bufferCount\n      });\n    }\n  };\n\n  this.on('dispose', reset);\n  this.on('loadstart', reset);\n  this.on('ended', reset);\n  this.on('pause', onPause);\n  this.on('waiting', onPlayerWaiting);\n  this.on('timeupdate', onTimeupdate);\n};\n\n/**\n * Tracks when users pause the video.\n *\n * Example Usage:\n * player.on('tracking:pause', (e, data) => console.log(data))\n *\n * Data Attributes:\n * => pauseCount:       Total number of Pause events triggered\n *\n * @function PauseTracking\n * @param    {Object} [config={}]\n *           An object of config left to the plugin author to define.\n */\n\nvar PauseTracking = function PauseTracking(config) {\n  var player = this;\n  var pauseCount = 0;\n  var timer = null;\n  var locked = false;\n\n  var reset = function reset(e) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    pauseCount = 0;\n    locked = false;\n  };\n\n  var isSeeking = function isSeeking() {\n    return typeof player.seeking === 'function' && player.seeking() || typeof player.scrubbing === 'function' && player.scrubbing();\n  };\n\n  player.on('dispose', reset);\n  player.on('loadstart', reset);\n  player.on('ended', reset);\n  player.on('pause', function () {\n    if (isSeeking() || locked) {\n      return;\n    }\n\n    timer = setTimeout(function () {\n      pauseCount++;\n      player.trigger('tracking:pause', { pauseCount: pauseCount });\n    }, 300);\n  });\n};\n\n/**\n * Track Overall Percentile (1st, 2nd, 3rd, and 4th) of Completion\n * This event triggers each quarter of a video.\n *\n * Example Usage:\n * player.on('tracking:first-quarter', (e, data) => console.log(data))\n * player.on('tracking:second-quarter', (e, data) => console.log(data))\n * player.on('tracking:third-quarter', (e, data) => console.log(data))\n * player.on('tracking:fourth-quarter', (e, data) => console.log(data))\n *\n * Data Attributes:\n * => pauseCount:       Total number of Pause events triggered\n * => seekCount:        Total number of Seek events triggered\n * => currentTime:      Current second video is on\n * => duration:         Total duration of video\n *\n * @function PercentileTracking\n * @param    {Object} [config={}]\n *           An object of config left to the plugin author to define.\n */\n\nvar PercentileTracking = function PercentileTracking(config) {\n  var player = this;\n  var first = false;\n  var second = false;\n  var third = false;\n  var duration = null;\n  var pauseCount = 0;\n  var seekCount = 0;\n\n  var reset = function reset(e) {\n    first = false;\n    second = false;\n    third = false;\n    duration = null;\n    pauseCount = 0;\n    seekCount = 0;\n  };\n\n  var incPause = function incPause() {\n    return pauseCount++;\n  };\n  var incSeek = function incSeek() {\n    return seekCount++;\n  };\n\n  var getDuration = function getDuration() {\n    duration = +player.duration().toFixed(0);\n    if (duration > 0) {\n      var quarter = (duration / 4).toFixed(0);\n\n      first = +quarter;\n      second = +quarter * 2;\n      third = +quarter * 3;\n    }\n  };\n\n  player.on('dispose', reset);\n  player.on('loadstart', reset);\n  player.on('tracking:pause', incPause);\n  player.on('tracking:seek', incSeek);\n  player.on('timeupdate', function () {\n    if (duration === null) {\n      getDuration();\n    }\n\n    var curTime = +player.currentTime().toFixed(0);\n    var data = {\n      seekCount: seekCount,\n      pauseCount: pauseCount,\n      currentTime: curTime,\n      duration: duration\n    };\n\n    switch (curTime) {\n      case first:\n        first = false;\n        player.trigger('tracking:first-quarter', data);\n        break;\n      case second:\n        second = false;\n        player.trigger('tracking:second-quarter', data);\n        break;\n      case third:\n        third = false;\n        player.trigger('tracking:third-quarter', data);\n        break;\n    }\n  });\n  player.on('ended', function () {\n    var data = {\n      seekCount: seekCount,\n      pauseCount: pauseCount,\n      currentTime: duration,\n      duration: duration\n    };\n\n    player.trigger('tracking:fourth-quarter', data);\n  });\n\n  player.on('durationchange', getDuration);\n};\n\n/**\n * Track Overall Performance\n * This event triggers when the player has changed sources, has ended, or\n * has been destroyed.\n *\n * Example Usage:\n * player.on('tracking:performance', (e, data) => console.log(data))\n *\n * Data Attributes:\n * => pauseCount:       Total number of Pause events triggered\n * => seekCount:        Total number of Seek events triggered\n * => bufferCount:      Total number of Buffer events triggered\n * => totalDuration:    Total duration provided by the file\n * => watchedDuration:  Total number of seconds watched (not seeked past)\n * => bufferDuration:   Total seconds that buffering has occured\n * => initialLoadTime:  Seconds it took for the initial frame to appear\n *\n * @function PerformanceTracking\n * @param    {Object} [config={}]\n *           An object of config left to the plugin author to define.\n */\nvar PerformanceTracking = function PerformanceTracking(config) {\n  if (typeof config === 'undefined' || typeof config.performance !== 'function') {\n    return;\n  }\n\n  var player = this;\n  var seekCount = 0;\n  var pauseCount = 0;\n  var bufferCount = 0;\n  var totalDuration = 0;\n  var watchedDuration = 0;\n  var bufferDuration = 0;\n  var initialLoadTime = 0;\n  var timestamps = [];\n\n  var reset = function reset() {\n    seekCount = 0;\n    pauseCount = 0;\n    bufferCount = 0;\n    totalDuration = 0;\n    watchedDuration = 0;\n    bufferDuration = 0;\n    initialLoadTime = 0;\n    timestamps = [];\n  };\n\n  var trigger = function trigger() {\n    var data = {\n      pauseCount: pauseCount,\n      seekCount: seekCount,\n      bufferCount: bufferCount,\n      totalDuration: totalDuration,\n      watchedDuration: watchedDuration,\n      bufferDuration: bufferDuration,\n      initialLoadTime: initialLoadTime\n    };\n\n    config.performance.call(player, data);\n  };\n\n  var triggerAndReset = function triggerAndReset() {\n    trigger();\n    reset();\n  };\n\n  if (typeof window.addEventListener === 'function') {\n    window.addEventListener('beforeunload', triggerAndReset);\n    player.on('dispose', function () {\n      window.removeEventListener('beforeunload', triggerAndReset);\n    });\n  }\n\n  player.on('loadstart', function () {\n    if (totalDuration > 0) {\n      trigger();\n    }\n\n    reset();\n  });\n\n  player.on('ended', triggerAndReset);\n  player.on('dispose', triggerAndReset);\n  player.on('timeupdate', function () {\n    var curTime = +player.currentTime().toFixed(0);\n\n    if (timestamps.indexOf(curTime) < 0) {\n      timestamps.push(curTime);\n    }\n    watchedDuration = timestamps.length;\n  });\n  player.on('loadeddata', function (e, data) {\n    totalDuration = +player.duration().toFixed(0);\n  });\n  player.on('tracking:seek', function (e, data) {\n    seekCount = data.seekCount;\n  });\n  player.on('tracking:pause', function (e, data) {\n    pauseCount = data.pauseCount;\n  });\n  player.on('tracking:buffered', function (e, data) {\n    bufferCount = data.bufferCount;\n\n    bufferDuration = +(bufferDuration + data.secondsToLoad).toFixed(3);\n  });\n  player.on('tracking:firstplay', function (e, data) {\n    initialLoadTime = data.secondsToLoad;\n  });\n};\n\n/**\n * Track Initial Play Event\n * This event is triggered when the video has been played for the first time.\n * If you are looking to track play events, simply listen on the player for a normal\n * \"play\" or \"playing\" event.\n *\n * Example Usage:\n * player.on('tracking:firstplay', (e, data) => console.log(data))\n *\n * Data Attributes:\n * => secondsToLoad: Total number of seconds between the player initializing\n *                   a play request and when the first frame begins.\n *\n * @function PlayTracking\n * @param    {Object} [config={}]\n *           An object of config left to the plugin author to define.\n */\n\nvar PlayTracking = function PlayTracking(config) {\n  var _this = this;\n\n  var hasBeenTriggered = false;\n  var loadstart = 0;\n  var loadend = 0;\n  var secondsToLoad = 0;\n\n  var reset = function reset() {\n    hasBeenTriggered = false;\n    loadstart = 0;\n    loadend = 0;\n    secondsToLoad = 0;\n  };\n\n  var onLoadStart = function onLoadStart() {\n    reset();\n    loadstart = new Date();\n  };\n\n  var onLoadedData = function onLoadedData() {\n    loadend = new Date();\n    secondsToLoad = (loadend - loadstart) / 1000;\n  };\n\n  var onPlaying = function onPlaying() {\n    if (!hasBeenTriggered) {\n      hasBeenTriggered = true;\n      _this.trigger('tracking:firstplay', {\n        secondsToLoad: +secondsToLoad.toFixed(3)\n      });\n    }\n  };\n\n  this.on('ended', reset);\n  this.on('dispose', reset);\n  this.on('loadstart', onLoadStart);\n  this.on('loadeddata', onLoadedData);\n  this.on('playing', onPlaying);\n};\n\n/**\n * Track Seeking Events\n * During playback, we are tracking how many times a person seeks, and\n * the position a user has seeked to.\n *\n * Example Usage:\n * player.on('tracking:seek', (e, data) => console.log(data))\n *\n * Data Attributes:\n * => seekCount: total number of seeks that has occuring during this file\n * => seekTo: Position, in seconds, that has been seeked to.\n *\n * @function SeekTracking\n * @param    {Object} [config={}]\n *           An object of config left to the plugin author to define.\n */\nvar SeekTracking = function SeekTracking(config) {\n  var player = this;\n  var seekCount = 0;\n\n  var reset = function reset() {\n    seekCount = 0;\n  };\n\n  player.on('dispose', reset);\n  player.on('loadstart', reset);\n  player.on('ended', reset);\n  player.on('seeking', function () {\n    var curTime = +player.currentTime().toFixed(0);\n\n    seekCount++;\n    player.trigger('tracking:seek', {\n      seekCount: +seekCount,\n      seekTo: curTime\n    });\n  });\n};\n\n// Cross-compatibility for Video.js 5 and 6.\nvar registerPlugin = videojs.registerPlugin || videojs.plugin;\nvar getPlugin = videojs.getPlugin || videojs.plugin;\n\n/**\n * Event Tracking for VideoJS\n *\n * @function eventTracking\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nvar eventTracking = function eventTracking(options) {\n  PauseTracking.apply(this, arguments);\n  BufferTracking.apply(this, arguments);\n  PercentileTracking.apply(this, arguments);\n  PlayTracking.apply(this, arguments);\n  SeekTracking.apply(this, arguments);\n  PerformanceTracking.apply(this, arguments);\n};\n\n// Register the plugin with video.js, avoid double registration\nif (typeof getPlugin('eventTracking') === 'undefined') {\n  registerPlugin('eventTracking', eventTracking);\n}\n\n// Include the version number.\neventTracking.VERSION = version;\n\nexport default eventTracking;\n","import { triggerCustomEvent, setFocusOnTarget } from '@area17/a17-helpers';\nimport videojs from 'video.js';\nimport eventTracking from 'videojs-event-tracking';\n\nconst videojsActivate = function() {\n  // WEB-2216: Not sure why, but this code doesn't work in our fork\n  if (typeof videojs.getPlugin('eventTracking') === 'undefined') {\n    videojs.registerPlugin('eventTracking', eventTracking);\n  }\n\n  // @see https://stackoverflow.com/questions/39121463/videojs-5-plugin-add-button\n  function _registerDownloadButton() {\n    var vjsButtonComponent = videojs.getComponent('Button');\n\n    videojs.registerComponent('DownloadButton', videojs.extend(vjsButtonComponent, {\n      constructor: function () {\n        vjsButtonComponent.apply(this, arguments);\n        this.controlText('Download audio');\n      },\n      handleClick: function () {\n        window.open(this.player_.cache_.src);\n      },\n      buildCSSClass: function () {\n        return 'vjs-control vjs-custom-button vjs-download-button';\n      },\n    }));\n  }\n\n  function _findAncestor(el, cls) {\n    while ((el = el.parentElement) && !el.classList.contains(cls));\n    return el;\n  }\n\n  function _getHeightAndSet(target) {\n    let targetHeight = target.firstElementChild.offsetHeight;\n    target.style.height = targetHeight + 'px';\n  }\n\n  function _unsetAfterAnimation() {\n    this.removeAttribute('style');\n    this.removeEventListener('transitionend', _unsetAfterAnimation);\n    triggerCustomEvent(document, 'page:updated');\n  }\n\n  function _registerTranscriptButton() {\n    var vjsButtonComponent = videojs.getComponent('Button');\n\n    videojs.registerComponent('TranscriptButton', videojs.extend(vjsButtonComponent, {\n      constructor: function () {\n        vjsButtonComponent.apply(this, arguments);\n        this.controlText('Toggle transcript');\n      },\n      handleClick: function () {\n        let listingElement = _findAncestor(this.player_.el_,'m-listing--sound');\n        let buttonElement = listingElement.querySelector('.vjs-transcript-button');\n        let target = listingElement.querySelector('.m-listing--sound__transcript');\n\n        if (target.getAttribute('aria-hidden') === 'true') {\n          // Open\n          target.style.height = 0;\n          target.style.overflow = 'hidden';\n          target.setAttribute('aria-hidden', 'false');\n          setTimeout(function(){ setTimeout(function(){ setFocusOnTarget(target); }, 0) }, 0)\n          _getHeightAndSet(target);\n          buttonElement.classList.add('vjs-transcript-button--opened');\n        } else {\n          // Close\n          _getHeightAndSet(target);\n          target.setAttribute('aria-hidden', 'true');\n          let thrash = target.offsetHeight;\n          target.style.height = 0;\n          target.style.overflow = 'hidden';\n          buttonElement.classList.remove('vjs-transcript-button--opened');\n        }\n\n        target.addEventListener('transitionend', _unsetAfterAnimation, false);\n      },\n      buildCSSClass: function () {\n        return 'vjs-control vjs-custom-button vjs-transcript-button';\n      },\n    }));\n  }\n\n  function _activateAudioPlayers() {\n    var audios = document.getElementsByClassName('video-js')\n\n    Array.from(audios).forEach(function(audio) {\n      if (audio.hasAttribute('data-has-started')) {\n        return;\n      }\n\n      audio.setAttribute('data-has-started', true);\n\n      var children = [\n        'PlayToggle',\n        'CurrentTimeDisplay',\n        'TimeDivider',\n        'DurationDisplay',\n        'ProgressControl',\n        'MuteToggle',\n        'VolumeControl',\n      ];\n\n      if (audio.hasAttribute('data-has-transcript')) {\n        children.push('TranscriptButton')\n      }\n\n      if (audio.hasAttribute('data-is-downloadable')) {\n        children.push('DownloadButton')\n      }\n\n      children.push('LiveDisplay')\n\n      var player = videojs( audio, {\n        children: [\n          'MediaLoader',\n          {\n            name: 'controlBar',\n            children: children,\n          },\n          'ErrorDisplay',\n          'ResizeManager'\n        ],\n        plugins: {\n          eventTracking: true,\n        }\n      });\n\n      // e.g. audio-play vs. audio-tour-play\n      var prefix = 'audio';\n\n      if (audio.hasAttribute('data-gtm-prefix')) {\n        prefix = audio.getAttribute('data-gtm-prefix')\n      }\n\n      var title = 'Untitled';\n\n      if (audio.hasAttribute('data-gtm-title')) {\n        title = audio.getAttribute('data-gtm-title')\n      }\n\n      function _log(suffix) {\n        triggerCustomEvent(document, 'gtm:push', {\n          'event': prefix + '-' + suffix,\n          'eventCategory': 'audio-engagement',\n          'action': title,\n        });\n      }\n\n      player.on('tracking:firstplay', (e, data) => _log('play'));\n      player.on('tracking:pause', (e, data) => _log('pause'));\n      player.on('tracking:first-quarter', (e, data) => _log('25'));\n      player.on('tracking:second-quarter', (e, data) => _log('50'));\n      player.on('tracking:third-quarter', (e, data) => _log('75'));\n      player.on('tracking:fourth-quarter', (e, data) => _log('100'));\n    });\n  }\n\n  document.addEventListener('page:updated', _activateAudioPlayers, false);\n\n  _registerDownloadButton();\n  _registerTranscriptButton();\n  _activateAudioPlayers();\n}\n\nexport default videojsActivate;\n","import { videojsActivate } from './functions/videojs';\n\ndocument.addEventListener('DOMContentLoaded', function(){\n\n  // Activates all video-js audio players\n  videojsActivate();\n\n});\n"],"names":["window","module","exports","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","headers","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","decode","e","String","fromCharCode","apply","Uint8Array","_extends","isFunction","InterceptorsStorage","RetryManager","createXHR","httpHandler","requestInterceptorsStorage","responseInterceptorsStorage","retryManager","parseHeaders","result","forEach","row","index","indexOf","key","slice","Array","isArray","push","initParams","uri","options","params","_createXHR","Error","requestType","getIsEnabled","requestInterceptorPayload","url","body","metadata","retry","timeout","updatedPayload","execute","called","getBody","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","retryTimeout","aborted","shouldRetry","responseInterceptorPayload","failureResponse","responseUrl","responseURL","_updatedPayload","setTimeout","moveToNextAttempt","getCurrentFuzzedDelay","loadFunc","status","useXDR","method","rawRequest","getAllResponseHeaders","_updatedPayload2","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","abort","code","setRequestHeader","hasOwnProperty","obj","i","isEmpty","beforeSend","send","array","iterator","length","forEachArray","toUpperCase","_arrayLikeToArray","arr","len","arr2","this","typeToInterceptorsMap_","Map","enabled_","_proto","prototype","enable","disable","reset","addInterceptor","interceptor","has","set","Set","interceptorsSet","get","add","removeInterceptor","delete","clearInterceptorsByType","clear","size","getForType","payload","_step","_iterator","o","allowArrayLike","it","Symbol","call","next","bind","minLen","n","Object","toString","constructor","name","from","test","_unsupportedIterableToArray","done","TypeError","_createForOfIteratorHelperLoose","maxAttempts_","delayFactor_","fuzzFactor_","initialDelay_","getMaxAttempts","setMaxAttempts","maxAttempts","getDelayFactor","setDelayFactor","delayFactor","getFuzzFactor","setFuzzFactor","fuzzFactor","getInitialDelay","setInitialDelay","initialDelay","createRetry","_temp","_ref","Retry","currentDelay_","currentAttempt_","_proto2","delayDelta","getCurrentDelay","getCurrentMinPossibleDelay","getCurrentMaxPossibleDelay","lowValue","highValue","Math","random","freeze","object","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","assign","target","source","find","list","predicate","ac","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","errorImpl","isCallback","Function","build","fn","msg","buildErrorHandler","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","arguments","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","orderedSetReducer","element","toOrderedSet","filter","splitOnASCIIWhitespace","keys","copy","src","dest","p","Class","Super","pt","t","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidityInDocument","parent","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidity1to5","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","v","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","RegExp","tagNamePattern","copyLocator","f","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","charAt","setTagName","closed","match","localNSMap","a","nsp","nsPrefix","_copy","parseHtmlSpecialContent","elStartEnd","elEndStart","fixSelfClosed","closeMap","pos","lastIndexOf","parseDCC","end","matchs","exec","lastMatch","endDTD","parseInstruction","ElementAttributes","defaultNSMapCopy","k","surrogate1","surrogate2","fixedFromCharCode","parseInt","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","tagStart","config","pop","endMatch","locator2","max","getLocalName","SANS_SERIF_FONTS","SERIF_FONTS","defaultOptions","tolerance","delay","glyphs","success","weight","style","html","FontFaceOnloadInstance","fontFamily","appended","serif","sansSerif","getMeasurements","width","offsetWidth","height","offsetHeight","load","dimensions","startTime","Date","that","ref","reference","getStyle","family","concat","sansSerifHtml","serifHtml","hasNewDimensions","dims","abs","document","innerHTML","checkDimensions","getTime","requestAnimationFrame","cleanFamilyName","cleanWeight","normal","bold","checkFontFaces","_t","fonts","font","then","init","j","instance","doccy","topLevel","g","minDoc","win","self","string","alert","confirm","prompt","getUint64","view","DataView","buffer","byteOffset","byteLength","flags","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","MAX_UINT32","pow","uint8","dv","getBigUint64","Number","MAX_SAFE_INTEGER","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","h","Settings","values","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","endTime","settings","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","left","center","middle","right","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","parseFloat","TEXTAREA_ELEMENT","TAG_NAME","b","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","annotation","rootDiv","tagStack","textContent","classes","cl","bgColor","colorName","propName","propValue","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","display","writingMode","unicodeBidi","applyStyles","direction","textAlign","whiteSpace","textPos","formatStyle","move","box","BoxPosition","lh","offsetTop","rects","getClientRects","getBoundingClientRect","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","track","textTrackList","mediaElement","trackList","mode","computeLinePos","axis","step","round","maxPosition","initialAxis","ceil","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","val","unit","toMove","overlaps","b2","boxes","container","min","getSimpleBoxPosition","StringDecoder","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","cues","overlay","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","fontSize","Parser","decoder","state","reportOrThrowError","onparsingerror","collectNextLine","stream","alreadyCollectedLine","ontimestampmap","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","hasSubstring","oncue","flush","onflush","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","enumerable","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","r","__esModule","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","d","definition","globalThis","event","createEvent","initEvent","eventName","dispatchEvent","baseUrl","relativeUrl","href","nativeURL","protocolLess","removeLocation","newUrl","URL","DEFAULT_LOCATION","protocol","Stream","listeners","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","decodeB64ToUint8Array","b64Text","decodedString","Buffer","LineStream","super","nextNewline","TAB","parseByterange","byterangeString","parseAttributes","ParseStream","customParsers","tagMappers","acc","mapper","mappedLine","newLine","tagType","duration","title","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","str","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","lastProgramDateTime","uris","currentMap","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","dateRanges","segments","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","reduceRight","programDateTime","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","dateRange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","attribute","dateRangeWithSameId","findIndex","dateRangeToFind","independentSegments","contentSteering","custom","identifier","missing","chunk","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","bytes","BigInt","BYTE_TABLE","Uint16Array","_ref$signed","signed","_ref$le","total","byte","exponent","stringToBytes","stringIsBytes","unescape","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","isObject","merge","objects","flatten","lists","x","y","urlTypeToSegment","indexRange","resolvedUri","ranges","startRange","endRange","parseEndNumber","endNumber","segmentRange","static","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","parseByDuration","startNumber","time","toSegments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","keyFunction","sort","getMediaGroupPlaylists","mediaGroupPlaylists","master","properties","group","label","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","AUDIO","SUBTITLES","CODECS","bandwidth","frameRate","serviceLocation","videoOnly","audioOnly","vttOnly","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","captionServices","Boolean","VIDEO","isAudioOnly","organizedAudioGroup","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","formatAudioPlaylist","organizeAudioPlaylists","organizedVttGroup","m3u8Attributes","vttPlaylist","formatVttPlaylist","organizeVttPlaylists","playlistTimelineStarts","subs","cc","svcObj","svc","service","channel","aspectRatio","easyReader","oldManifest","newManifest","oldPlaylists","newPlaylists","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","updateSequenceNumbers","positionManifestOnTimeline","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","findChildren","getContent","parseDuration","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","prev","parseDivisionValue","parsedValue","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","opt","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","stringToMpdXml","manifestString","parser","mpd","DESCRIPTORS","ID3","getId3Offset","returnSize","getId3Size","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","desc","dependsOnEsId","ocrEsId","descriptors","escape","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","normalizePaths","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","_temp2","_ref2$le","byteCount","countBits","byteIndex","numberToBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","isLikelyFn","isLikely","detectContainerForBytes","version$6","hooks_","hooks","removeHook","FullscreenApi","prefixed","apiMap","specApi","browserApi","log$1","createLogger$1","delimiter","logByType","level","log","lvl","levels","lvlRegExp","resultName","info","LogByTypeFactory","createLogger","subName","subDelimiter","subStyles","resultDelimiter","createNewLogger","newName","newDelimiter","newStyles","all","debug","history","fname","historyItem","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","writable","configurable","Obj","__proto__","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IS_CHROMECAST_RECEIVER","framework","CastReceiverContext","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","IS_TIZEN","IS_WEBOS","IS_SMART_TV","TOUCH_ENABLED","isReal","maxTouchPoints","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","appendContent","prependTo","hasClass","classToCheck","throwIfWhitespace","classList","contains","addClass","classesToAdd","removeClass","classesToRemove","toggleClass","classToToggle","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","includes","blockTextSelection","focus","unblockTextSelection","computedStyle","findPosition","offsetParent","fullscreenElement","offsetLeft","getPointerPosition","translated","transform","assignedSlot","parentElement","transformValue","matrix","m41","m42","host","boxTarget","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","copyStyleSheetsToWindow","styleSheet","cssRules","rule","cssText","head","link","rel","mediaText","Dom","videojs$1","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","createStyleElement","setTextContent","DomData","WeakMap","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","deprecatedProps","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","keyCode","supportsPassive","passiveEvents","guid","hash","handlersCopy","addEventListener","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","debounce","immediate","debounced","later","cancel","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","oldTimeout","objName","name_","isEvented","eventBusEl_","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","isDisposed","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","currentChild","setIcon","iconName","experimentalSvgIcons","xmlnsURL","iconContainer","svgEl","useEl","iconIsSet_","querySelector","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childFound","compEl","parentOptions","handleAdd","playerOptions","workingChildren","Tech","some","wchild","isTech","buildCSSClass","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","currentDimensions","currentWidth","currentHeight","getPositions","boundingClientRect","blur","handleKeyDown","spatialNavigation","enabled","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","getIsDisabled","getIsExpresslyInert","inert","getIsFocusable","tabIndex","getIsAvailableToBeFocused","isVisibleStyleProperty","elementStyle","thisVisibility","elementCenter","clientWidth","clientHeight","pointContainer","isVisible","opacity","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","createTimeRanges$1","defaultImplementation","guide","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","isPromise","silencePromise","errorTypes","MEDIA_ERR_CUSTOM","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_ENCRYPTED","trackToJson_","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","previouslyActiveEl_","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","originalEvent","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","TrackList","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","disableOthers","selected","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","getAbsoluteURL","getFileExtension","isCrossOrigin","winLoc","origin","Url","parseCues","srcContent","errors","addCue","groupCollapsed","groupEnd","loadTrack","crossOrigin","tech_","loaded_","TextTrack","tech","srclang","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","originalCue_","textTracks","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","NONE","LOADED","LOADING","ERROR","NORMAL","ListClass","changing_","enabledChange_","TrackClass","capitalName","selectedChange_","getterName","privateName","REMOTE","remoteText","remoteTextEl","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","props","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","setCrossOrigin","error_","played","setScrubbing","_isScrubbing","scrubbing","setCurrentTime","_seconds","trackListChanges","addWebVttScript_","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","addRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","override","overrideNativeVideoTracks","canPlayType","_type","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","mwFactory","mwrest","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","backKeyCode","SpatialNavKeyCodes","codes","ff","rw","back","isEventKey","keyName","getEventName","SpatialNavigation","focusableComponents","isListening_","isPaused_","onKeyDown_","lastFocusedComponent_","updateFocusableComponents","refocusComponent","handlePlayerFocus_","handlePlayerBlur_","stop","actualEvent","action","performMediaAction_","userSeek_","liveTracker","isLive","nextSeekedFromUser","resume","nextFocusedElement","isChildrenOfPlayer","currentComponent","getCurrentComponent","closest","searchForTrackSelect_","currentTarget","searchForChildrenCandidates","componentsArray","items","findSuitableDOMChild","searchForSuitableChild","suitableChild","curComp","activeElement","currentFocusedComponent","currentPositions","candidates","isInDirection_","bestCandidate","findBestCandidate_","focusedComponent","currentCenter","minDistance","candidate","candidateCenter","distance","calculateDistance_","srcRect","targetRect","userActive","center1","center2","dx","dy","techOrder","techName","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","darkGray","lightGray","fontMap","monospace","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","getCSSPositionValue","updateDisplayHandler","updateDisplayOverlay","toggleDisplay","preselectTrack","screenOrientation","orientation","changeOrientationEvent","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","videoHeight","supports","playerWidth","playerHeight","playerAspectRatio","videoAspectRatio","videoWidth","insetInlineMatch","insetBlockMatch","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontVariant","cueEl","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateTextNode_","span","labelText_","textNode_","enableSmoothSeeking","updateContent","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","updateShowing","SeekToLive","updateLiveEdgeStatus","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","spatialNavOptions","spatialNavEnabled","horizontalSeek","stepBack","stepForward","bool","vertical_","percentify","partEls_","loadedText","separator","percentageEl_","seekableEnd","bufferedEnd","percent_","dataset","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","mouseDown","newTime","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","handlePictureInPictureAudioModeChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","enableDocumentPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","toLocaleString","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","menuItemEl","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","ControlBar","ErrorDisplay","TextTrackSelect","selectLabelledbyIds","legendId","labelId","SelectOptions","optionText","optionId","option","TextTrackFieldset","legendElement","legendText","selects","selectConfig","selectConfigs","selectClassName","textTrackSelect","TextTrackSettingsColors","textTrackComponentid","ElFgColorFieldset","fieldSets","ElBgColorFieldset","ElWinColorFieldset","TextTrackSettingsFont","TrackSettingsControls","defaultsDescription","resetButton","doneButton","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","parseOptionValue","renderModalComponents","endDialog","setDefaults","persistTextTrackSettings","bindFunctionsToSelectsAndButtons","restoreSettings","textTrackSettingsColors","textTrackSettingsFont","trackSettingsControls","saveSettings","selectedIndex","setValues","setSelectedOption","getItem","setItem","removeItem","ttDisplay","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults$1","trackingThreshold","liveTolerance","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","updateDom_","techEl","techAriaAttrs","techAriaAttr","defaults","initialDisplay","takeFocus","preventScroll","forceDisplayTimeout","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","Html5","crossoriginTracks","currentSrc","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","resetSourceset_","disposeMediaElement","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","setupSourceset","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","lowerCaseType","proxyNativeTracksForType_","elTracks","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","boundUpdatePlayerHeightOnAudioOnlyMode_","updatePlayerHeightOnAudioOnlyMode_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","controlBarHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","parsedSVG","sprite","majorVersion","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","deviceClassNames","defaultsStyleEl","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","aspectRatio_","width_","height_","idClass","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","addedTrack","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","trackEls","trackObjs","trackEl","textTrackConverter","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","fullscreen","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","pipContainer","titleBar","requestWindow","pipWindow","pipVideo","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","stopListeningForErrors","sourceTech","vhs","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","playerChildren","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","deprecateForMajor","oldName","warned","deprecate","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","rootNode","getRootNode","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","getAllPlayers","use","writeable","mergeOptions","addLanguage","EventTarget","NetworkBadStatus","NetworkRequestFailed","NetworkRequestAborted","NetworkRequestTimeout","NetworkBodyParserFailed","StreamingHlsPlaylistParserError","StreamingDashManifestParserError","StreamingContentSteeringParserError","StreamingVttParserError","StreamingFailedToSelectNextSegment","StreamingFailedToDecryptSegment","StreamingFailedToTransmuxSegment","StreamingFailedToAppendSegment","StreamingCodecsChangeError","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","version$5","qualityLevels","originalPluginFn","qualityLevelList","disposeHandler","initPlugin$1","resolveManifestRedirect","req","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backwardDuration","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","canUseFudgeFactor","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","groupID","setupMediaPlaylist","playlistErrors_","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","DateRangesStorage","offset_","pendingDateRanges_","processedDateRanges_","setOffset","firstSegment","setPendingDateRanges","trimProcessedDateRanges_","pendingDateRange","processDateRange","getDateRangesToProcess","dateRangeClasses","dateRangesToProcess","classListIndex","getStreamingNetworkErrorMetadata","parseFailure","isBadStatus","isFailure","errorMetadata","isBadStatusOrParseFailure","errorType","timedout","erroType","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newIndex","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","playlistMetadataPayload","renditions","PlaylistLoader","logger_","vhs_","addDateRangesToTextTrack_","addDateRangesToTextTrack","vhsOptions","customTagParsers","customTagMappers","llhls","dateRangesStorage_","handleMediaupdatetimeout_","handleLoadedPlaylist_","mediaPlaylist","availableDateRanges","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","onwarn","oninfo","customParser","parseManifest","playlistObject","playlistInfo","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","parsedPlaylist","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","mainForMedia","updateOrDeleteClone","isUpdate","pathway","ID","oldPlaylistUri","oldPlaylistId","newPlaylistUri","createCloneURI_","newPlaylistId","createCloneAttributes_","updatedPlaylist","createClonePlaylist_","updateOrDeleteCloneMedia","oldMediaPlaylist","createClonedMediaGroups_","addClonePathway","basePlaylist","playlistId","baseID","newUri","newPlaylistID","newMediaPlaylist","newProps","baseURI","hostname","HOST","PARAMS","oldAttributes","getKeyIdSet","keyIds","keysystem","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","xhrFactory","XhrFunction","beforeRequest","Vhs","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","requestSet","newOptions","requestCallback","callAllRequestHooks","responseSet","responseCallback","callAllResponseHooks","originalAbort","segmentXhrHeaders","Range","byterangeEnd","byterangeStart","byterangeStr","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","ascii","utils","tagDump","textRanges","seekToProgramTime","programTime","retryCount","seekTo","pauseAfterSeek","verifyProgramDateTimeTags","matchedSegment","lastSegmentStart","lastSegmentDuration","videoTimingInfo","transmuxedPresentationEnd","transmuxedPresentationStart","transmuxerPrependedSeconds","estimatedStart","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","equivalentSidx","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","addMetadataToTextTrack","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","_len","buffers","_key","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","containerRequest","sidxContainer","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","manifestInfo","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","utcTiming","UTCTimingNode","parseUTCTimingScheme","clientOffset_","serverTime","oldMain","newMain","mainXml","parsedManifestInfo","manifestUri","periodNodes","periods","priorPeriod","priorPeriodAttributes","mpdType","getPeriodStart","contentSteeringInfo","representationInfo","inheritAttributes","parseMainXml","noChanges","playlistUpdate","removeOldMediaGroupLabels","updateMain","location","addEventStreamToMetadataTrack_","parsedManifest","mpl","mup","createMUPTimeout_","mediaGroupSidx","filterChangedSidxMappings","mediaID","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","cueTime","frames","defaultKID","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","Stream$8","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","ONE_SECOND_IN_TS$4","clock$2","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","coneOfSilence","metaTable","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","unicode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","indent","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","indentations","isColorPAC","isNormalChar","logWarning","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf","typedArray","fromIndex","currentIndex","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","owner","privateData","parseId3","parseId3Frames","frameSize","frameStart","tagSize","parseSyncSafeInteger","StreamTypes$3","id3","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","bin","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","logs","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","seiNals","matchingSample","findSeiNals","parseCaptionNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","uint8ToCString","curChar","retString","getUint64$1","isDefined","emsg$1","parseEmsgBox","boxData","scheme_id_uri","presentation_time","presentation_time_delta","event_duration","emsgBox","message_data","emsg","hasScheme","isValidV0Box","isValidV1Box","isValidEmsgBox","scaleTime","timeDelta","toUnsigned","toHexString","parseType$1","window$1","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","segmentData","parsedBox","parsedId3Frames","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","parsePsi_","inspectTs_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeEmsgID3","id3Frames","emsgData","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","triggerSegmentEventFn","transmuxedData","waitForEndedTimelineEvent","currentTransmux","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","segmentInfoPayload","transmuxQueue","processAction","segmentTransmuxer","enqueueAction","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","keyInfo","parseInitSegment","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","transmux","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","encryptedBytes","decryptionWorker","decryptionHandler","decrypted","keyBytes","decryptError","encrypted","mediaSegmentRequest","xhrOptions","abortFn","progressFn","didError","segmentFinish","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","waitForCompletion","keyRequestOptions","keyRequestCallback","keyXhr","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","handleSegmentResponse","segmentXhr","progressEvent","getProgressStats","firstBytesReceivedAt","handleProgress","loadendState","activeXhr","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","customPixelRatio","systemBandwidth","playlistController_","compactSegmentUrlDescription","pathname","dateRangeAttr","scte35Out","scte35In","dateRangeKeysToOmit","createMetadataTrackIfNotExists","inbandTextTracks","metadataTrack_","inBandMetadataTrackDispatchType","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","shouldFixBadTimelineChanges","pendingMainTimelineChange","hasPendingTimelineChanges","differentPendingChanges","fixBadTimelineChange","segmentLoader","resetEverything","segmentTooLong","maxDuration","isEncrypted","ke","isMediaInitialization","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","shouldForceTimestampOffsetAfterResync_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaSequenceSync_","getMediaSequenceSync","term","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","diagnostics","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","resetAppendedStatus","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","isReliable","getSyncInfoFromMediaSequenceSync_","mediaInfoForTime","nextSegment","hasIndependentSegments","lastSegmentLastPart","forceTimestampOffset","generateSegmentInfo_","finalTargetTime","mediaSequenceSyncInfo","getSyncInfoForTime","isAppended","nextMediaSequenceSyncInfo","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","timestampOffsetForSegment","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","def","captionService","createCaptionsTrackIfNotExists","captionArray","Cue","addCaptionData","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","concatSegments","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","bandwidthInfo","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","markAppended","segmentDurationMessage","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","getTroublesomeSegmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","mime","addSourceBuffer","removeSourceBuffer","newCodecBase","oldCodec","codecsChangeInfo","changeType","pushQueue","onUpdateend","descriptiveString","bufferedRangesStr","bufferedRangesToString","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","uniqueCues","cueKey","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","MPEGTS","LOCAL","mapData","mappingObj","diff","handleRollover_","firstStart","lastStart","valueIn90khz","referenceIn90khz","findAdCue","mediaTime","adStartTime","adEndTime","SyncInfo","start_","end_","segmentIndex_","partIndex_","appended_","isInRange","SyncInfoData","segmentSyncInfo","partsSyncInfo","segmentSyncInfo_","partsSyncInfo_","hasPartsSyncInfo","resetAppendStatus","partSyncInfo","MediaSequenceSync","storage_","diagnostics_","isReliable_","syncInfoData","isReliablePlaylist_","updateStorage_","calculateBaseTime_","getSyncInfoForMediaSequence","startingMediaSequence","startingTime","newStorage","newDiagnostics","currentMediaSequence","prevSyncInfoData","segmentStart","segmentEnd","segmentIsAppended","currentPartStart","partStart","partEnd","partIsAppended","fallback","DependantMediaSequenceSync","parent_","syncPointStrategies","run","mediaSequenceSync","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","vtt","mediaSequenceStorage_","syncPoints","runStrategies_","syncPointInfo","strategy","selectSyncPoint_","getExpiredTime","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","timelineChangeInfo","workerCode","aesTables","AES","tmp","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","audioTrackKind_","stopLoaders","activePlaylistLoader","startLoaders","playlistLoader","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","segmentLoaders","initialize","variantLabel","isMainPlaylist","useForcedSubtitles","groupMatch","SteeringManifest","priority_","pathwayClones_","version_","ttl","ttl_","reloadUri","reloadUri_","pathwayClones","ContentSteeringController","currentPathway","defaultPathway","availablePathways_","steeringManifest","proxyServerUrl_","manifestType_","ttlTimeout_","request_","currentPathwayClones","nextPathwayClones","excludedSteeringManifestURLs","xhr_","getBandwidth_","assignTagProperties","steeringTag","serverUri","steeringUri","startsWith","decodeDataUriManifest_","pathwayId","defaultServiceLocation","proxyServerURL","requestSteeringManifest","getRequestURI","errorInfo","retrySeconds","startTTLTimeout_","steeringManifestJson","assignSteeringProperties_","parsedMetadata","contentSteeringManifest","setProxyServerUrl_","steeringUrl","steeringUrlObject","proxyServerUrlObject","encodeURI","setSteeringParams_","dataUri","urlObject","getPathway","networkThroughput","pathwayKey","throughputKey","steeringJson","TTL","nextPathway","pathwaysByPriority","chooseNextPathway","proxyURI","steeringURI","ttlMS","clearTTLTimeout_","addAvailablePathway","clearAvailablePathways","excludePathway","didDASHTagChange","newTag","getAvailablePathways","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","getActiveGroup","onGroupChanged","lastTrack_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","keyStatusMap_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","contentSteeringController_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","selectPlaylist","shouldSwitchToMedia_","switchMedia_","newId","renditionInfo","switchMediaForDASHContentSteering_","dashMediaPlaylists","abrTimer_","defaultPlaylists","groupKeys","defaultGroup","requestTimeout","audioSegmentLoader","mainSegmentLoader","variants","groupPropertyList","previousActiveLoader","lastGroup","lastGroup_","onGroupChanging","lastTrack","pc","fastQualityChange_","activeTrack_","onAudioTrackChanged","setupMediaGroups","triggerPresenceUsage_","setupFirstPlay","selectedMedia","attachContentSteeringListeners_","initContentSteeringController_","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","waitingForFastQualityPlaylistReceived_","runFastQualitySwitch_","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","startPoint","mainMediaInfo","absolutePlaylistEnd","pathwayAttribute_","reIncludeDelay","excludeThenChangePathway_","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","seekableRanges","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedCodecs","unsupportedAudio","supporter","switchMessages","newCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","adOffset","adTotal","updateAdCues","newMax","metadataTrack","addDateRangeMetadata","videoDuration","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","addMetadata","resetContentSteeringController_","availablePathways","newPathways","didPathwaysChange","handlePathwayClones_","didEnablePlaylists","differentPathwayId","noExcludeUntil","changeSegmentPathway_","entries","oldClone","equalPathwayClones_","aParams","bParams","excludeNonUsablePlaylistsByKeyId_","nonUsableKeyStatusCount","NON_USABLE","keyIdSet","USABLE","hasUsableKeyStatus","nonUsableExclusion","isNonHD","excludedForNonUsableKey","addKeyStatus_","formattedKeyIdString","uInt8Buffer","padStart","bufferToHexString","updatePlaylistByKeyStatus","excludeNonUsableThenChangePlaylist_","Representation","vhsHandler","qualityChangeFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","playedRanges_","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","bufferedRanges","waiting_","playedRanges","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","isLLHLS","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gapInfo","gaps","findGaps","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","getVhsLocalStorage","storedObject","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","onRequest","onResponse","offRequest","offResponse","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","setOptions","playbackWatcherOptions","playbackWatcher_","attachStreamingEventListeners_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","initializationFinishedPromises","keySessionCreatedPromises","waitForKeySessionCreation","handleWaitingForKey_","didSetupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","setupEmeOptions","qualityLevels_","handleVhsLoadedMetadata","convertToProgramTime","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","playerTime","offsetFromSegmentStart","playerTimeToProgramTime","toISOString","getProgramTime","setupXhrHooks_","VhsSourceHandler","simpleType","getOverrideNative","defaultOverrideNative","BufferTracking","_this","timer","bufferPosition","bufferStart","bufferCount","bufferingConfig","includeScrub","curTime","secondsToLoad","PauseTracking","pauseCount","locked","PercentileTracking","first","third","seekCount","getDuration","quarter","PerformanceTracking","performance","watchedDuration","bufferDuration","initialLoadTime","timestamps","triggerAndReset","PlayTracking","hasBeenTriggered","loadstart","loadend","SeekTracking","eventTracking","_getHeightAndSet","targetHeight","firstElementChild","_unsetAfterAnimation","triggerCustomEvent","_activateAudioPlayers","_log","suffix","vjsButtonComponent","extend","listingElement","_findAncestor","buttonElement","_registerTranscriptButton","videojsActivate"],"sourceRoot":""}