<?php

$finder = PhpCsFixer\Finder::create()
    ->exclude([
        '.git',
        'bootstrap/cache',
        'database/dumps', // WEB-2013: Obsolete!
        'node_modules',
        'public',
        'resources/lang',
        'storage',
        'vendor',
    ])
    ->in(__DIR__)
;

return PhpCsFixer\Config::create()
    ->setIndent('    ')
    ->setUsingCache(false)
    ->setRules([
        'align_multiline_comment' => [
            'comment_type' => 'phpdocs_like',
        ],
        'array_indentation' => true,
        'array_syntax' => [
            'syntax' => 'short',
        ],
        'backtick_to_shell_exec' => true,
        'binary_operator_spaces' => [
            'default' => 'single_space',
        ],
        'blank_line_after_namespace' => true,
        'blank_line_after_opening_tag' => true,
        'blank_line_before_statement' => [
            'statements' => [
                'for',
                'foreach',
                'if',
                'switch',
                'try',
                'while',
            ],
        ],
        // The `braces` fixer does way too much, not just fix braces:
        // https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/823
        // 'braces' => [
        //     'allow_single_line_closure' => false,
        //     'position_after_anonymous_constructs' => 'same',
        //     'position_after_control_structures' => 'same',
        //     'position_after_functions_and_oop_constructs' => 'next',
        // ],
        'cast_spaces' => true,
        // Also removes lines around class body. For reverse:
        // https://github.com/FriendsOfPHP/PHP-CS-Fixer/pull/3688
        // 'class_attributes_separation' => [
        //     'elements' => [
        //         'const',
        //         'method',
        //         'property',
        //     ],
        // ],
        'class_definition' => [
            'multi_line_extends_each_single_line' => true,
            'single_item_single_line' => true,
            'single_line' => false,
        ],
        'class_keyword_remove' => false,
        'combine_consecutive_issets' => false,
        'combine_consecutive_unsets' => false,
        'combine_nested_dirname' => true,
        'comment_to_phpdoc' => false,
        'compact_nullable_typehint' => true,
        'concat_space' => [
            'spacing' => 'one',
        ],
        'date_time_immutable' => false,
        'declare_equal_normalize' => [
            'space' => 'single',
        ],
        'declare_strict_types' => false, // ...but consider doing later!
        'dir_constant' => true,
        'elseif' => true,
        'encoding' => true,
        'ereg_to_preg' => true,
        'error_suppression' => false, // Unsure of function
        'escape_implicit_backslashes' => [
            'double_quoted' => true,
            'heredoc_syntax' => true,
            'single_quoted' => false, // FQCN conflict
        ],
        'explicit_indirect_variable' => true,
        'explicit_string_variable' => true,
        'final_class' => false,
        'final_internal_class' => false,
        'fopen_flag_order' => true,
        'fopen_flags' => true,
        'full_opening_tag' => true,
        'fully_qualified_strict_types' => true,
        'function_declaration' => [
            'closure_function_spacing' => 'one',
        ],
        'function_to_constant' => false, // For `get_class` magic
        'function_typehint_space' => true,
        // general_phpdoc_annotation_remove
        // header_comment
        // heredoc_indentation
        // heredoc_to_nowdoc
        'implode_call' => false,
        'include' => true,
        'increment_style' => [
            'style' => 'post',
        ],
        'indentation_type' => true,
        'is_null' => false, // ...but consider implementing
        'line_ending' => true,
        'linebreak_after_opening_tag' => true,
        'list_syntax' => [
            'syntax' => 'short',
        ],
        'logical_operators' => true,
        'lowercase_cast' => true,
        'lowercase_constants' => true,
        'lowercase_keywords' => true,
        'lowercase_static_reference' => true,
        'magic_constant_casing' => true,
        'magic_method_casing' => true,
        'mb_str_functions' => false, // ...but potentially useful for i18n
        'method_argument_space' => [
            'keep_multiple_spaces_after_comma' => false,
            'on_multiline' => 'ensure_fully_multiline',
        ],
        'method_chaining_indentation' => true,
        'modernize_types_casting' => true,
        'multiline_comment_opening_closing' => true,
        'multiline_whitespace_before_semicolons' => [
            'strategy' => 'no_multi_line', // vs. 'new_line_for_chained_calls'
        ],
        'native_constant_invocation' => false, // Performance
        'native_function_casing' => true,
        'native_function_invocation' => false, // Performance
        'native_function_type_declaration_casing' => true,
        'new_with_braces' => true,
        'no_alias_functions' => false, // Read more on this...
        'no_alternative_syntax' => true,
        'no_binary_string' => true,
        'no_blank_lines_after_class_opening' => false, // cf. 'class_attributes_separation'
        'no_blank_lines_after_phpdoc' => false, // wrecks config
        'no_blank_lines_before_namespace' => false, // cf. 'blank_line_after_namespace'
        'no_break_comment' => true,
        'no_closing_tag' => true,
        'no_empty_comment' => true,
        'no_empty_phpdoc' => true,
        'no_empty_statement' => true,
        'no_extra_blank_lines' => [
            'extra',
        ],
        'no_homoglyph_names' => true,
        'no_leading_import_slash' => true,
        'no_leading_namespace_whitespace' => true,
        'no_mixed_echo_print' => [
            'use' => 'echo',
        ],
        'no_multiline_whitespace_around_double_arrow' => true,
        'no_null_property_initialization' => true,
        'no_php4_constructor' => true,
        'no_short_bool_cast' => true,
        'no_short_echo_tag' => true,
        'no_singleline_whitespace_before_semicolons' => true, // TODO: Verify?
        'no_spaces_after_function_name' => true,
        'no_spaces_around_offset' => [
            'inside',
            'outside'
        ],
        'no_spaces_inside_parenthesis' => true,
        'no_superfluous_elseif' => true,
        // Interesting! Detects strict typing.
        // cf. https://github.com/FriendsOfPHP/PHP-CS-Fixer/pull/3110
        'no_superfluous_phpdoc_tags' => [
            'allow_mixed' => true,
        ],
        'no_trailing_comma_in_list_call' => true,
        'no_trailing_comma_in_singleline_array' => true,
        'no_trailing_whitespace' => true,
        'no_trailing_whitespace_in_comment' => true,
        'no_unneeded_control_parentheses' => [
            'break',
            'clone',
            'continue',
            'echo_print',
            'return',
            'switch_case',
            'yield',
        ],
        'no_unneeded_curly_braces' => true,
        'no_unneeded_final_method' => true,
        'no_unreachable_default_argument_value' => true,
        'no_unset_cast' => true,
        'no_unset_on_property' => false,
        'no_unused_imports' => true,
        'no_useless_else' => true,
        'no_useless_return' => true,
        'no_whitespace_before_comma_in_array' => true,
        'no_whitespace_in_blank_line' => true,
        'non_printable_character' => true,
        'normalize_index_brace' => true,
        'not_operator_with_space' => false,
        'not_operator_with_successor_space' => false,
        'object_operator_without_whitespace' => true,
        // 'ordered_class_elements' => [
        //     'order' => [
        //         'use_trait',
        //         'constant_public',
        //         'constant_protected',
        //         'constant_private',
        //         // 'property_public_static',
        //         // 'property_protected_static',
        //         // 'property_private_static',
        //         'property_public',
        //         'property_protected',
        //         'property_private',
        //         'construct',
        //         'destruct',
        //         'magic',
        //         'phpunit',
        //         'method_public',
        //         'method_protected',
        //         'method_private',
        //     ],
        //     'sortAlgorithm' => 'none',
        // ],
        'ordered_imports' => false, // https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/4305
        'ordered_interfaces' => false, // Risky!
        // 'php_unit_construct' => true,
        // php_unit_dedicate_assert
        // php_unit_dedicate_assert_internal_type
        // php_unit_expectation
        // php_unit_fqcn_annotation
        // php_unit_internal_class
        // 'php_unit_method_casing' => [ // testSearchable conflict
        //     'case' => 'snake_case',
        // ],
        // php_unit_mock
        // php_unit_mock_short_will_return
        // php_unit_namespaced
        // php_unit_no_expectation_annotation
        // php_unit_ordered_covers
        // php_unit_set_up_tear_down_visibility
        // php_unit_size_class
        // php_unit_strict
        // php_unit_test_annotation
        // php_unit_test_case_static_method_calls
        // php_unit_test_class_requires_covers
        // phpdoc_add_missing_param_annotation // vs. 'no_superfluous_phpdoc_tags'
        // phpdoc_align
        // phpdoc_annotation_without_dot
        // phpdoc_indent
        // phpdoc_inline_tag
        // phpdoc_no_access
        // phpdoc_no_alias_tag
        // phpdoc_no_empty_return
        // phpdoc_no_package
        // phpdoc_no_useless_inheritdoc
        // phpdoc_order
        // phpdoc_return_self_reference
        // phpdoc_scalar
        // phpdoc_separation
        // phpdoc_single_line_var_spacing
        // phpdoc_summary
        // phpdoc_to_comment
        // phpdoc_to_return_type
        // phpdoc_trim
        // phpdoc_trim_consecutive_blank_line_separation
        // phpdoc_types
        // phpdoc_types_order
        // phpdoc_var_annotation_correct_order
        // phpdoc_var_without_name
        'pow_to_exponentiation' => false,
        'protected_to_private' => false, // Definitely not!
        'psr0' => false, // Lowercases 'App' => 'app', etc.
        'psr4' => true,
        'random_api_migration' => false, // `rand` is alias of `mt_rand`
        'return_assignment' => false,
        'return_type_declaration' => [
            'space_before' => 'none',
        ],
        'self_accessor' => false, // Buggy with transformers
        'semicolon_after_instruction' => true,
        'set_type_to_cast' => true,
        'short_scalar_cast' => true,
        'simple_to_complex_string_variable' => false,
        'simplified_null_return' => false,
        'single_blank_line_at_eof' => true,
        'single_blank_line_before_namespace' => true,
        'single_class_element_per_statement' => [
            'const',
            'property',
        ],
        'single_import_per_statement' => true,
        'single_line_after_imports' => true,
        'single_line_comment_style' => [
            'comment_types' => [
                // 'asterisk', // Requires using /** instead of /*
                'hash',
            ],
        ],
        'single_quote' => true, // Rough on CreateSwaggerDocs and Documentable
        'single_trait_insert_per_statement' => false, // Bad. Does not multiline!
        'space_after_semicolon' => false, // Buggy with lambdas
        'standardize_increment' => false, // Buggy with order
        'standardize_not_equals' => true,
        'static_lambda' => false, // But interesting...
        'strict_comparison' => true,
        'strict_param' => false, // TODO: Learn about $strict func param!
        'string_line_ending' => true,
        'switch_case_semicolon_to_colon' => true,
        'switch_case_space' => true,
        'ternary_operator_spaces' => true,
        'ternary_to_null_coalescing' => true,
        'trailing_comma_in_multiline_array' => true,
        'trim_array_spaces' => true,
        'unary_operator_spaces' => true,
        'visibility_required' => [
            'property',
            'method',
            'const',
        ],
        'void_return' => false, // Nice, but too much...
        'whitespace_after_comma_in_array' => true,
        'yoda_style' => false,

        // https://github.com/FriendsOfPHP/PHP-CS-Fixer/pull/4435
        // 'single_space_after_construct' => [
        //     'constructs' => [
        //         // 'break',
        //         'case',
        //         'catch',
        //         // 'continue',
        //         'do',
        //         'echo',
        //         // 'else',
        //         // 'elseif',
        //         'for',
        //         'foreach',
        //         'goto',
        //         'if',
        //         'include',
        //         'include_once',
        //         'new',
        //         'print',
        //         'require',
        //         'require_once',
        //         // 'return',
        //         'switch',
        //         'throw',
        //         'try',
        //         'while',
        //         // 'yield',
        //         // 'yield_from',
        //     ]
        // ],
    ])
    ->setFinder($finder)
;
